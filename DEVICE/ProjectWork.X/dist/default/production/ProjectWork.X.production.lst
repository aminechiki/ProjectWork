

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed May 31 14:51:38 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F877A Definitions
    83                           ; 
    84                           ; SFR Addresses
    85     0000                     	;# 
    86     0001                     	;# 
    87     0002                     	;# 
    88     0003                     	;# 
    89     0004                     	;# 
    90     0005                     	;# 
    91     0006                     	;# 
    92     0007                     	;# 
    93     0008                     	;# 
    94     0009                     	;# 
    95     000A                     	;# 
    96     000B                     	;# 
    97     000C                     	;# 
    98     000D                     	;# 
    99     000E                     	;# 
   100     000E                     	;# 
   101     000F                     	;# 
   102     0010                     	;# 
   103     0011                     	;# 
   104     0012                     	;# 
   105     0013                     	;# 
   106     0014                     	;# 
   107     0015                     	;# 
   108     0015                     	;# 
   109     0016                     	;# 
   110     0017                     	;# 
   111     0018                     	;# 
   112     0019                     	;# 
   113     001A                     	;# 
   114     001B                     	;# 
   115     001B                     	;# 
   116     001C                     	;# 
   117     001D                     	;# 
   118     001E                     	;# 
   119     001F                     	;# 
   120     0081                     	;# 
   121     0085                     	;# 
   122     0086                     	;# 
   123     0087                     	;# 
   124     0088                     	;# 
   125     0089                     	;# 
   126     008C                     	;# 
   127     008D                     	;# 
   128     008E                     	;# 
   129     0091                     	;# 
   130     0092                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0098                     	;# 
   134     0099                     	;# 
   135     009C                     	;# 
   136     009D                     	;# 
   137     009E                     	;# 
   138     009F                     	;# 
   139     010C                     	;# 
   140     010D                     	;# 
   141     010E                     	;# 
   142     010F                     	;# 
   143     018C                     	;# 
   144     018D                     	;# 
   145     0000                     	;# 
   146     0001                     	;# 
   147     0002                     	;# 
   148     0003                     	;# 
   149     0004                     	;# 
   150     0005                     	;# 
   151     0006                     	;# 
   152     0007                     	;# 
   153     0008                     	;# 
   154     0009                     	;# 
   155     000A                     	;# 
   156     000B                     	;# 
   157     000C                     	;# 
   158     000D                     	;# 
   159     000E                     	;# 
   160     000E                     	;# 
   161     000F                     	;# 
   162     0010                     	;# 
   163     0011                     	;# 
   164     0012                     	;# 
   165     0013                     	;# 
   166     0014                     	;# 
   167     0015                     	;# 
   168     0015                     	;# 
   169     0016                     	;# 
   170     0017                     	;# 
   171     0018                     	;# 
   172     0019                     	;# 
   173     001A                     	;# 
   174     001B                     	;# 
   175     001B                     	;# 
   176     001C                     	;# 
   177     001D                     	;# 
   178     001E                     	;# 
   179     001F                     	;# 
   180     0081                     	;# 
   181     0085                     	;# 
   182     0086                     	;# 
   183     0087                     	;# 
   184     0088                     	;# 
   185     0089                     	;# 
   186     008C                     	;# 
   187     008D                     	;# 
   188     008E                     	;# 
   189     0091                     	;# 
   190     0092                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     010C                     	;# 
   200     010D                     	;# 
   201     010E                     	;# 
   202     010F                     	;# 
   203     018C                     	;# 
   204     018D                     	;# 
   205                           
   206                           	psect	idataCOMMON
   207     0003                     __pidataCOMMON:
   208                           
   209                           ;initializer for _keypressed
   210     0003  3463               	retlw	99
   211                           
   212                           	psect	idataBANK0
   213     0E64                     __pidataBANK0:
   214                           
   215                           ;initializer for _randx
   216     0E64  3401               	retlw	1
   217     0E65  3400               	retlw	0
   218     0E66  3400               	retlw	0
   219     0E67  3400               	retlw	0
   220                           
   221                           	psect	idataBANK1
   222     0E63                     __pidataBANK1:
   223                           
   224                           ;initializer for _maxFail
   225     0E63  3403               	retlw	3
   226                           
   227                           	psect	strings
   228     0500                     __pstrings:
   229     0500                     stringtab:
   230     0500                     __stringtab:
   231                           
   232                           ;	String table - string pointers are 1 byte each
   233     0500  1BFF               	btfsc	btemp+1,7
   234     0501  2D0A               	ljmp	stringcode
   235     0502  1383               	bcf	3,7
   236     0503  187F               	btfsc	btemp+1,0
   237     0504  1783               	bsf	3,7
   238     0505  0800               	movf	0,w
   239     0506  0A84               	incf	4,f
   240     0507  1903               	skipnz
   241     0508  0AFF               	incf	btemp+1,f
   242     0509  0008               	return
   243     050A                     stringcode:
   244     050A                     stringdir:
   245     050A  3005               	movlw	high stringdir
   246     050B  008A               	movwf	10
   247     050C  0804               	movf	4,w
   248     050D  0A84               	incf	4,f
   249     050E  0782               	addwf	2,f
   250     050F                     __stringbase:
   251     050F  3400               	retlw	0
   252     0510                     __end_of__stringtab:
   253     0510                     _keys:
   254     0510  342A               	retlw	42
   255     0511  3437               	retlw	55
   256     0512  3434               	retlw	52
   257     0513  3431               	retlw	49
   258     0514  3430               	retlw	48
   259     0515  3438               	retlw	56
   260     0516  3435               	retlw	53
   261     0517  3432               	retlw	50
   262     0518  3423               	retlw	35
   263     0519  3439               	retlw	57
   264     051A  3436               	retlw	54
   265     051B  3433               	retlw	51
   266     051C                     __end_of_keys:
   267     051C                     _rowMask:
   268     051C  3401               	retlw	1
   269     051D  3402               	retlw	2
   270     051E  3404               	retlw	4
   271     051F  3408               	retlw	8
   272     0520                     __end_of_rowMask:
   273     0520                     _colMask:
   274     0520  34FE               	retlw	254
   275     0521  34FD               	retlw	253
   276     0522  34FB               	retlw	251
   277     0523                     __end_of_colMask:
   278     001A                     _RCREG	set	26
   279     0019                     _TXREG	set	25
   280     000C                     _PIR1	set	12
   281     0018                     _RCSTA	set	24
   282     0006                     _PORTB	set	6
   283     0008                     _PORTD	set	8
   284     0009                     _PORTEbits	set	9
   285     0001                     _TMR0	set	1
   286     000B                     _INTCON	set	11
   287     005A                     _T0IF	set	90
   288     0065                     _RCIF	set	101
   289     008C                     _PIE1	set	140
   290     0099                     _SPBRG	set	153
   291     0098                     _TXSTA	set	152
   292     0087                     _TRISC	set	135
   293     0086                     _TRISB	set	134
   294     0089                     _TRISEbits	set	137
   295     0088                     _TRISD	set	136
   296     0081                     _OPTION_REG	set	129
   297     0523                     STR_8:
   298     0523  3452               	retlw	82	;'R'
   299     0524  3469               	retlw	105	;'i'
   300     0525  3467               	retlw	103	;'g'
   301     0526  3465               	retlw	101	;'e'
   302     0527  346E               	retlw	110	;'n'
   303     0528  3465               	retlw	101	;'e'
   304     0529  3472               	retlw	114	;'r'
   305     052A  3461               	retlw	97	;'a'
   306     052B  3472               	retlw	114	;'r'
   307     052C  3465               	retlw	101	;'e'
   308     052D  3420               	retlw	32	;' '
   309     052E  3463               	retlw	99	;'c'
   310     052F  346F               	retlw	111	;'o'
   311     0530  3464               	retlw	100	;'d'
   312     0531  3465               	retlw	101	;'e'
   313     0532  3400               	retlw	0
   314     0533  3400               	retlw	0
   315     0534                     STR_2:
   316     0534  3449               	retlw	73	;'I'
   317     0535  346E               	retlw	110	;'n'
   318     0536  3473               	retlw	115	;'s'
   319     0537  3465               	retlw	101	;'e'
   320     0538  3472               	retlw	114	;'r'
   321     0539  3469               	retlw	105	;'i'
   322     053A  3473               	retlw	115	;'s'
   323     053B  3463               	retlw	99	;'c'
   324     053C  3469               	retlw	105	;'i'
   325     053D  3420               	retlw	32	;' '
   326     053E  3463               	retlw	99	;'c'
   327     053F  346F               	retlw	111	;'o'
   328     0540  3464               	retlw	100	;'d'
   329     0541  3465               	retlw	101	;'e'
   330     0542  3400               	retlw	0
   331     0543  3400               	retlw	0
   332     0544                     STR_7:
   333     0544  3454               	retlw	84	;'T'
   334     0545  3465               	retlw	101	;'e'
   335     0546  346E               	retlw	110	;'n'
   336     0547  3474               	retlw	116	;'t'
   337     0548  342E               	retlw	46	;'.'
   338     0549  3420               	retlw	32	;' '
   339     054A  3465               	retlw	101	;'e'
   340     054B  3473               	retlw	115	;'s'
   341     054C  3461               	retlw	97	;'a'
   342     054D  3475               	retlw	117	;'u'
   343     054E  3472               	retlw	114	;'r'
   344     054F  3469               	retlw	105	;'i'
   345     0550  3474               	retlw	116	;'t'
   346     0551  3469               	retlw	105	;'i'
   347     0552  3400               	retlw	0
   348     0553  3400               	retlw	0
   349     0554                     STR_5:
   350     0554  3443               	retlw	67	;'C'
   351     0555  346F               	retlw	111	;'o'
   352     0556  3464               	retlw	100	;'d'
   353     0557  3469               	retlw	105	;'i'
   354     0558  3463               	retlw	99	;'c'
   355     0559  3465               	retlw	101	;'e'
   356     055A  3420               	retlw	32	;' '
   357     055B  3465               	retlw	101	;'e'
   358     055C  3472               	retlw	114	;'r'
   359     055D  3472               	retlw	114	;'r'
   360     055E  3461               	retlw	97	;'a'
   361     055F  3474               	retlw	116	;'t'
   362     0560  346F               	retlw	111	;'o'
   363     0561  3400               	retlw	0
   364     0562  3400               	retlw	0
   365     0563                     STR_3:
   366     0563  3454               	retlw	84	;'T'
   367     0564  3465               	retlw	101	;'e'
   368     0565  346E               	retlw	110	;'n'
   369     0566  3474               	retlw	116	;'t'
   370     0567  3461               	retlw	97	;'a'
   371     0568  3474               	retlw	116	;'t'
   372     0569  3469               	retlw	105	;'i'
   373     056A  3476               	retlw	118	;'v'
   374     056B  3469               	retlw	105	;'i'
   375     056C  343A               	retlw	58	;':'
   376     056D  3420               	retlw	32	;' '
   377     056E  3400               	retlw	0
   378     056F  3400               	retlw	0
   379     0570                     STR_4:
   380     0570  3442               	retlw	66	;'B'
   381     0571  3465               	retlw	101	;'e'
   382     0572  346E               	retlw	110	;'n'
   383     0573  3476               	retlw	118	;'v'
   384     0574  3465               	retlw	101	;'e'
   385     0575  346E               	retlw	110	;'n'
   386     0576  3475               	retlw	117	;'u'
   387     0577  3474               	retlw	116	;'t'
   388     0578  346F               	retlw	111	;'o'
   389     0579  3421               	retlw	33	;'!'
   390     057A  3400               	retlw	0
   391     057B  3400               	retlw	0
   392     057C                     STR_1:
   393     057C  3450               	retlw	80	;'P'
   394     057D  3449               	retlw	73	;'I'
   395     057E  3443               	retlw	67	;'C'
   396     057F  345F               	retlw	95	;'_'
   397     0580  3430               	retlw	48	;'0'
   398     0581  3430               	retlw	48	;'0'
   399     0582  3430               	retlw	48	;'0'
   400     0583  3431               	retlw	49	;'1'
   401     0584  3400               	retlw	0
   402     0585  3400               	retlw	0
   403     0563                     
   404                           	psect	cinit
   405     0011                     start_initialization:	
   406                           ; #config settings
   407                           
   408     0011                     __initialization:
   409                           
   410                           ; Initialize objects allocated to BANK1
   411     0011  1683               	bsf	3,5	;RP0=1, select bank1
   412     0012  1303               	bcf	3,6	;RP1=0, select bank1
   413     0013  120A  158A  2663  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   414     0018  00B2               	movwf	__pdataBANK1& (0+127)
   415                           
   416                           ; Initialize objects allocated to BANK0
   417     0019  1283               	bcf	3,5	;RP0=0, select bank0
   418     001A  1303               	bcf	3,6	;RP1=0, select bank0
   419     001B  120A  158A  2664  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   420     0020  00E8               	movwf	__pdataBANK0& (0+127)
   421     0021  120A  158A  2665  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   422     0026  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   423     0027  120A  158A  2666  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   424     002C  00EA               	movwf	(__pdataBANK0+2)& (0+127)
   425     002D  120A  158A  2667  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   426     0032  00EB               	movwf	(__pdataBANK0+3)& (0+127)
   427                           
   428                           ; Initialize objects allocated to COMMON
   429     0033  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   430     0038  00F9               	movwf	__pdataCOMMON& (0+127)
   431                           
   432                           ; Clear objects allocated to BANK1
   433     0039  1383               	bcf	3,7	;select IRP bank0
   434     003A  30A0               	movlw	low __pbssBANK1
   435     003B  0084               	movwf	4
   436     003C  30AB               	movlw	low (__pbssBANK1+11)
   437     003D  120A  158A  2668  120A  118A  	fcall	clear_ram0
   438                           
   439                           ; Clear objects allocated to BANK0
   440     0042  3020               	movlw	low __pbssBANK0
   441     0043  0084               	movwf	4
   442     0044  3044               	movlw	low (__pbssBANK0+36)
   443     0045  120A  158A  2668  120A  118A  	fcall	clear_ram0
   444                           
   445                           ; Clear objects allocated to COMMON
   446     004A  01F6               	clrf	__pbssCOMMON& (0+127)
   447     004B  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   448     004C  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   449     004D                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452     004D                     __end_of__initialization:
   453     004D  0183               	clrf	3
   454     004E  120A  118A  2851   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	bssCOMMON
   457     0076                     __pbssCOMMON:
   458     0076                     _keyf:
   459     0076                     	ds	1
   460     0077                     _rowScan:
   461     0077                     	ds	1
   462     0078                     _colScan:
   463     0078                     	ds	1
   464                           
   465                           	psect	dataCOMMON
   466     0079                     __pdataCOMMON:
   467     0079                     _keypressed:
   468     0079                     	ds	1
   469                           
   470                           	psect	bssBANK0
   471     0020                     __pbssBANK0:
   472     0020                     _milliseconds:
   473     0020                     	ds	4
   474     0024                     _datoTastierino:
   475     0024                     	ds	16
   476     0034                     _datoSeriale:
   477     0034                     	ds	16
   478                           
   479                           	psect	dataBANK0
   480     0068                     __pdataBANK0:
   481     0068                     _randx:
   482     0068                     	ds	4
   483                           
   484                           	psect	bssBANK1
   485     00A0                     __pbssBANK1:
   486     00A0                     _old_num_rand:
   487     00A0                     	ds	2
   488     00A2                     _num_rand:
   489     00A2                     	ds	2
   490     00A4                     _fail:
   491     00A4                     	ds	1
   492     00A5                     _success:
   493     00A5                     	ds	1
   494     00A6                     _compare:
   495     00A6                     	ds	1
   496     00A7                     _recieved:
   497     00A7                     	ds	1
   498     00A8                     _old_iT:
   499     00A8                     	ds	1
   500     00A9                     _iT:
   501     00A9                     	ds	1
   502     00AA                     _iS:
   503     00AA                     	ds	1
   504                           
   505                           	psect	dataBANK1
   506     00B2                     __pdataBANK1:
   507     00B2                     _maxFail:
   508     00B2                     	ds	1
   509                           
   510                           	psect	clrtext
   511     0E68                     clear_ram0:	
   512                           ;	Called with FSR containing the base address, and
   513                           ;	W with the last address+1
   514                           
   515     0E68  0064               	clrwdt	;clear the watchdog before getting into this loop
   516     0E69                     clrloop0:
   517     0E69  0180               	clrf	0	;clear RAM location pointed to by FSR
   518     0E6A  0A84               	incf	4,f	;increment pointer
   519     0E6B  0604               	xorwf	4,w	;XOR with final address
   520     0E6C  1903               	btfsc	3,2	;have we reached the end yet?
   521     0E6D  3400               	retlw	0	;all done for this memory range, return
   522     0E6E  0604               	xorwf	4,w	;XOR again to restore value
   523     0E6F  2E69               	goto	clrloop0	;do the next byte
   524                           
   525                           	psect	cstackBANK3
   526     0190                     __pcstackBANK3:
   527     0190                     main@packet:
   528                           
   529                           ; 50 bytes @ 0x0
   530     0190                     	ds	50
   531     01C2                     main@num_rand_s:
   532                           
   533                           ; 16 bytes @ 0x32
   534     01C2                     	ds	16
   535                           
   536                           	psect	cstackBANK1
   537     00AB                     __pcstackBANK1:
   538     00AB                     ConvertToString@temp:
   539                           
   540                           ; 2 bytes @ 0x0
   541     00AB                     	ds	2
   542     00AD                     ConvertToString@j:
   543                           
   544                           ; 2 bytes @ 0x2
   545     00AD                     	ds	2
   546     00AF                     ConvertToString@i:
   547                           
   548                           ; 2 bytes @ 0x4
   549     00AF                     	ds	2
   550     00B1                     ConvertToString@n_cifre:
   551                           
   552                           ; 1 bytes @ 0x6
   553     00B1                     	ds	1
   554                           
   555                           	psect	cstackCOMMON
   556     0070                     __pcstackCOMMON:
   557     0070                     ?_init_PIC:
   558     0070                     ?_read_NumPad:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_UART_TxString:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_init_LCD:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_init_NumPad:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_init_Timer0:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_UART_TxChar:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ?_IRS:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ??_IRS:	
   583                           ; 1 bytes @ 0x0
   584                           
   585                           
   586                           ; 1 bytes @ 0x0
   587     0070                     	ds	4
   588     0074                     ?_lcdSend:
   589     0074                     ??_init_NumPad:	
   590                           ; 1 bytes @ 0x4
   591                           
   592     0074                     ??_init_Timer0:	
   593                           ; 1 bytes @ 0x4
   594                           
   595     0074                     ?_srand:	
   596                           ; 1 bytes @ 0x4
   597                           
   598     0074                     ??_UART_TxChar:	
   599                           ; 1 bytes @ 0x4
   600                           
   601     0074                     ??___wmul:	
   602                           ; 1 bytes @ 0x4
   603                           
   604     0074                     ??___lmul:	
   605                           ; 1 bytes @ 0x4
   606                           
   607     0074                     ??___almod:	
   608                           ; 1 bytes @ 0x4
   609                           
   610     0074                     ?_strcat:	
   611                           ; 1 bytes @ 0x4
   612                           
   613     0074                     ?_Length:	
   614                           ; 2 bytes @ 0x4
   615                           
   616     0074                     lcdSend@tipo:	
   617                           ; 2 bytes @ 0x4
   618                           
   619     0074                     strcat@str2:	
   620                           ; 1 bytes @ 0x4
   621                           
   622     0074                     ___wmul@product:	
   623                           ; 2 bytes @ 0x4
   624                           
   625     0074                     srand@x:	
   626                           ; 2 bytes @ 0x4
   627                           
   628                           
   629                           ; 2 bytes @ 0x4
   630     0074                     	ds	1
   631     0075                     ??___awmod:
   632     0075                     lcdSend@dato:	
   633                           ; 1 bytes @ 0x5
   634                           
   635     0075                     UART_TxChar@ch:	
   636                           ; 1 bytes @ 0x5
   637                           
   638                           
   639                           ; 1 bytes @ 0x5
   640     0075                     	ds	1
   641     0076                     ??_init_PIC:
   642     0076                     ??_srand:	
   643                           ; 1 bytes @ 0x6
   644                           
   645     0076                     ??_main:	
   646                           ; 1 bytes @ 0x6
   647                           
   648                           
   649                           	psect	cstackBANK0
   650     0044                     __pcstackBANK0:	
   651                           ; 1 bytes @ 0x6
   652                           
   653     0044                     ??_lcdSend:
   654     0044                     ??_UART_TxString:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0044                     ??_strcat:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0044                     ??_Length:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0044                     ?___wmul:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0044                     ?___lmul:	
   667                           ; 2 bytes @ 0x0
   668                           
   669     0044                     ?___almod:	
   670                           ; 4 bytes @ 0x0
   671                           
   672     0044                     ___wmul@multiplier:	
   673                           ; 4 bytes @ 0x0
   674                           
   675     0044                     ___lmul@multiplier:	
   676                           ; 2 bytes @ 0x0
   677                           
   678     0044                     ___almod@divisor:	
   679                           ; 4 bytes @ 0x0
   680                           
   681                           
   682                           ; 4 bytes @ 0x0
   683     0044                     	ds	1
   684     0045                     UART_TxString@str:
   685                           
   686                           ; 1 bytes @ 0x1
   687     0045                     	ds	1
   688     0046                     ?_lcdPrint:
   689     0046                     ??_init_LCD:	
   690                           ; 1 bytes @ 0x2
   691                           
   692     0046                     lcdPrint@str:	
   693                           ; 1 bytes @ 0x2
   694                           
   695     0046                     UART_TxString@n:	
   696                           ; 2 bytes @ 0x2
   697                           
   698     0046                     ___wmul@multiplicand:	
   699                           ; 2 bytes @ 0x2
   700                           
   701                           
   702                           ; 2 bytes @ 0x2
   703     0046                     	ds	1
   704     0047                     Length@str:
   705                           
   706                           ; 1 bytes @ 0x3
   707     0047                     	ds	1
   708     0048                     ??_lcdPrint:
   709     0048                     ?_pow:	
   710                           ; 1 bytes @ 0x4
   711                           
   712     0048                     pow@exp:	
   713                           ; 2 bytes @ 0x4
   714                           
   715     0048                     Length@len:	
   716                           ; 1 bytes @ 0x4
   717                           
   718     0048                     ___lmul@multiplicand:	
   719                           ; 2 bytes @ 0x4
   720                           
   721     0048                     ___almod@dividend:	
   722                           ; 4 bytes @ 0x4
   723                           
   724                           
   725                           ; 4 bytes @ 0x4
   726     0048                     	ds	1
   727     0049                     strcat@str1:
   728                           
   729                           ; 1 bytes @ 0x5
   730     0049                     	ds	1
   731     004A                     ??_pow:
   732     004A                     ?_CompareStrings:	
   733                           ; 1 bytes @ 0x6
   734                           
   735     004A                     CompareStrings@str2:	
   736                           ; 1 bytes @ 0x6
   737                           
   738     004A                     strcat@n:	
   739                           ; 1 bytes @ 0x6
   740                           
   741                           
   742                           ; 2 bytes @ 0x6
   743     004A                     	ds	1
   744     004B                     ??_CompareStrings:
   745     004B                     lcdPrint@n:	
   746                           ; 1 bytes @ 0x7
   747                           
   748                           
   749                           ; 2 bytes @ 0x7
   750     004B                     	ds	1
   751     004C                     pow@b:
   752     004C                     ___almod@counter:	
   753                           ; 1 bytes @ 0x8
   754                           
   755     004C                     strcat@length_str1:	
   756                           ; 1 bytes @ 0x8
   757                           
   758     004C                     ___lmul@product:	
   759                           ; 2 bytes @ 0x8
   760                           
   761                           
   762                           ; 4 bytes @ 0x8
   763     004C                     	ds	1
   764     004D                     ___almod@sign:
   765     004D                     pow@i:	
   766                           ; 1 bytes @ 0x9
   767                           
   768                           
   769                           ; 2 bytes @ 0x9
   770     004D                     	ds	1
   771     004E                     ?_ConcatToPacket:
   772     004E                     CompareStrings@str1:	
   773                           ; 1 bytes @ 0xA
   774                           
   775     004E                     ConcatToPacket@str:	
   776                           ; 1 bytes @ 0xA
   777                           
   778                           
   779                           ; 2 bytes @ 0xA
   780     004E                     	ds	1
   781     004F                     CompareStrings@i:
   782     004F                     pow@n:	
   783                           ; 1 bytes @ 0xB
   784                           
   785                           
   786                           ; 2 bytes @ 0xB
   787     004F                     	ds	1
   788     0050                     ?_rand:
   789     0050                     ConcatToPacket@delim:	
   790                           ; 2 bytes @ 0xC
   791                           
   792                           
   793                           ; 1 bytes @ 0xC
   794     0050                     	ds	1
   795     0051                     ??_ConcatToPacket:
   796     0051                     ?___aldiv:	
   797                           ; 1 bytes @ 0xD
   798                           
   799     0051                     ___aldiv@divisor:	
   800                           ; 4 bytes @ 0xD
   801                           
   802                           
   803                           ; 4 bytes @ 0xD
   804     0051                     	ds	1
   805     0052                     ??_rand:
   806     0052                     ConcatToPacket@packet_length:	
   807                           ; 1 bytes @ 0xE
   808                           
   809                           
   810                           ; 2 bytes @ 0xE
   811     0052                     	ds	2
   812     0054                     ConcatToPacket@pkt:
   813                           
   814                           ; 1 bytes @ 0x10
   815     0054                     	ds	1
   816     0055                     ___aldiv@dividend:
   817                           
   818                           ; 4 bytes @ 0x11
   819     0055                     	ds	2
   820     0057                     ?___awmod:
   821     0057                     ___awmod@divisor:	
   822                           ; 2 bytes @ 0x13
   823                           
   824                           
   825                           ; 2 bytes @ 0x13
   826     0057                     	ds	2
   827     0059                     ??___aldiv:
   828     0059                     ___awmod@dividend:	
   829                           ; 1 bytes @ 0x15
   830                           
   831                           
   832                           ; 2 bytes @ 0x15
   833     0059                     	ds	1
   834     005A                     ___aldiv@counter:
   835                           
   836                           ; 1 bytes @ 0x16
   837     005A                     	ds	1
   838     005B                     ___aldiv@sign:
   839     005B                     ___awmod@counter:	
   840                           ; 1 bytes @ 0x17
   841                           
   842                           
   843                           ; 1 bytes @ 0x17
   844     005B                     	ds	1
   845     005C                     ___awmod@sign:
   846     005C                     ___aldiv@quotient:	
   847                           ; 1 bytes @ 0x18
   848                           
   849                           
   850                           ; 4 bytes @ 0x18
   851     005C                     	ds	1
   852     005D                     ??_read_NumPad:
   853                           
   854                           ; 1 bytes @ 0x19
   855     005D                     	ds	3
   856     0060                     ?_ConvertToString:
   857     0060                     ?_UART_init:	
   858                           ; 1 bytes @ 0x1C
   859                           
   860     0060                     ConvertToString@n:	
   861                           ; 1 bytes @ 0x1C
   862                           
   863     0060                     UART_init@baudrate:	
   864                           ; 4 bytes @ 0x1C
   865                           
   866                           
   867                           ; 4 bytes @ 0x1C
   868     0060                     	ds	4
   869     0064                     ??_UART_init:
   870     0064                     ConvertToString@str:	
   871                           ; 1 bytes @ 0x20
   872                           
   873                           
   874                           ; 1 bytes @ 0x20
   875     0064                     	ds	1
   876     0065                     ??_ConvertToString:
   877                           
   878                           ; 1 bytes @ 0x21
   879     0065                     	ds	3
   880                           
   881                           	psect	maintext
   882     0051                     __pmaintext:	
   883 ;;
   884 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   885 ;;
   886 ;; *************** function _main *****************
   887 ;; Defined at:
   888 ;;		line 105 in file "main.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;		None
   891 ;; Auto vars:     Size  Location     Type
   892 ;;  packet         50    0[BANK3 ] unsigned char [50]
   893 ;;  num_rand_s     16   50[BANK3 ] unsigned char [16]
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : B00/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0      66       0
   905 ;;      Temps:          0       0       0       0       0
   906 ;;      Totals:         0       0       0      66       0
   907 ;;Total ram usage:       66 bytes
   908 ;; Hardware stack levels required when called: 4
   909 ;; This function calls:
   910 ;;		_ConcatToPacket
   911 ;;		_ConvertToString
   912 ;;		_UART_TxString
   913 ;;		_init_PIC
   914 ;;		_lcdPrint
   915 ;;		_lcdSend
   916 ;;		_read_NumPad
   917 ;; This function is called by:
   918 ;;		Startup code after reset
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922     0051                     _main:	
   923                           ;psect for function _main
   924                           
   925     0051                     l2298:	
   926                           ;incstack = 0
   927                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   928                           
   929                           
   930                           ;main.c: 107:     init_PIC();
   931     0051  120A  158A  26C3  120A  118A  	fcall	_init_PIC
   932     0056                     l2300:
   933                           
   934                           ;main.c: 110:     {;main.c: 111:         read_NumPad();
   935     0056  120A  118A  22B8  120A  118A  	fcall	_read_NumPad
   936     005B                     l2302:
   937                           
   938                           ;main.c: 115:         if(num_rand != old_num_rand)
   939     005B  1683               	bsf	3,5	;RP0=1, select bank1
   940     005C  1303               	bcf	3,6	;RP1=0, select bank1
   941     005D  0821               	movf	(_old_num_rand+1)^(0+128),w
   942     005E  0623               	xorwf	(_num_rand+1)^(0+128),w
   943     005F  1D03               	skipz
   944     0060  2863               	goto	u2305
   945     0061  0820               	movf	_old_num_rand^(0+128),w
   946     0062  0622               	xorwf	_num_rand^(0+128),w
   947     0063                     u2305:
   948     0063  1903               	skipnz
   949     0064  2866               	goto	u2301
   950     0065  2867               	goto	u2300
   951     0066                     u2301:
   952     0066  28B6               	goto	l2318
   953     0067                     u2300:
   954     0067                     l2304:
   955                           
   956                           ;main.c: 116:         {;main.c: 118:             lcdSend(0x01, 0);
   957     0067  01F4               	clrf	lcdSend@tipo
   958     0068  3001               	movlw	1
   959     0069  120A  158A  2709  120A  118A  	fcall	_lcdSend
   960     006E                     l2306:
   961                           
   962                           ;main.c: 120:             char num_rand_s[16];;main.c: 121:             ConvertToString(
      +                          num_rand, num_rand_s);
   963     006E  1683               	bsf	3,5	;RP0=1, select bank1
   964     006F  1303               	bcf	3,6	;RP1=0, select bank1
   965     0070  0822               	movf	_num_rand^(0+128),w
   966     0071  1283               	bcf	3,5	;RP0=0, select bank0
   967     0072  1303               	bcf	3,6	;RP1=0, select bank0
   968     0073  00E0               	movwf	ConvertToString@n
   969     0074  1683               	bsf	3,5	;RP0=1, select bank1
   970     0075  1303               	bcf	3,6	;RP1=0, select bank1
   971     0076  0823               	movf	(_num_rand+1)^(0+128),w
   972     0077  1283               	bcf	3,5	;RP0=0, select bank0
   973     0078  1303               	bcf	3,6	;RP1=0, select bank0
   974     0079  00E1               	movwf	ConvertToString@n+1
   975     007A  3000               	movlw	0
   976     007B  1BE1               	btfsc	ConvertToString@n+1,7
   977     007C  30FF               	movlw	255
   978     007D  00E2               	movwf	ConvertToString@n+2
   979     007E  00E3               	movwf	ConvertToString@n+3
   980     007F  30C2               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
   981     0080  00E4               	movwf	ConvertToString@str
   982     0081  120A  118A  21AE  120A  118A  	fcall	_ConvertToString
   983     0086                     l2308:
   984                           
   985                           ;main.c: 122:             lcdPrint(num_rand_s);
   986     0086  30C2               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
   987     0087  1283               	bcf	3,5	;RP0=0, select bank0
   988     0088  1303               	bcf	3,6	;RP1=0, select bank0
   989     0089  00C6               	movwf	lcdPrint@str
   990     008A  3001               	movlw	1
   991     008B  00C7               	movwf	lcdPrint@str+1
   992     008C  120A  118A  2734  120A  118A  	fcall	_lcdPrint
   993     0091                     l2310:
   994                           
   995                           ;main.c: 125:             char packet[50];;main.c: 126:             packet[0] = '\0';
   996     0091  1683               	bsf	3,5	;RP0=1, select bank3
   997     0092  1703               	bsf	3,6	;RP1=1, select bank3
   998     0093  0190               	clrf	main@packet^(0+384)
   999     0094                     l2312:
  1000                           
  1001                           ;main.c: 127:             ConcatToPacket(packet, "PIC_0001\0", '/');
  1002     0094  306D               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1003     0095  1283               	bcf	3,5	;RP0=0, select bank0
  1004     0096  1303               	bcf	3,6	;RP1=0, select bank0
  1005     0097  00CE               	movwf	ConcatToPacket@str
  1006     0098  3080               	movlw	128
  1007     0099  00CF               	movwf	ConcatToPacket@str+1
  1008     009A  302F               	movlw	47
  1009     009B  00D0               	movwf	ConcatToPacket@delim
  1010     009C  3090               	movlw	(low (main@packet| (0+256)))& (0+255)
  1011     009D  120A  118A  26A1  120A  118A  	fcall	_ConcatToPacket
  1012     00A2                     l2314:
  1013                           
  1014                           ;main.c: 128:             ConcatToPacket(packet, num_rand_s, ' ');
  1015     00A2  30C2               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
  1016     00A3  1283               	bcf	3,5	;RP0=0, select bank0
  1017     00A4  1303               	bcf	3,6	;RP1=0, select bank0
  1018     00A5  00CE               	movwf	ConcatToPacket@str
  1019     00A6  3001               	movlw	1
  1020     00A7  00CF               	movwf	ConcatToPacket@str+1
  1021     00A8  3020               	movlw	32
  1022     00A9  00D0               	movwf	ConcatToPacket@delim
  1023     00AA  3090               	movlw	(low (main@packet| (0+256)))& (0+255)
  1024     00AB  120A  118A  26A1  120A  118A  	fcall	_ConcatToPacket
  1025     00B0                     l2316:
  1026                           
  1027                           ;main.c: 130:             UART_TxString(packet);
  1028     00B0  3090               	movlw	(low (main@packet| (0+256)))& (0+255)
  1029     00B1  120A  118A  24DB  120A  118A  	fcall	_UART_TxString
  1030     00B6                     l2318:
  1031                           
  1032                           ;main.c: 132:         old_num_rand = num_rand;
  1033     00B6  1683               	bsf	3,5	;RP0=1, select bank1
  1034     00B7  1303               	bcf	3,6	;RP1=0, select bank1
  1035     00B8  0823               	movf	(_num_rand+1)^(0+128),w
  1036     00B9  00A1               	movwf	(_old_num_rand+1)^(0+128)
  1037     00BA  0822               	movf	_num_rand^(0+128),w
  1038     00BB  00A0               	movwf	_old_num_rand^(0+128)
  1039     00BC                     l2320:
  1040                           
  1041                           ;main.c: 135:         if(recieved)
  1042     00BC  0827               	movf	_recieved^(0+128),w
  1043     00BD  1903               	btfsc	3,2
  1044     00BE  28C0               	goto	u2311
  1045     00BF  28C1               	goto	u2310
  1046     00C0                     u2311:
  1047     00C0  28F4               	goto	l2334
  1048     00C1                     u2310:
  1049     00C1                     l2322:
  1050                           
  1051                           ;main.c: 136:         {;main.c: 138:             lcdSend(0x01, 0);
  1052     00C1  01F4               	clrf	lcdSend@tipo
  1053     00C2  3001               	movlw	1
  1054     00C3  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1055     00C8                     l2324:
  1056                           
  1057                           ;main.c: 139:             lcdPrint("Inserisci code\0");
  1058     00C8  3025               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1059     00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1060     00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1061     00CB  00C6               	movwf	lcdPrint@str
  1062     00CC  3080               	movlw	128
  1063     00CD  00C7               	movwf	lcdPrint@str+1
  1064     00CE  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1065     00D3                     l2326:
  1066                           
  1067                           ;main.c: 140:             lcdSend(0xC0, 0);
  1068     00D3  01F4               	clrf	lcdSend@tipo
  1069     00D4  30C0               	movlw	192
  1070     00D5  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1071                           
  1072                           ;main.c: 141:             lcdPrint("Tentativi: \0");
  1073     00DA  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1074     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1075     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1076     00DD  00C6               	movwf	lcdPrint@str
  1077     00DE  3080               	movlw	128
  1078     00DF  00C7               	movwf	lcdPrint@str+1
  1079     00E0  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1080     00E5                     l2328:
  1081                           
  1082                           ;main.c: 142:             lcdSend(maxFail + '0', 1);
  1083     00E5  01F4               	clrf	lcdSend@tipo
  1084     00E6  0AF4               	incf	lcdSend@tipo,f
  1085     00E7  1683               	bsf	3,5	;RP0=1, select bank1
  1086     00E8  1303               	bcf	3,6	;RP1=0, select bank1
  1087     00E9  0832               	movf	_maxFail^(0+128),w
  1088     00EA  3E30               	addlw	48
  1089     00EB  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1090     00F0                     l2330:
  1091                           
  1092                           ;main.c: 143:             recieved = 0;
  1093     00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1094     00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1095     00F2  01A7               	clrf	_recieved^(0+128)
  1096     00F3                     l2332:
  1097                           
  1098                           ;main.c: 144:             iS = 0;
  1099     00F3  01AA               	clrf	_iS^(0+128)
  1100     00F4                     l2334:
  1101                           
  1102                           ;main.c: 147:         if(success)
  1103     00F4  0825               	movf	_success^(0+128),w
  1104     00F5  1903               	btfsc	3,2
  1105     00F6  28F8               	goto	u2321
  1106     00F7  28F9               	goto	u2320
  1107     00F8                     u2321:
  1108     00F8  2914               	goto	l2348
  1109     00F9                     u2320:
  1110     00F9                     l2336:
  1111                           
  1112                           ;main.c: 148:         {;main.c: 150:             lcdSend(0x01, 0);
  1113     00F9  01F4               	clrf	lcdSend@tipo
  1114     00FA  3001               	movlw	1
  1115     00FB  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1116     0100                     l2338:
  1117                           
  1118                           ;main.c: 151:             lcdPrint("Benvenuto!\0");
  1119     0100  3061               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1120     0101  1283               	bcf	3,5	;RP0=0, select bank0
  1121     0102  1303               	bcf	3,6	;RP1=0, select bank0
  1122     0103  00C6               	movwf	lcdPrint@str
  1123     0104  3080               	movlw	128
  1124     0105  00C7               	movwf	lcdPrint@str+1
  1125     0106  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1126     010B                     l2340:
  1127                           
  1128                           ;main.c: 152:             iT = old_iT = 0;
  1129     010B  1683               	bsf	3,5	;RP0=1, select bank1
  1130     010C  1303               	bcf	3,6	;RP1=0, select bank1
  1131     010D  01A8               	clrf	_old_iT^(0+128)
  1132     010E  01A9               	clrf	_iT^(0+128)
  1133     010F                     l2342:
  1134                           
  1135                           ;main.c: 153:             success = 0;
  1136     010F  01A5               	clrf	_success^(0+128)
  1137     0110                     l2344:
  1138                           
  1139                           ;main.c: 154:             compare = 0;
  1140     0110  01A6               	clrf	_compare^(0+128)
  1141     0111                     l2346:
  1142                           
  1143                           ;main.c: 155:             maxFail = 3;
  1144     0111  3003               	movlw	3
  1145     0112  00B2               	movwf	_maxFail^(0+128)
  1146                           
  1147                           ;main.c: 156:         }
  1148     0113  2989               	goto	l2380
  1149     0114                     l2348:
  1150     0114  0832               	movf	_maxFail^(0+128),w
  1151     0115  1903               	btfsc	3,2
  1152     0116  2918               	goto	u2331
  1153     0117  2919               	goto	u2330
  1154     0118                     u2331:
  1155     0118  2959               	goto	l2366
  1156     0119                     u2330:
  1157     0119                     l2350:
  1158     0119  3003               	movlw	3
  1159     011A  0232               	subwf	_maxFail^(0+128),w
  1160     011B  1803               	skipnc
  1161     011C  291E               	goto	u2341
  1162     011D  291F               	goto	u2340
  1163     011E                     u2341:
  1164     011E  2959               	goto	l2366
  1165     011F                     u2340:
  1166     011F                     l2352:
  1167     011F  0824               	movf	_fail^(0+128),w
  1168     0120  1903               	btfsc	3,2
  1169     0121  2923               	goto	u2351
  1170     0122  2924               	goto	u2350
  1171     0123                     u2351:
  1172     0123  2959               	goto	l2366
  1173     0124                     u2350:
  1174     0124                     l2354:
  1175                           
  1176                           ;main.c: 158:         {;main.c: 160:             lcdSend(0x01, 0);
  1177     0124  01F4               	clrf	lcdSend@tipo
  1178     0125  3001               	movlw	1
  1179     0126  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1180     012B                     l2356:
  1181                           
  1182                           ;main.c: 161:             lcdPrint("Codice errato\0");
  1183     012B  3045               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1184     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1185     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1186     012E  00C6               	movwf	lcdPrint@str
  1187     012F  3080               	movlw	128
  1188     0130  00C7               	movwf	lcdPrint@str+1
  1189     0131  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1190     0136                     l2358:
  1191                           
  1192                           ;main.c: 162:             lcdSend(0xC0, 0);
  1193     0136  01F4               	clrf	lcdSend@tipo
  1194     0137  30C0               	movlw	192
  1195     0138  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1196                           
  1197                           ;main.c: 163:             lcdPrint("Tentativi: \0");
  1198     013D  3054               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1199     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1200     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1201     0140  00C6               	movwf	lcdPrint@str
  1202     0141  3080               	movlw	128
  1203     0142  00C7               	movwf	lcdPrint@str+1
  1204     0143  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1205     0148                     l2360:
  1206                           
  1207                           ;main.c: 164:             lcdSend(maxFail + '0', 1);
  1208     0148  01F4               	clrf	lcdSend@tipo
  1209     0149  0AF4               	incf	lcdSend@tipo,f
  1210     014A  1683               	bsf	3,5	;RP0=1, select bank1
  1211     014B  1303               	bcf	3,6	;RP1=0, select bank1
  1212     014C  0832               	movf	_maxFail^(0+128),w
  1213     014D  3E30               	addlw	48
  1214     014E  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1215     0153                     l2362:
  1216                           
  1217                           ;main.c: 165:             iT = old_iT = 0;
  1218     0153  1683               	bsf	3,5	;RP0=1, select bank1
  1219     0154  1303               	bcf	3,6	;RP1=0, select bank1
  1220     0155  01A8               	clrf	_old_iT^(0+128)
  1221     0156  01A9               	clrf	_iT^(0+128)
  1222     0157                     l2364:
  1223                           
  1224                           ;main.c: 166:             fail = 0;
  1225     0157  01A4               	clrf	_fail^(0+128)
  1226                           
  1227                           ;main.c: 167:         }
  1228     0158  2989               	goto	l2380
  1229     0159                     l2366:
  1230     0159  0832               	movf	_maxFail^(0+128),w
  1231     015A  1D03               	btfss	3,2
  1232     015B  295D               	goto	u2361
  1233     015C  295E               	goto	u2360
  1234     015D                     u2361:
  1235     015D  2989               	goto	l2380
  1236     015E                     u2360:
  1237     015E                     l2368:
  1238                           
  1239                           ;main.c: 169:         {;main.c: 171:             lcdSend(0x01, 0);
  1240     015E  01F4               	clrf	lcdSend@tipo
  1241     015F  3001               	movlw	1
  1242     0160  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1243     0165                     l2370:
  1244                           
  1245                           ;main.c: 172:             lcdPrint("Tent. esauriti\0");
  1246     0165  3035               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1247     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1248     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1249     0168  00C6               	movwf	lcdPrint@str
  1250     0169  3080               	movlw	128
  1251     016A  00C7               	movwf	lcdPrint@str+1
  1252     016B  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1253     0170                     l2372:
  1254                           
  1255                           ;main.c: 173:             lcdSend(0xC0, 0);
  1256     0170  01F4               	clrf	lcdSend@tipo
  1257     0171  30C0               	movlw	192
  1258     0172  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1259                           
  1260                           ;main.c: 174:             lcdPrint("Rigenerare code\0");
  1261     0177  3014               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1262     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1263     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1264     017A  00C6               	movwf	lcdPrint@str
  1265     017B  3080               	movlw	128
  1266     017C  00C7               	movwf	lcdPrint@str+1
  1267     017D  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1268     0182                     l2374:
  1269                           
  1270                           ;main.c: 175:             maxFail = 3;
  1271     0182  3003               	movlw	3
  1272     0183  1683               	bsf	3,5	;RP0=1, select bank1
  1273     0184  1303               	bcf	3,6	;RP1=0, select bank1
  1274     0185  00B2               	movwf	_maxFail^(0+128)
  1275     0186                     l2376:
  1276                           
  1277                           ;main.c: 176:             iT = old_iT = 0;
  1278     0186  01A8               	clrf	_old_iT^(0+128)
  1279     0187  01A9               	clrf	_iT^(0+128)
  1280     0188                     l2378:
  1281                           
  1282                           ;main.c: 177:             compare = 0;
  1283     0188  01A6               	clrf	_compare^(0+128)
  1284     0189                     l2380:
  1285                           
  1286                           ;main.c: 181:         if(iT != old_iT && compare)
  1287     0189  0829               	movf	_iT^(0+128),w
  1288     018A  0628               	xorwf	_old_iT^(0+128),w
  1289     018B  1903               	skipnz
  1290     018C  298E               	goto	u2371
  1291     018D  298F               	goto	u2370
  1292     018E                     u2371:
  1293     018E  29A6               	goto	l2388
  1294     018F                     u2370:
  1295     018F                     l2382:
  1296     018F  0826               	movf	_compare^(0+128),w
  1297     0190  1903               	btfsc	3,2
  1298     0191  2993               	goto	u2381
  1299     0192  2994               	goto	u2380
  1300     0193                     u2381:
  1301     0193  29A6               	goto	l2388
  1302     0194                     u2380:
  1303     0194                     l2384:
  1304                           
  1305                           ;main.c: 182:         {;main.c: 184:             lcdSend(0x01, 0);
  1306     0194  01F4               	clrf	lcdSend@tipo
  1307     0195  3001               	movlw	1
  1308     0196  120A  158A  2709  120A  118A  	fcall	_lcdSend
  1309     019B                     l2386:
  1310                           
  1311                           ;main.c: 185:             lcdPrint(datoTastierino);
  1312     019B  3024               	movlw	(low (_datoTastierino| 0))& (0+255)
  1313     019C  1283               	bcf	3,5	;RP0=0, select bank0
  1314     019D  1303               	bcf	3,6	;RP1=0, select bank0
  1315     019E  00C6               	movwf	lcdPrint@str
  1316     019F  3000               	movlw	0
  1317     01A0  00C7               	movwf	lcdPrint@str+1
  1318     01A1  120A  118A  2734  120A  118A  	fcall	_lcdPrint
  1319     01A6                     l2388:
  1320                           
  1321                           ;main.c: 187:         old_iT = iT;
  1322     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1323     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1324     01A8  0829               	movf	_iT^(0+128),w
  1325     01A9  00A8               	movwf	_old_iT^(0+128)
  1326     01AA  2856               	goto	l2300
  1327     01AB  120A  118A  280E   	ljmp	start
  1328     01AE                     __end_of_main:
  1329                           
  1330                           	psect	text1
  1331     02B8                     __ptext1:	
  1332 ;; *************** function _read_NumPad *****************
  1333 ;; Defined at:
  1334 ;;		line 376 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0
  1350 ;;      Temps:          0       2       0       0       0
  1351 ;;      Totals:         0       2       0       0       0
  1352 ;;Total ram usage:        2 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; Hardware stack levels required when called: 3
  1355 ;; This function calls:
  1356 ;;		_CompareStrings
  1357 ;;		___awmod
  1358 ;;		_rand
  1359 ;;		_srand
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365     02B8                     _read_NumPad:	
  1366                           ;psect for function _read_NumPad
  1367                           
  1368     02B8                     l2170:	
  1369                           ;incstack = 0
  1370                           ; Regs used in _read_NumPad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1371                           
  1372                           
  1373                           ;main.c: 379:     TRISD |= 0x0F;
  1374     02B8  300F               	movlw	15
  1375     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1376     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1377     02BB  00DD               	movwf	??_read_NumPad
  1378     02BC  085D               	movf	??_read_NumPad,w
  1379     02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1380     02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1381     02BF  0488               	iorwf	8,f	;volatile
  1382     02C0                     l2172:
  1383                           
  1384                           ;main.c: 380:     for(colScan = 0; colScan < 3; colScan++)
  1385     02C0  01F8               	clrf	_colScan
  1386     02C1                     l2178:
  1387                           
  1388                           ;main.c: 381:     {;main.c: 384:         PORTB |= 0x07;
  1389     02C1  3007               	movlw	7
  1390     02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1391     02C3  00DD               	movwf	??_read_NumPad
  1392     02C4  085D               	movf	??_read_NumPad,w
  1393     02C5  0486               	iorwf	6,f	;volatile
  1394     02C6                     l2180:
  1395                           
  1396                           ;main.c: 386:         PORTB &= colMask[colScan];
  1397     02C6  0878               	movf	_colScan,w
  1398     02C7  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  1399     02C8  0084               	movwf	4
  1400     02C9  120A  118A  250A  120A  118A  	fcall	stringdir
  1401     02CE  00DD               	movwf	??_read_NumPad
  1402     02CF  085D               	movf	??_read_NumPad,w
  1403     02D0  0586               	andwf	6,f	;volatile
  1404     02D1                     l2182:
  1405                           
  1406                           ;main.c: 388:         for(rowScan = 0; rowScan < 4; rowScan++)
  1407     02D1  01F7               	clrf	_rowScan
  1408     02D2                     l2188:
  1409                           
  1410                           ;main.c: 389:         {;main.c: 391:             if(!(PORTD & rowMask[rowScan]))
  1411     02D2  0877               	movf	_rowScan,w
  1412     02D3  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  1413     02D4  0084               	movwf	4
  1414     02D5  120A  118A  250A  120A  118A  	fcall	stringdir
  1415     02DA  0508               	andwf	8,w	;volatile
  1416     02DB  1D03               	btfss	3,2
  1417     02DC  2ADE               	goto	u2101
  1418     02DD  2ADF               	goto	u2100
  1419     02DE                     u2101:
  1420     02DE  2B06               	goto	l197
  1421     02DF                     u2100:
  1422     02DF                     l2190:
  1423                           
  1424                           ;main.c: 392:             {;main.c: 394:                 _delay((unsigned long)((5)*(200
      +                          00000/4000.0)));
  1425     02DF  3021               	movlw	33
  1426     02E0  1283               	bcf	3,5	;RP0=0, select bank0
  1427     02E1  1303               	bcf	3,6	;RP1=0, select bank0
  1428     02E2  00DE               	movwf	??_read_NumPad+1
  1429     02E3  3075               	movlw	117
  1430     02E4  00DD               	movwf	??_read_NumPad
  1431     02E5                     u2397:
  1432     02E5  0BDD               	decfsz	??_read_NumPad,f
  1433     02E6  2AE5               	goto	u2397
  1434     02E7  0BDE               	decfsz	??_read_NumPad+1,f
  1435     02E8  2AE5               	goto	u2397
  1436     02E9  2AEA               	nop2
  1437     02EA                     l2192:
  1438                           
  1439                           ;main.c: 395:                 if(!(PORTD & rowMask[rowScan]))
  1440     02EA  0877               	movf	_rowScan,w
  1441     02EB  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  1442     02EC  0084               	movwf	4
  1443     02ED  120A  118A  250A  120A  118A  	fcall	stringdir
  1444     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1445     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1446     02F4  0508               	andwf	8,w	;volatile
  1447     02F5  1D03               	btfss	3,2
  1448     02F6  2AF8               	goto	u2111
  1449     02F7  2AF9               	goto	u2110
  1450     02F8                     u2111:
  1451     02F8  2B06               	goto	l197
  1452     02F9                     u2110:
  1453     02F9                     l2194:
  1454                           
  1455                           ;main.c: 396:                 {;main.c: 400:                     keypressed = rowScan+(4
      +                          *colScan);
  1456     02F9  0878               	movf	_colScan,w
  1457     02FA  00DD               	movwf	??_read_NumPad
  1458     02FB  3002               	movlw	2
  1459     02FC                     u2125:
  1460     02FC  1003               	clrc
  1461     02FD  0DDD               	rlf	??_read_NumPad,f
  1462     02FE  3EFF               	addlw	-1
  1463     02FF  1D03               	skipz
  1464     0300  2AFC               	goto	u2125
  1465     0301  0877               	movf	_rowScan,w
  1466     0302  075D               	addwf	??_read_NumPad,w
  1467     0303  00F9               	movwf	_keypressed
  1468     0304                     l2196:
  1469                           
  1470                           ;main.c: 402:                     keyf = 1;
  1471     0304  01F6               	clrf	_keyf
  1472     0305  0AF6               	incf	_keyf,f
  1473     0306                     l197:	
  1474                           ;main.c: 404:             }
  1475                           
  1476                           
  1477                           ;main.c: 405:         }
  1478     0306  3001               	movlw	1
  1479     0307  00DD               	movwf	??_read_NumPad
  1480     0308  085D               	movf	??_read_NumPad,w
  1481     0309  07F7               	addwf	_rowScan,f
  1482     030A                     l2198:
  1483     030A  3004               	movlw	4
  1484     030B  0277               	subwf	_rowScan,w
  1485     030C  1C03               	skipc
  1486     030D  2B0F               	goto	u2131
  1487     030E  2B10               	goto	u2130
  1488     030F                     u2131:
  1489     030F  2AD2               	goto	l2188
  1490     0310                     u2130:
  1491     0310                     l2200:
  1492                           
  1493                           ;main.c: 407:         if(keyf)
  1494     0310  0876               	movf	_keyf,w
  1495     0311  1903               	btfsc	3,2
  1496     0312  2B14               	goto	u2141
  1497     0313  2B15               	goto	u2140
  1498     0314                     u2141:
  1499     0314  2BAC               	goto	l2232
  1500     0315                     u2140:
  1501     0315                     l2202:
  1502                           
  1503                           ;main.c: 408:         {;main.c: 409:             keyf = 0;
  1504     0315  01F6               	clrf	_keyf
  1505     0316                     l2204:
  1506                           
  1507                           ;main.c: 412:             if(keypressed == 8)
  1508     0316  3008               	movlw	8
  1509     0317  0679               	xorwf	_keypressed,w
  1510     0318  1D03               	btfss	3,2
  1511     0319  2B1B               	goto	u2151
  1512     031A  2B1C               	goto	u2150
  1513     031B                     u2151:
  1514     031B  2B73               	goto	l2218
  1515     031C                     u2150:
  1516     031C                     l2206:
  1517                           
  1518                           ;main.c: 413:             {;main.c: 415:                 if(!compare)
  1519     031C  1683               	bsf	3,5	;RP0=1, select bank1
  1520     031D  1303               	bcf	3,6	;RP1=0, select bank1
  1521     031E  0826               	movf	_compare^(0+128),w
  1522     031F  1D03               	btfss	3,2
  1523     0320  2B22               	goto	u2161
  1524     0321  2B23               	goto	u2160
  1525     0322                     u2161:
  1526     0322  2B58               	goto	l2210
  1527     0323                     u2160:
  1528     0323                     l2208:
  1529                           
  1530                           ;main.c: 416:                 {;main.c: 418:                     srand(TMR0);
  1531     0323  1283               	bcf	3,5	;RP0=0, select bank0
  1532     0324  1303               	bcf	3,6	;RP1=0, select bank0
  1533     0325  0801               	movf	1,w	;volatile
  1534     0326  00DD               	movwf	??_read_NumPad
  1535     0327  01DE               	clrf	??_read_NumPad+1
  1536     0328  085D               	movf	??_read_NumPad,w
  1537     0329  00F4               	movwf	srand@x
  1538     032A  085E               	movf	??_read_NumPad+1,w
  1539     032B  00F5               	movwf	srand@x+1
  1540     032C  120A  158A  2670  120A  118A  	fcall	_srand
  1541                           
  1542                           ;main.c: 420:                     num_rand = ((rand()%8999)+1000);
  1543     0331  3027               	movlw	39
  1544     0332  1283               	bcf	3,5	;RP0=0, select bank0
  1545     0333  1303               	bcf	3,6	;RP1=0, select bank0
  1546     0334  00D7               	movwf	___awmod@divisor
  1547     0335  3023               	movlw	35
  1548     0336  00D8               	movwf	___awmod@divisor+1
  1549     0337  120A  158A  27B9  120A  118A  	fcall	_rand
  1550     033C  1283               	bcf	3,5	;RP0=0, select bank0
  1551     033D  1303               	bcf	3,6	;RP1=0, select bank0
  1552     033E  0851               	movf	?_rand+1,w
  1553     033F  00DA               	movwf	___awmod@dividend+1
  1554     0340  0850               	movf	?_rand,w
  1555     0341  00D9               	movwf	___awmod@dividend
  1556     0342  120A  118A  25ED  120A  118A  	fcall	___awmod
  1557     0347  1283               	bcf	3,5	;RP0=0, select bank0
  1558     0348  1303               	bcf	3,6	;RP1=0, select bank0
  1559     0349  0857               	movf	?___awmod,w
  1560     034A  3EE8               	addlw	232
  1561     034B  1683               	bsf	3,5	;RP0=1, select bank1
  1562     034C  1303               	bcf	3,6	;RP1=0, select bank1
  1563     034D  00A2               	movwf	_num_rand^(0+128)
  1564     034E  1283               	bcf	3,5	;RP0=0, select bank0
  1565     034F  1303               	bcf	3,6	;RP1=0, select bank0
  1566     0350  0858               	movf	?___awmod+1,w
  1567     0351  1803               	skipnc
  1568     0352  3E01               	addlw	1
  1569     0353  3E03               	addlw	3
  1570     0354  1683               	bsf	3,5	;RP0=1, select bank1
  1571     0355  1303               	bcf	3,6	;RP1=0, select bank1
  1572     0356  00A3               	movwf	(_num_rand+1)^(0+128)
  1573                           
  1574                           ;main.c: 421:                 }
  1575     0357  2B9E               	goto	l2228
  1576     0358                     l2210:
  1577     0358  3024               	movlw	(low (_datoTastierino| 0))& (0+255)
  1578     0359  1283               	bcf	3,5	;RP0=0, select bank0
  1579     035A  1303               	bcf	3,6	;RP1=0, select bank0
  1580     035B  00CA               	movwf	CompareStrings@str2
  1581     035C  3034               	movlw	(low (_datoSeriale| 0))& (0+255)
  1582     035D  120A  118A  26EB  120A  118A  	fcall	_CompareStrings
  1583     0362  3A00               	xorlw	0
  1584     0363  1903               	skipnz
  1585     0364  2B66               	goto	u2171
  1586     0365  2B67               	goto	u2170
  1587     0366                     u2171:
  1588     0366  2B6C               	goto	l2214
  1589     0367                     u2170:
  1590     0367                     l2212:
  1591                           
  1592                           ;main.c: 423:                 {;main.c: 424:                     success = 1;
  1593     0367  1683               	bsf	3,5	;RP0=1, select bank1
  1594     0368  1303               	bcf	3,6	;RP1=0, select bank1
  1595     0369  01A5               	clrf	_success^(0+128)
  1596     036A  0AA5               	incf	_success^(0+128),f
  1597                           
  1598                           ;main.c: 425:                 }
  1599     036B  2B9E               	goto	l2228
  1600     036C                     l2214:
  1601                           
  1602                           ;main.c: 427:                 {;main.c: 428:                     maxFail--;
  1603     036C  3001               	movlw	1
  1604     036D  1683               	bsf	3,5	;RP0=1, select bank1
  1605     036E  1303               	bcf	3,6	;RP1=0, select bank1
  1606     036F  02B2               	subwf	_maxFail^(0+128),f
  1607     0370                     l2216:
  1608                           
  1609                           ;main.c: 429:                     fail = 1;
  1610     0370  01A4               	clrf	_fail^(0+128)
  1611     0371  0AA4               	incf	_fail^(0+128),f
  1612     0372  2B9E               	goto	l2228
  1613     0373                     l2218:
  1614     0373  0879               	movf	_keypressed,w
  1615     0374  1903               	btfsc	3,2
  1616     0375  2B77               	goto	u2181
  1617     0376  2B78               	goto	u2180
  1618     0377                     u2181:
  1619     0377  2B9E               	goto	l2228
  1620     0378                     u2180:
  1621     0378                     l2220:
  1622     0378  1683               	bsf	3,5	;RP0=1, select bank1
  1623     0379  1303               	bcf	3,6	;RP1=0, select bank1
  1624     037A  0826               	movf	_compare^(0+128),w
  1625     037B  1903               	btfsc	3,2
  1626     037C  2B7E               	goto	u2191
  1627     037D  2B7F               	goto	u2190
  1628     037E                     u2191:
  1629     037E  2B9E               	goto	l2228
  1630     037F                     u2190:
  1631     037F                     l2222:
  1632                           
  1633                           ;main.c: 434:             {;main.c: 435:                 datoTastierino[iT++] = keys[key
      +                          pressed];
  1634     037F  0879               	movf	_keypressed,w
  1635     0380  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1636     0381  0084               	movwf	4
  1637     0382  120A  118A  250A  120A  118A  	fcall	stringdir
  1638     0387  1283               	bcf	3,5	;RP0=0, select bank0
  1639     0388  1303               	bcf	3,6	;RP1=0, select bank0
  1640     0389  00DD               	movwf	??_read_NumPad
  1641     038A  1683               	bsf	3,5	;RP0=1, select bank1
  1642     038B  1303               	bcf	3,6	;RP1=0, select bank1
  1643     038C  0829               	movf	_iT^(0+128),w
  1644     038D  3E24               	addlw	(low (_datoTastierino| 0))& (0+255)
  1645     038E  0084               	movwf	4
  1646     038F  1283               	bcf	3,5	;RP0=0, select bank0
  1647     0390  1303               	bcf	3,6	;RP1=0, select bank0
  1648     0391  085D               	movf	??_read_NumPad,w
  1649     0392  1383               	bcf	3,7	;select IRP bank0
  1650     0393  0080               	movwf	0
  1651     0394                     l2224:
  1652     0394  3001               	movlw	1
  1653     0395  00DD               	movwf	??_read_NumPad
  1654     0396  085D               	movf	??_read_NumPad,w
  1655     0397  1683               	bsf	3,5	;RP0=1, select bank1
  1656     0398  1303               	bcf	3,6	;RP1=0, select bank1
  1657     0399  07A9               	addwf	_iT^(0+128),f
  1658     039A                     l2226:
  1659                           
  1660                           ;main.c: 436:                 datoTastierino[iT] = '\0';
  1661     039A  0829               	movf	_iT^(0+128),w
  1662     039B  3E24               	addlw	(low (_datoTastierino| 0))& (0+255)
  1663     039C  0084               	movwf	4
  1664     039D  0180               	clrf	0
  1665     039E                     l2228:
  1666                           
  1667                           ;main.c: 439:             PORTD |= 0x0F;
  1668     039E  300F               	movlw	15
  1669     039F  1283               	bcf	3,5	;RP0=0, select bank0
  1670     03A0  00DD               	movwf	??_read_NumPad
  1671     03A1  085D               	movf	??_read_NumPad,w
  1672     03A2  0488               	iorwf	8,f	;volatile
  1673     03A3                     l2230:	
  1674                           ;main.c: 441:             while(((PORTD & 0x0F) != 0x0F))
  1675                           
  1676                           
  1677                           ;main.c: 441:             while(((PORTD & 0x0F) != 0x0F))
  1678     03A3  300F               	movlw	15
  1679     03A4  0508               	andwf	8,w	;volatile
  1680     03A5  00DD               	movwf	??_read_NumPad
  1681     03A6  300F               	movlw	15
  1682     03A7  065D               	xorwf	??_read_NumPad,w
  1683     03A8  1D03               	btfss	3,2
  1684     03A9  2BAB               	goto	u2201
  1685     03AA  2BAC               	goto	u2200
  1686     03AB                     u2201:
  1687     03AB  2BA3               	goto	l2230
  1688     03AC                     u2200:
  1689     03AC                     l2232:
  1690                           
  1691                           ;main.c: 446:     }
  1692     03AC  3001               	movlw	1
  1693     03AD  00DD               	movwf	??_read_NumPad
  1694     03AE  085D               	movf	??_read_NumPad,w
  1695     03AF  07F8               	addwf	_colScan,f
  1696     03B0                     l2234:
  1697     03B0  3003               	movlw	3
  1698     03B1  0278               	subwf	_colScan,w
  1699     03B2  1C03               	skipc
  1700     03B3  2BB5               	goto	u2211
  1701     03B4  2BB6               	goto	u2210
  1702     03B5                     u2211:
  1703     03B5  2AC1               	goto	l2178
  1704     03B6                     u2210:
  1705     03B6                     l210:
  1706     03B6  0008               	return
  1707     03B7                     __end_of_read_NumPad:
  1708                           
  1709                           	psect	text2
  1710     0E70                     __ptext2:	
  1711 ;; *************** function _srand *****************
  1712 ;; Defined at:
  1713 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  x               2    4[COMMON] unsigned int 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1727 ;;      Params:         2       0       0       0       0
  1728 ;;      Locals:         0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0
  1730 ;;      Totals:         2       0       0       0       0
  1731 ;;Total ram usage:        2 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_read_NumPad
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741     0E70                     _srand:	
  1742                           ;psect for function _srand
  1743                           
  1744     0E70                     l2082:	
  1745                           ;incstack = 0
  1746                           ; Regs used in _srand: [wreg]
  1747                           
  1748     0E70  0874               	movf	srand@x,w
  1749     0E71  1283               	bcf	3,5	;RP0=0, select bank0
  1750     0E72  1303               	bcf	3,6	;RP1=0, select bank0
  1751     0E73  00E8               	movwf	_randx
  1752     0E74  0875               	movf	srand@x+1,w
  1753     0E75  00E9               	movwf	_randx+1
  1754     0E76  01EA               	clrf	_randx+2
  1755     0E77  01EB               	clrf	_randx+3
  1756     0E78                     l771:
  1757     0E78  0008               	return
  1758     0E79                     __end_of_srand:
  1759                           
  1760                           	psect	text3
  1761     0FB9                     __ptext3:	
  1762 ;; *************** function _rand *****************
  1763 ;; Defined at:
  1764 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  2   12[BANK0 ] int 
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1778 ;;      Params:         0       2       0       0       0
  1779 ;;      Locals:         0       0       0       0       0
  1780 ;;      Temps:          0       5       0       0       0
  1781 ;;      Totals:         0       7       0       0       0
  1782 ;;Total ram usage:        7 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 2
  1785 ;; This function calls:
  1786 ;;		___lmul
  1787 ;; This function is called by:
  1788 ;;		_read_NumPad
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792     0FB9                     _rand:	
  1793                           ;psect for function _rand
  1794                           
  1795     0FB9                     l2084:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  1798                           
  1799     0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  1800     0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  1801     0FBB  086B               	movf	_randx+3,w
  1802     0FBC  00C7               	movwf	___lmul@multiplier+3
  1803     0FBD  086A               	movf	_randx+2,w
  1804     0FBE  00C6               	movwf	___lmul@multiplier+2
  1805     0FBF  0869               	movf	_randx+1,w
  1806     0FC0  00C5               	movwf	___lmul@multiplier+1
  1807     0FC1  0868               	movf	_randx,w
  1808     0FC2  00C4               	movwf	___lmul@multiplier
  1809     0FC3  3041               	movlw	65
  1810     0FC4  00CB               	movwf	___lmul@multiplicand+3
  1811     0FC5  30C6               	movlw	198
  1812     0FC6  00CA               	movwf	___lmul@multiplicand+2
  1813     0FC7  304E               	movlw	78
  1814     0FC8  00C9               	movwf	___lmul@multiplicand+1
  1815     0FC9  306D               	movlw	109
  1816     0FCA  00C8               	movwf	___lmul@multiplicand
  1817     0FCB  120A  118A  277C  120A  158A  	fcall	___lmul
  1818     0FD0  1283               	bcf	3,5	;RP0=0, select bank0
  1819     0FD1  1303               	bcf	3,6	;RP1=0, select bank0
  1820     0FD2  0847               	movf	?___lmul+3,w
  1821     0FD3  00EB               	movwf	_randx+3
  1822     0FD4  0846               	movf	?___lmul+2,w
  1823     0FD5  00EA               	movwf	_randx+2
  1824     0FD6  0845               	movf	?___lmul+1,w
  1825     0FD7  00E9               	movwf	_randx+1
  1826     0FD8  0844               	movf	?___lmul,w
  1827     0FD9  00E8               	movwf	_randx
  1828     0FDA                     l2086:
  1829     0FDA  3039               	movlw	57
  1830     0FDB  07E8               	addwf	_randx,f
  1831     0FDC  3030               	movlw	48
  1832     0FDD  1803               	skipnc
  1833     0FDE  3031               	movlw	49
  1834     0FDF  07E9               	addwf	_randx+1,f
  1835     0FE0  3000               	movlw	0
  1836     0FE1  1803               	skipnc
  1837     0FE2  3001               	movlw	1
  1838     0FE3  07EA               	addwf	_randx+2,f
  1839     0FE4  3000               	movlw	0
  1840     0FE5  1803               	skipnc
  1841     0FE6  3001               	movlw	1
  1842     0FE7  07EB               	addwf	_randx+3,f
  1843     0FE8                     l2088:
  1844     0FE8  0868               	movf	_randx,w
  1845     0FE9  00D2               	movwf	??_rand
  1846     0FEA  0869               	movf	_randx+1,w
  1847     0FEB  00D3               	movwf	??_rand+1
  1848     0FEC  086A               	movf	_randx+2,w
  1849     0FED  00D4               	movwf	??_rand+2
  1850     0FEE  086B               	movf	_randx+3,w
  1851     0FEF  00D5               	movwf	??_rand+3
  1852     0FF0  3010               	movlw	16
  1853     0FF1  00D6               	movwf	??_rand+4
  1854     0FF2                     u1905:
  1855     0FF2  0D55               	rlf	??_rand+3,w
  1856     0FF3  0CD5               	rrf	??_rand+3,f
  1857     0FF4  0CD4               	rrf	??_rand+2,f
  1858     0FF5  0CD3               	rrf	??_rand+1,f
  1859     0FF6  0CD2               	rrf	??_rand,f
  1860     0FF7                     u1900:
  1861     0FF7  0BD6               	decfsz	??_rand+4,f
  1862     0FF8  2FF2               	goto	u1905
  1863     0FF9  30FF               	movlw	255
  1864     0FFA  0552               	andwf	??_rand,w
  1865     0FFB  00D0               	movwf	?_rand
  1866     0FFC  307F               	movlw	127
  1867     0FFD  0553               	andwf	??_rand+1,w
  1868     0FFE  00D1               	movwf	?_rand+1
  1869     0FFF                     l774:
  1870     0FFF  0008               	return
  1871     1000                     __end_of_rand:
  1872                           
  1873                           	psect	text4
  1874     05ED                     __ptext4:	
  1875 ;; *************** function ___awmod *****************
  1876 ;; Defined at:
  1877 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  divisor         2   19[BANK0 ] int 
  1880 ;;  dividend        2   21[BANK0 ] int 
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;  sign            1   24[BANK0 ] unsigned char 
  1883 ;;  counter         1   23[BANK0 ] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  2   19[BANK0 ] int 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       4       0       0       0
  1894 ;;      Locals:         0       2       0       0       0
  1895 ;;      Temps:          1       0       0       0       0
  1896 ;;      Totals:         1       6       0       0       0
  1897 ;;Total ram usage:        7 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		Nothing
  1902 ;; This function is called by:
  1903 ;;		_read_NumPad
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907     05ED                     ___awmod:	
  1908                           ;psect for function ___awmod
  1909                           
  1910     05ED                     l2130:	
  1911                           ;incstack = 0
  1912                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1913                           
  1914     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  1915     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  1916     05EF  01DC               	clrf	___awmod@sign
  1917     05F0                     l2132:
  1918     05F0  1FDA               	btfss	___awmod@dividend+1,7
  1919     05F1  2DF3               	goto	u2011
  1920     05F2  2DF4               	goto	u2010
  1921     05F3                     u2011:
  1922     05F3  2DFB               	goto	l2138
  1923     05F4                     u2010:
  1924     05F4                     l2134:
  1925     05F4  09D9               	comf	___awmod@dividend,f
  1926     05F5  09DA               	comf	___awmod@dividend+1,f
  1927     05F6  0AD9               	incf	___awmod@dividend,f
  1928     05F7  1903               	skipnz
  1929     05F8  0ADA               	incf	___awmod@dividend+1,f
  1930     05F9                     l2136:
  1931     05F9  01DC               	clrf	___awmod@sign
  1932     05FA  0ADC               	incf	___awmod@sign,f
  1933     05FB                     l2138:
  1934     05FB  1FD8               	btfss	___awmod@divisor+1,7
  1935     05FC  2DFE               	goto	u2021
  1936     05FD  2DFF               	goto	u2020
  1937     05FE                     u2021:
  1938     05FE  2E04               	goto	l2142
  1939     05FF                     u2020:
  1940     05FF                     l2140:
  1941     05FF  09D7               	comf	___awmod@divisor,f
  1942     0600  09D8               	comf	___awmod@divisor+1,f
  1943     0601  0AD7               	incf	___awmod@divisor,f
  1944     0602  1903               	skipnz
  1945     0603  0AD8               	incf	___awmod@divisor+1,f
  1946     0604                     l2142:
  1947     0604  0857               	movf	___awmod@divisor,w
  1948     0605  0458               	iorwf	___awmod@divisor+1,w
  1949     0606  1903               	btfsc	3,2
  1950     0607  2E09               	goto	u2031
  1951     0608  2E0A               	goto	u2030
  1952     0609                     u2031:
  1953     0609  2E39               	goto	l2160
  1954     060A                     u2030:
  1955     060A                     l2144:
  1956     060A  01DB               	clrf	___awmod@counter
  1957     060B  0ADB               	incf	___awmod@counter,f
  1958     060C  2E18               	goto	l2150
  1959     060D                     l2146:
  1960     060D  3001               	movlw	1
  1961     060E                     u2045:
  1962     060E  1003               	clrc
  1963     060F  0DD7               	rlf	___awmod@divisor,f
  1964     0610  0DD8               	rlf	___awmod@divisor+1,f
  1965     0611  3EFF               	addlw	-1
  1966     0612  1D03               	skipz
  1967     0613  2E0E               	goto	u2045
  1968     0614                     l2148:
  1969     0614  3001               	movlw	1
  1970     0615  00F5               	movwf	??___awmod
  1971     0616  0875               	movf	??___awmod,w
  1972     0617  07DB               	addwf	___awmod@counter,f
  1973     0618                     l2150:
  1974     0618  1FD8               	btfss	___awmod@divisor+1,7
  1975     0619  2E1B               	goto	u2051
  1976     061A  2E1C               	goto	u2050
  1977     061B                     u2051:
  1978     061B  2E0D               	goto	l2146
  1979     061C                     u2050:
  1980     061C                     l2152:
  1981     061C  0858               	movf	___awmod@divisor+1,w
  1982     061D  025A               	subwf	___awmod@dividend+1,w
  1983     061E  1D03               	skipz
  1984     061F  2E22               	goto	u2065
  1985     0620  0857               	movf	___awmod@divisor,w
  1986     0621  0259               	subwf	___awmod@dividend,w
  1987     0622                     u2065:
  1988     0622  1C03               	skipc
  1989     0623  2E25               	goto	u2061
  1990     0624  2E26               	goto	u2060
  1991     0625                     u2061:
  1992     0625  2E2C               	goto	l2156
  1993     0626                     u2060:
  1994     0626                     l2154:
  1995     0626  0857               	movf	___awmod@divisor,w
  1996     0627  02D9               	subwf	___awmod@dividend,f
  1997     0628  0858               	movf	___awmod@divisor+1,w
  1998     0629  1C03               	skipc
  1999     062A  03DA               	decf	___awmod@dividend+1,f
  2000     062B  02DA               	subwf	___awmod@dividend+1,f
  2001     062C                     l2156:
  2002     062C  3001               	movlw	1
  2003     062D                     u2075:
  2004     062D  1003               	clrc
  2005     062E  0CD8               	rrf	___awmod@divisor+1,f
  2006     062F  0CD7               	rrf	___awmod@divisor,f
  2007     0630  3EFF               	addlw	-1
  2008     0631  1D03               	skipz
  2009     0632  2E2D               	goto	u2075
  2010     0633                     l2158:
  2011     0633  3001               	movlw	1
  2012     0634  02DB               	subwf	___awmod@counter,f
  2013     0635  1D03               	btfss	3,2
  2014     0636  2E38               	goto	u2081
  2015     0637  2E39               	goto	u2080
  2016     0638                     u2081:
  2017     0638  2E1C               	goto	l2152
  2018     0639                     u2080:
  2019     0639                     l2160:
  2020     0639  085C               	movf	___awmod@sign,w
  2021     063A  1903               	btfsc	3,2
  2022     063B  2E3D               	goto	u2091
  2023     063C  2E3E               	goto	u2090
  2024     063D                     u2091:
  2025     063D  2E43               	goto	l2164
  2026     063E                     u2090:
  2027     063E                     l2162:
  2028     063E  09D9               	comf	___awmod@dividend,f
  2029     063F  09DA               	comf	___awmod@dividend+1,f
  2030     0640  0AD9               	incf	___awmod@dividend,f
  2031     0641  1903               	skipnz
  2032     0642  0ADA               	incf	___awmod@dividend+1,f
  2033     0643                     l2164:
  2034     0643  085A               	movf	___awmod@dividend+1,w
  2035     0644  00D8               	movwf	?___awmod+1
  2036     0645  0859               	movf	___awmod@dividend,w
  2037     0646  00D7               	movwf	?___awmod
  2038     0647                     l484:
  2039     0647  0008               	return
  2040     0648                     __end_of___awmod:
  2041                           
  2042                           	psect	text5
  2043     06EB                     __ptext5:	
  2044 ;; *************** function _CompareStrings *****************
  2045 ;; Defined at:
  2046 ;;		line 350 in file "main.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  str1            1    wreg     PTR unsigned char 
  2049 ;;		 -> datoSeriale(16), 
  2050 ;;  str2            1    6[BANK0 ] PTR unsigned char 
  2051 ;;		 -> datoTastierino(16), 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  str1            1   10[BANK0 ] PTR unsigned char 
  2054 ;;		 -> datoSeriale(16), 
  2055 ;;  i               1   11[BANK0 ] unsigned char 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      unsigned char 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         0       1       0       0       0
  2066 ;;      Locals:         0       2       0       0       0
  2067 ;;      Temps:          0       3       0       0       0
  2068 ;;      Totals:         0       6       0       0       0
  2069 ;;Total ram usage:        6 bytes
  2070 ;; Hardware stack levels used: 1
  2071 ;; Hardware stack levels required when called: 2
  2072 ;; This function calls:
  2073 ;;		_Length
  2074 ;; This function is called by:
  2075 ;;		_read_NumPad
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           
  2079     06EB                     _CompareStrings:	
  2080                           ;psect for function _CompareStrings
  2081                           
  2082                           
  2083                           ;incstack = 0
  2084                           ; Regs used in _CompareStrings: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2085                           ;CompareStrings@str1 stored from wreg
  2086     06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2087     06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2088     06ED  00CE               	movwf	CompareStrings@str1
  2089     06EE                     l2058:
  2090                           
  2091                           ;main.c: 350: char CompareStrings(char *str1, char *str2);main.c: 351: {;main.c: 352:   
      +                            if(Length(str1) != Length(str2))
  2092     06EE  084E               	movf	CompareStrings@str1,w
  2093     06EF  120A  158A  26A7  120A  118A  	fcall	_Length
  2094     06F4  0874               	movf	?_Length,w
  2095     06F5  1283               	bcf	3,5	;RP0=0, select bank0
  2096     06F6  1303               	bcf	3,6	;RP1=0, select bank0
  2097     06F7  00CB               	movwf	??_CompareStrings
  2098     06F8  0875               	movf	?_Length+1,w
  2099     06F9  00CC               	movwf	??_CompareStrings+1
  2100     06FA  084A               	movf	CompareStrings@str2,w
  2101     06FB  120A  158A  26A7  120A  118A  	fcall	_Length
  2102     0700  0875               	movf	?_Length+1,w
  2103     0701  1283               	bcf	3,5	;RP0=0, select bank0
  2104     0702  1303               	bcf	3,6	;RP1=0, select bank0
  2105     0703  064C               	xorwf	??_CompareStrings+1,w
  2106     0704  1D03               	skipz
  2107     0705  2F08               	goto	u1875
  2108     0706  0874               	movf	?_Length,w
  2109     0707  064B               	xorwf	??_CompareStrings,w
  2110     0708                     u1875:
  2111     0708  1903               	skipnz
  2112     0709  2F0B               	goto	u1871
  2113     070A  2F0C               	goto	u1870
  2114     070B                     u1871:
  2115     070B  2F0E               	goto	l2066
  2116     070C                     u1870:
  2117     070C                     l2060:
  2118                           
  2119                           ;main.c: 353:         return 0;
  2120     070C  3000               	movlw	0
  2121     070D  2F33               	goto	l182
  2122     070E                     l2066:
  2123                           
  2124                           ;main.c: 355:     {;main.c: 356:         char i = 0;
  2125     070E  01CF               	clrf	CompareStrings@i
  2126                           
  2127                           ;main.c: 358:         while(str1[i] != '\0')
  2128     070F  2F27               	goto	l2076
  2129     0710                     l2068:
  2130                           
  2131                           ;main.c: 359:         {;main.c: 360:             if(str1[i] != str2[i])
  2132     0710  084F               	movf	CompareStrings@i,w
  2133     0711  074A               	addwf	CompareStrings@str2,w
  2134     0712  00CB               	movwf	??_CompareStrings
  2135     0713  084B               	movf	??_CompareStrings,w
  2136     0714  0084               	movwf	4
  2137     0715  0800               	movf	0,w
  2138     0716  00CC               	movwf	??_CompareStrings+1
  2139     0717  084F               	movf	CompareStrings@i,w
  2140     0718  074E               	addwf	CompareStrings@str1,w
  2141     0719  00CD               	movwf	??_CompareStrings+2
  2142     071A  084D               	movf	??_CompareStrings+2,w
  2143     071B  0084               	movwf	4
  2144     071C  0800               	movf	0,w
  2145     071D  064C               	xorwf	??_CompareStrings+1,w
  2146     071E  1903               	skipnz
  2147     071F  2F21               	goto	u1881
  2148     0720  2F22               	goto	u1880
  2149     0721                     u1881:
  2150     0721  2F23               	goto	l2074
  2151     0722                     u1880:
  2152     0722  2F0C               	goto	l2060
  2153     0723                     l2074:
  2154                           
  2155                           ;main.c: 363:             i++;
  2156     0723  3001               	movlw	1
  2157     0724  00CB               	movwf	??_CompareStrings
  2158     0725  084B               	movf	??_CompareStrings,w
  2159     0726  07CF               	addwf	CompareStrings@i,f
  2160     0727                     l2076:
  2161                           
  2162                           ;main.c: 358:         while(str1[i] != '\0')
  2163     0727  084F               	movf	CompareStrings@i,w
  2164     0728  074E               	addwf	CompareStrings@str1,w
  2165     0729  00CB               	movwf	??_CompareStrings
  2166     072A  084B               	movf	??_CompareStrings,w
  2167     072B  0084               	movwf	4
  2168     072C  1383               	bcf	3,7	;select IRP bank0
  2169     072D  0800               	movf	0,w
  2170     072E  1D03               	btfss	3,2
  2171     072F  2F31               	goto	u1891
  2172     0730  2F32               	goto	u1890
  2173     0731                     u1891:
  2174     0731  2F10               	goto	l2068
  2175     0732                     u1890:
  2176     0732                     l2078:
  2177                           
  2178                           ;main.c: 366:         return 1;
  2179     0732  3001               	movlw	1
  2180     0733                     l182:
  2181     0733  0008               	return
  2182     0734                     __end_of_CompareStrings:
  2183                           
  2184                           	psect	text6
  2185     0EA7                     __ptext6:	
  2186 ;; *************** function _Length *****************
  2187 ;; Defined at:
  2188 ;;		line 341 in file "main.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  str             1    wreg     PTR unsigned char 
  2191 ;;		 -> datoSeriale(16), datoTastierino(16), 
  2192 ;; Auto vars:     Size  Location     Type
  2193 ;;  str             1    3[BANK0 ] PTR unsigned char 
  2194 ;;		 -> datoSeriale(16), datoTastierino(16), 
  2195 ;;  len             2    4[BANK0 ] int 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  2    4[COMMON] int 
  2198 ;; Registers used:
  2199 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         2       0       0       0       0
  2206 ;;      Locals:         0       3       0       0       0
  2207 ;;      Temps:          0       3       0       0       0
  2208 ;;      Totals:         2       6       0       0       0
  2209 ;;Total ram usage:        8 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; Hardware stack levels required when called: 1
  2212 ;; This function calls:
  2213 ;;		Nothing
  2214 ;; This function is called by:
  2215 ;;		_CompareStrings
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219     0EA7                     _Length:	
  2220                           ;psect for function _Length
  2221                           
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _Length: [wreg-fsr0h+status,2+status,0]
  2225                           ;Length@str stored from wreg
  2226     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  2227     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  2228     0EA9  00C7               	movwf	Length@str
  2229     0EAA                     l1904:
  2230                           
  2231                           ;main.c: 341: int Length(char *str);main.c: 342: {;main.c: 343:     int len = 0;
  2232     0EAA  01C8               	clrf	Length@len
  2233     0EAB  01C9               	clrf	Length@len+1
  2234     0EAC                     l1906:	
  2235                           ;main.c: 345:     while(str[len++] != '\0') {}
  2236                           
  2237     0EAC  0849               	movf	Length@len+1,w
  2238     0EAD  00C5               	movwf	??_Length+1
  2239     0EAE  0848               	movf	Length@len,w
  2240     0EAF  00C4               	movwf	??_Length
  2241     0EB0  0AC8               	incf	Length@len,f
  2242     0EB1  1903               	skipnz
  2243     0EB2  0AC9               	incf	Length@len+1,f
  2244     0EB3  0844               	movf	??_Length,w
  2245     0EB4  0747               	addwf	Length@str,w
  2246     0EB5  00C6               	movwf	??_Length+2
  2247     0EB6  0846               	movf	??_Length+2,w
  2248     0EB7  0084               	movwf	4
  2249     0EB8  1383               	bcf	3,7	;select IRP bank0
  2250     0EB9  0800               	movf	0,w
  2251     0EBA  1D03               	btfss	3,2
  2252     0EBB  2EBD               	goto	u1611
  2253     0EBC  2EBE               	goto	u1610
  2254     0EBD                     u1611:
  2255     0EBD  2EAC               	goto	l1906
  2256     0EBE                     u1610:
  2257     0EBE                     l1908:
  2258                           
  2259                           ;main.c: 347:     return len;
  2260     0EBE  0849               	movf	Length@len+1,w
  2261     0EBF  00F5               	movwf	?_Length+1
  2262     0EC0  0848               	movf	Length@len,w
  2263     0EC1  00F4               	movwf	?_Length
  2264     0EC2                     l178:
  2265     0EC2  0008               	return
  2266     0EC3                     __end_of_Length:
  2267                           
  2268                           	psect	text7
  2269     0734                     __ptext7:	
  2270 ;; *************** function _lcdPrint *****************
  2271 ;; Defined at:
  2272 ;;		line 249 in file "main.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2275 ;;		 -> datoTastierino(16), STR_8(17), STR_7(16), STR_6(13), 
  2276 ;;		 -> STR_5(15), STR_4(12), STR_3(13), STR_2(16), 
  2277 ;;		 -> main@num_rand_s(16), 
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;  n               2    7[BANK0 ] int 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       2       0       0       0
  2290 ;;      Locals:         0       2       0       0       0
  2291 ;;      Temps:          0       3       0       0       0
  2292 ;;      Totals:         0       7       0       0       0
  2293 ;;Total ram usage:        7 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 2
  2296 ;; This function calls:
  2297 ;;		_lcdSend
  2298 ;; This function is called by:
  2299 ;;		_main
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303     0734                     _lcdPrint:	
  2304                           ;psect for function _lcdPrint
  2305                           
  2306     0734                     l2266:	
  2307                           ;incstack = 0
  2308                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2309                           
  2310                           
  2311                           ;main.c: 249: void lcdPrint(char *str);main.c: 250: {;main.c: 251:     int n = 0;
  2312     0734  1283               	bcf	3,5	;RP0=0, select bank0
  2313     0735  1303               	bcf	3,6	;RP1=0, select bank0
  2314     0736  01CB               	clrf	lcdPrint@n
  2315     0737  01CC               	clrf	lcdPrint@n+1
  2316                           
  2317                           ;main.c: 253:     while(str[n] != '\0')
  2318     0738  2F5F               	goto	l2272
  2319     0739                     l2268:
  2320                           
  2321                           ;main.c: 254:     {;main.c: 256:         lcdSend(str[n++], 1);
  2322     0739  01F4               	clrf	lcdSend@tipo
  2323     073A  0AF4               	incf	lcdSend@tipo,f
  2324     073B  084B               	movf	lcdPrint@n,w
  2325     073C  0746               	addwf	lcdPrint@str,w
  2326     073D  00C9               	movwf	??_lcdPrint+1
  2327     073E  0847               	movf	lcdPrint@str+1,w
  2328     073F  00C8               	movwf	??_lcdPrint
  2329     0740  1803               	skipnc
  2330     0741  0AC8               	incf	??_lcdPrint,f
  2331     0742  1FCB               	btfss	lcdPrint@n,7
  2332     0743  2F45               	goto	u2250
  2333     0744  03C8               	decf	??_lcdPrint,f
  2334     0745                     u2250:
  2335     0745  1283               	bcf	3,5	;RP0=0, select bank0
  2336     0746  1303               	bcf	3,6	;RP1=0, select bank0
  2337     0747  0848               	movf	??_lcdPrint,w
  2338     0748  00CA               	movwf	??_lcdPrint+2
  2339     0749  084A               	movf	??_lcdPrint+2,w
  2340     074A  00FF               	movwf	btemp+1
  2341     074B  0849               	movf	??_lcdPrint+1,w
  2342     074C  0084               	movwf	4
  2343     074D  120A  118A  2500  120A  118A  	fcall	stringtab
  2344     0752  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2345     0757                     l2270:
  2346     0757  3001               	movlw	1
  2347     0758  1283               	bcf	3,5	;RP0=0, select bank0
  2348     0759  1303               	bcf	3,6	;RP1=0, select bank0
  2349     075A  07CB               	addwf	lcdPrint@n,f
  2350     075B  1803               	skipnc
  2351     075C  0ACC               	incf	lcdPrint@n+1,f
  2352     075D  3000               	movlw	0
  2353     075E  07CC               	addwf	lcdPrint@n+1,f
  2354     075F                     l2272:
  2355                           
  2356                           ;main.c: 253:     while(str[n] != '\0')
  2357     075F  084B               	movf	lcdPrint@n,w
  2358     0760  0746               	addwf	lcdPrint@str,w
  2359     0761  00C9               	movwf	??_lcdPrint+1
  2360     0762  0847               	movf	lcdPrint@str+1,w
  2361     0763  00C8               	movwf	??_lcdPrint
  2362     0764  1803               	skipnc
  2363     0765  0AC8               	incf	??_lcdPrint,f
  2364     0766  1FCB               	btfss	lcdPrint@n,7
  2365     0767  2F69               	goto	u2260
  2366     0768  03C8               	decf	??_lcdPrint,f
  2367     0769                     u2260:
  2368     0769  1283               	bcf	3,5	;RP0=0, select bank0
  2369     076A  1303               	bcf	3,6	;RP1=0, select bank0
  2370     076B  0848               	movf	??_lcdPrint,w
  2371     076C  00CA               	movwf	??_lcdPrint+2
  2372     076D  084A               	movf	??_lcdPrint+2,w
  2373     076E  00FF               	movwf	btemp+1
  2374     076F  0849               	movf	??_lcdPrint+1,w
  2375     0770  0084               	movwf	4
  2376     0771  120A  118A  2500  120A  118A  	fcall	stringtab
  2377     0776  3A00               	xorlw	0
  2378     0777  1D03               	skipz
  2379     0778  2F7A               	goto	u2271
  2380     0779  2F7B               	goto	u2270
  2381     077A                     u2271:
  2382     077A  2F39               	goto	l2268
  2383     077B                     u2270:
  2384     077B                     l142:
  2385     077B  0008               	return
  2386     077C                     __end_of_lcdPrint:
  2387                           
  2388                           	psect	text8
  2389     0EC3                     __ptext8:	
  2390 ;; *************** function _init_PIC *****************
  2391 ;; Defined at:
  2392 ;;		line 193 in file "main.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;		None
  2397 ;; Return value:  Size  Location     Type
  2398 ;;                  1    wreg      void 
  2399 ;; Registers used:
  2400 ;;		wreg, status,2, status,0, pclath, cstack
  2401 ;; Tracked objects:
  2402 ;;		On entry : 0/0
  2403 ;;		On exit  : 0/0
  2404 ;;		Unchanged: 0/0
  2405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2406 ;;      Params:         0       0       0       0       0
  2407 ;;      Locals:         0       0       0       0       0
  2408 ;;      Temps:          0       0       0       0       0
  2409 ;;      Totals:         0       0       0       0       0
  2410 ;;Total ram usage:        0 bytes
  2411 ;; Hardware stack levels used: 1
  2412 ;; Hardware stack levels required when called: 3
  2413 ;; This function calls:
  2414 ;;		_UART_init
  2415 ;;		_init_LCD
  2416 ;;		_init_NumPad
  2417 ;;		_init_Timer0
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423     0EC3                     _init_PIC:	
  2424                           ;psect for function _init_PIC
  2425                           
  2426     0EC3                     l2168:	
  2427                           ;incstack = 0
  2428                           ; Regs used in _init_PIC: [wreg+status,2+status,0+pclath+cstack]
  2429                           
  2430                           
  2431                           ;main.c: 195:     UART_init(115200);
  2432     0EC3  3000               	movlw	0
  2433     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  2434     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  2435     0EC6  00E3               	movwf	UART_init@baudrate+3
  2436     0EC7  3001               	movlw	1
  2437     0EC8  00E2               	movwf	UART_init@baudrate+2
  2438     0EC9  30C2               	movlw	194
  2439     0ECA  00E1               	movwf	UART_init@baudrate+1
  2440     0ECB  3000               	movlw	0
  2441     0ECC  00E0               	movwf	UART_init@baudrate
  2442     0ECD  120A  158A  2773  120A  158A  	fcall	_UART_init
  2443                           
  2444                           ;main.c: 196:     init_LCD();
  2445     0ED2  120A  118A  2648  120A  158A  	fcall	_init_LCD
  2446                           
  2447                           ;main.c: 197:     init_NumPad();
  2448     0ED7  120A  158A  2679  120A  158A  	fcall	_init_NumPad
  2449                           
  2450                           ;main.c: 199:     init_Timer0();
  2451     0EDC  120A  158A  2692  120A  158A  	fcall	_init_Timer0
  2452     0EE1                     l127:
  2453     0EE1  0008               	return
  2454     0EE2                     __end_of_init_PIC:
  2455                           
  2456                           	psect	text9
  2457     0E92                     __ptext9:	
  2458 ;; *************** function _init_Timer0 *****************
  2459 ;; Defined at:
  2460 ;;		line 202 in file "main.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          1       0       0       0       0
  2477 ;;      Totals:         1       0       0       0       0
  2478 ;;Total ram usage:        1 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_init_PIC
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488     0E92                     _init_Timer0:	
  2489                           ;psect for function _init_Timer0
  2490                           
  2491     0E92                     l2020:	
  2492                           ;incstack = 0
  2493                           ; Regs used in _init_Timer0: [wreg+status,2+status,0]
  2494                           
  2495                           
  2496                           ;main.c: 205:     INTCON |= 0xA0;
  2497     0E92  30A0               	movlw	160
  2498     0E93  00F4               	movwf	??_init_Timer0
  2499     0E94  0874               	movf	??_init_Timer0,w
  2500     0E95  048B               	iorwf	11,f	;volatile
  2501     0E96                     l2022:
  2502                           
  2503                           ;main.c: 206:     OPTION_REG = 0x06;
  2504     0E96  3006               	movlw	6
  2505     0E97  1683               	bsf	3,5	;RP0=1, select bank1
  2506     0E98  1303               	bcf	3,6	;RP1=0, select bank1
  2507     0E99  0081               	movwf	1	;volatile
  2508     0E9A                     l2024:
  2509                           
  2510                           ;main.c: 207:     TMR0 = 131;
  2511     0E9A  3083               	movlw	131
  2512     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  2513     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  2514     0E9D  0081               	movwf	1	;volatile
  2515     0E9E                     l2026:
  2516                           
  2517                           ;main.c: 208:     milliseconds = 0;
  2518     0E9E  3000               	movlw	0
  2519     0E9F  00A3               	movwf	_milliseconds+3
  2520     0EA0  3000               	movlw	0
  2521     0EA1  00A2               	movwf	_milliseconds+2
  2522     0EA2  3000               	movlw	0
  2523     0EA3  00A1               	movwf	_milliseconds+1
  2524     0EA4  3000               	movlw	0
  2525     0EA5  00A0               	movwf	_milliseconds
  2526     0EA6                     l130:
  2527     0EA6  0008               	return
  2528     0EA7                     __end_of_init_Timer0:
  2529                           
  2530                           	psect	text10
  2531     0E79                     __ptext10:	
  2532 ;; *************** function _init_NumPad *****************
  2533 ;; Defined at:
  2534 ;;		line 370 in file "main.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;		None
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;		None
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      void 
  2541 ;; Registers used:
  2542 ;;		wreg, status,2, status,0
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2548 ;;      Params:         0       0       0       0       0
  2549 ;;      Locals:         0       0       0       0       0
  2550 ;;      Temps:          1       0       0       0       0
  2551 ;;      Totals:         1       0       0       0       0
  2552 ;;Total ram usage:        1 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 1
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_init_PIC
  2559 ;; This function uses a non-reentrant model
  2560 ;;
  2561                           
  2562     0E79                     _init_NumPad:	
  2563                           ;psect for function _init_NumPad
  2564                           
  2565     0E79                     l2018:	
  2566                           ;incstack = 0
  2567                           ; Regs used in _init_NumPad: [wreg+status,2+status,0]
  2568                           
  2569                           
  2570                           ;main.c: 372:     TRISD |= 0x0F;
  2571     0E79  300F               	movlw	15
  2572     0E7A  00F4               	movwf	??_init_NumPad
  2573     0E7B  0874               	movf	??_init_NumPad,w
  2574     0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  2575     0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  2576     0E7E  0488               	iorwf	8,f	;volatile
  2577                           
  2578                           ;main.c: 373:     TRISB &= 0xF0;
  2579     0E7F  30F0               	movlw	240
  2580     0E80  00F4               	movwf	??_init_NumPad
  2581     0E81  0874               	movf	??_init_NumPad,w
  2582     0E82  0586               	andwf	6,f	;volatile
  2583     0E83                     l190:
  2584     0E83  0008               	return
  2585     0E84                     __end_of_init_NumPad:
  2586                           
  2587                           	psect	text11
  2588     0648                     __ptext11:	
  2589 ;; *************** function _init_LCD *****************
  2590 ;; Defined at:
  2591 ;;		line 211 in file "main.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;		None
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  1    wreg      void 
  2598 ;; Registers used:
  2599 ;;		wreg, status,2, status,0, pclath, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2605 ;;      Params:         0       0       0       0       0
  2606 ;;      Locals:         0       0       0       0       0
  2607 ;;      Temps:          0       2       0       0       0
  2608 ;;      Totals:         0       2       0       0       0
  2609 ;;Total ram usage:        2 bytes
  2610 ;; Hardware stack levels used: 1
  2611 ;; Hardware stack levels required when called: 2
  2612 ;; This function calls:
  2613 ;;		_lcdSend
  2614 ;; This function is called by:
  2615 ;;		_init_PIC
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619     0648                     _init_LCD:	
  2620                           ;psect for function _init_LCD
  2621                           
  2622     0648                     l1996:	
  2623                           ;incstack = 0
  2624                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2625                           
  2626                           
  2627                           ;main.c: 215:     PORTEbits.RE2 = 0;
  2628     0648  1283               	bcf	3,5	;RP0=0, select bank0
  2629     0649  1303               	bcf	3,6	;RP1=0, select bank0
  2630     064A  1109               	bcf	9,2	;volatile
  2631                           
  2632                           ;main.c: 216:     PORTEbits.RE1 = 0;
  2633     064B  1089               	bcf	9,1	;volatile
  2634     064C                     l1998:
  2635                           
  2636                           ;main.c: 217:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2637     064C  3082               	movlw	130
  2638     064D  1283               	bcf	3,5	;RP0=0, select bank0
  2639     064E  1303               	bcf	3,6	;RP1=0, select bank0
  2640     064F  00C7               	movwf	??_init_LCD+1
  2641     0650  30DD               	movlw	221
  2642     0651  00C6               	movwf	??_init_LCD
  2643     0652                     u2407:
  2644     0652  0BC6               	decfsz	??_init_LCD,f
  2645     0653  2E52               	goto	u2407
  2646     0654  0BC7               	decfsz	??_init_LCD+1,f
  2647     0655  2E52               	goto	u2407
  2648     0656                     l2000:
  2649                           
  2650                           ;main.c: 218:     PORTEbits.RE1 = 1;
  2651     0656  1283               	bcf	3,5	;RP0=0, select bank0
  2652     0657  1303               	bcf	3,6	;RP1=0, select bank0
  2653     0658  1489               	bsf	9,1	;volatile
  2654     0659                     l2002:
  2655                           
  2656                           ;main.c: 220:     lcdSend(0x38, 0);
  2657     0659  01F4               	clrf	lcdSend@tipo
  2658     065A  3038               	movlw	56
  2659     065B  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2660     0660                     l2004:
  2661                           
  2662                           ;main.c: 221:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2663     0660  3021               	movlw	33
  2664     0661  1283               	bcf	3,5	;RP0=0, select bank0
  2665     0662  1303               	bcf	3,6	;RP1=0, select bank0
  2666     0663  00C7               	movwf	??_init_LCD+1
  2667     0664  3075               	movlw	117
  2668     0665  00C6               	movwf	??_init_LCD
  2669     0666                     u2417:
  2670     0666  0BC6               	decfsz	??_init_LCD,f
  2671     0667  2E66               	goto	u2417
  2672     0668  0BC7               	decfsz	??_init_LCD+1,f
  2673     0669  2E66               	goto	u2417
  2674     066A  2E6B               	nop2
  2675                           
  2676                           ;main.c: 222:     lcdSend(0x38, 0);
  2677     066B  01F4               	clrf	lcdSend@tipo
  2678     066C  3038               	movlw	56
  2679     066D  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2680     0672                     l2006:
  2681                           
  2682                           ;main.c: 223:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2683     0672  3007               	movlw	7
  2684     0673  1283               	bcf	3,5	;RP0=0, select bank0
  2685     0674  1303               	bcf	3,6	;RP1=0, select bank0
  2686     0675  00C7               	movwf	??_init_LCD+1
  2687     0676  307C               	movlw	124
  2688     0677  00C6               	movwf	??_init_LCD
  2689     0678                     u2427:
  2690     0678  0BC6               	decfsz	??_init_LCD,f
  2691     0679  2E78               	goto	u2427
  2692     067A  0BC7               	decfsz	??_init_LCD+1,f
  2693     067B  2E78               	goto	u2427
  2694     067C  0000               	nop
  2695     067D                     l2008:
  2696                           
  2697                           ;main.c: 224:     lcdSend(0x38, 0);
  2698     067D  01F4               	clrf	lcdSend@tipo
  2699     067E  3038               	movlw	56
  2700     067F  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2701     0684                     l2010:
  2702                           
  2703                           ;main.c: 225:     lcdSend(0x08, 0);
  2704     0684  01F4               	clrf	lcdSend@tipo
  2705     0685  3008               	movlw	8
  2706     0686  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2707     068B                     l2012:
  2708                           
  2709                           ;main.c: 226:     lcdSend(0x0F, 0);
  2710     068B  01F4               	clrf	lcdSend@tipo
  2711     068C  300F               	movlw	15
  2712     068D  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2713     0692                     l2014:
  2714                           
  2715                           ;main.c: 227:     lcdSend(0x01, 0);
  2716     0692  01F4               	clrf	lcdSend@tipo
  2717     0693  3001               	movlw	1
  2718     0694  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2719     0699                     l2016:
  2720                           
  2721                           ;main.c: 229:     lcdSend(0x0C, 0);
  2722     0699  01F4               	clrf	lcdSend@tipo
  2723     069A  300C               	movlw	12
  2724     069B  120A  158A  2709  120A  118A  	fcall	_lcdSend
  2725     06A0                     l133:
  2726     06A0  0008               	return
  2727     06A1                     __end_of_init_LCD:
  2728                           
  2729                           	psect	text12
  2730     0F09                     __ptext12:	
  2731 ;; *************** function _lcdSend *****************
  2732 ;; Defined at:
  2733 ;;		line 232 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  dato            1    wreg     unsigned char 
  2736 ;;  tipo            1    4[COMMON] unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  dato            1    5[COMMON] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2748 ;;      Params:         1       0       0       0       0
  2749 ;;      Locals:         1       0       0       0       0
  2750 ;;      Temps:          0       2       0       0       0
  2751 ;;      Totals:         2       2       0       0       0
  2752 ;;Total ram usage:        4 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;;		_init_LCD
  2760 ;;		_lcdPrint
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764     0F09                     _lcdSend:	
  2765                           ;psect for function _lcdSend
  2766                           
  2767                           
  2768                           ;incstack = 0
  2769                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2770                           ;lcdSend@dato stored from wreg
  2771     0F09  00F5               	movwf	lcdSend@dato
  2772     0F0A                     l1884:
  2773                           
  2774                           ;main.c: 232: void lcdSend(char dato, char tipo);main.c: 233: {;main.c: 236:     TRISD =
      +                           0x00;
  2775     0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  2776     0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  2777     0F0C  0188               	clrf	8	;volatile
  2778     0F0D                     l1886:
  2779                           
  2780                           ;main.c: 237:     TRISEbits.TRISE1 = 0;
  2781     0F0D  1089               	bcf	9,1	;volatile
  2782     0F0E                     l1888:
  2783                           
  2784                           ;main.c: 238:     TRISEbits.TRISE2 = 0;
  2785     0F0E  1109               	bcf	9,2	;volatile
  2786     0F0F                     l1890:
  2787                           
  2788                           ;main.c: 240:     PORTEbits.RE1 = 1;
  2789     0F0F  1283               	bcf	3,5	;RP0=0, select bank0
  2790     0F10  1303               	bcf	3,6	;RP1=0, select bank0
  2791     0F11  1489               	bsf	9,1	;volatile
  2792     0F12                     l1892:
  2793                           
  2794                           ;main.c: 241:     PORTD = dato;
  2795     0F12  0875               	movf	lcdSend@dato,w
  2796     0F13  0088               	movwf	8	;volatile
  2797     0F14                     l1894:
  2798                           
  2799                           ;main.c: 242:     PORTEbits.RE2 = tipo;
  2800     0F14  0C74               	rrf	lcdSend@tipo,w
  2801     0F15  1C03               	skipc
  2802     0F16  1109               	bcf	9,2	;volatile
  2803     0F17  1803               	skipnc
  2804     0F18  1509               	bsf	9,2	;volatile
  2805     0F19                     l1896:
  2806                           
  2807                           ;main.c: 243:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2808     0F19  3014               	movlw	20
  2809     0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  2810     0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  2811     0F1C  00C5               	movwf	??_lcdSend+1
  2812     0F1D  3079               	movlw	121
  2813     0F1E  00C4               	movwf	??_lcdSend
  2814     0F1F                     u2437:
  2815     0F1F  0BC4               	decfsz	??_lcdSend,f
  2816     0F20  2F1F               	goto	u2437
  2817     0F21  0BC5               	decfsz	??_lcdSend+1,f
  2818     0F22  2F1F               	goto	u2437
  2819     0F23                     l1898:
  2820                           
  2821                           ;main.c: 244:     PORTEbits.RE1 = 0;
  2822     0F23  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0F24  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0F25  1089               	bcf	9,1	;volatile
  2825     0F26                     l1900:
  2826                           
  2827                           ;main.c: 245:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2828     0F26  3014               	movlw	20
  2829     0F27  1283               	bcf	3,5	;RP0=0, select bank0
  2830     0F28  1303               	bcf	3,6	;RP1=0, select bank0
  2831     0F29  00C5               	movwf	??_lcdSend+1
  2832     0F2A  3079               	movlw	121
  2833     0F2B  00C4               	movwf	??_lcdSend
  2834     0F2C                     u2447:
  2835     0F2C  0BC4               	decfsz	??_lcdSend,f
  2836     0F2D  2F2C               	goto	u2447
  2837     0F2E  0BC5               	decfsz	??_lcdSend+1,f
  2838     0F2F  2F2C               	goto	u2447
  2839     0F30                     l1902:
  2840                           
  2841                           ;main.c: 246:     PORTEbits.RE1 = 1;
  2842     0F30  1283               	bcf	3,5	;RP0=0, select bank0
  2843     0F31  1303               	bcf	3,6	;RP1=0, select bank0
  2844     0F32  1489               	bsf	9,1	;volatile
  2845     0F33                     l136:
  2846     0F33  0008               	return
  2847     0F34                     __end_of_lcdSend:
  2848                           
  2849                           	psect	text13
  2850     0F73                     __ptext13:	
  2851 ;; *************** function _UART_init *****************
  2852 ;; Defined at:
  2853 ;;		line 449 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  baudrate        4   28[BANK0 ] long 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2867 ;;      Params:         0       4       0       0       0
  2868 ;;      Locals:         0       0       0       0       0
  2869 ;;      Temps:          0       4       0       0       0
  2870 ;;      Totals:         0       8       0       0       0
  2871 ;;Total ram usage:        8 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 2
  2874 ;; This function calls:
  2875 ;;		___aldiv
  2876 ;; This function is called by:
  2877 ;;		_init_PIC
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881     0F73                     _UART_init:	
  2882                           ;psect for function _UART_init
  2883                           
  2884     0F73                     l1980:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888                           
  2889                           ;main.c: 449: void UART_init(long int baudrate);main.c: 450: {;main.c: 452:     TRISC &=
      +                           ~0x40;
  2890     0F73  30BF               	movlw	191
  2891     0F74  1283               	bcf	3,5	;RP0=0, select bank0
  2892     0F75  1303               	bcf	3,6	;RP1=0, select bank0
  2893     0F76  00E4               	movwf	??_UART_init
  2894     0F77  0864               	movf	??_UART_init,w
  2895     0F78  1683               	bsf	3,5	;RP0=1, select bank1
  2896     0F79  1303               	bcf	3,6	;RP1=0, select bank1
  2897     0F7A  0587               	andwf	7,f	;volatile
  2898     0F7B                     l1982:
  2899                           
  2900                           ;main.c: 453:     TRISC |= 0x80;
  2901     0F7B  1787               	bsf	7,7	;volatile
  2902                           
  2903                           ;main.c: 454:     TXSTA |= 0x24;
  2904     0F7C  3024               	movlw	36
  2905     0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  2906     0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  2907     0F7F  00E4               	movwf	??_UART_init
  2908     0F80  0864               	movf	??_UART_init,w
  2909     0F81  1683               	bsf	3,5	;RP0=1, select bank1
  2910     0F82  1303               	bcf	3,6	;RP1=0, select bank1
  2911     0F83  0498               	iorwf	24,f	;volatile
  2912     0F84                     l1984:
  2913                           
  2914                           ;main.c: 455:     RCSTA |= 0x80;
  2915     0F84  1283               	bcf	3,5	;RP0=0, select bank0
  2916     0F85  1303               	bcf	3,6	;RP1=0, select bank0
  2917     0F86  1798               	bsf	24,7	;volatile
  2918     0F87                     l1986:
  2919                           
  2920                           ;main.c: 456:     RCSTA |= 0x10;
  2921     0F87  1618               	bsf	24,4	;volatile
  2922     0F88                     l1988:
  2923                           
  2924                           ;main.c: 459:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  2925     0F88  0860               	movf	UART_init@baudrate,w
  2926     0F89  00E4               	movwf	??_UART_init
  2927     0F8A  0861               	movf	UART_init@baudrate+1,w
  2928     0F8B  00E5               	movwf	??_UART_init+1
  2929     0F8C  0862               	movf	UART_init@baudrate+2,w
  2930     0F8D  00E6               	movwf	??_UART_init+2
  2931     0F8E  0863               	movf	UART_init@baudrate+3,w
  2932     0F8F  00E7               	movwf	??_UART_init+3
  2933     0F90  3006               	movlw	6
  2934     0F91                     u1815:
  2935     0F91  1003               	clrc
  2936     0F92  0DE4               	rlf	??_UART_init,f
  2937     0F93  0DE5               	rlf	??_UART_init+1,f
  2938     0F94  0DE6               	rlf	??_UART_init+2,f
  2939     0F95  0DE7               	rlf	??_UART_init+3,f
  2940     0F96                     u1810:
  2941     0F96  3EFF               	addlw	-1
  2942     0F97  1D03               	skipz
  2943     0F98  2F91               	goto	u1815
  2944     0F99  0867               	movf	??_UART_init+3,w
  2945     0F9A  00D4               	movwf	___aldiv@divisor+3
  2946     0F9B  0866               	movf	??_UART_init+2,w
  2947     0F9C  00D3               	movwf	___aldiv@divisor+2
  2948     0F9D  0865               	movf	??_UART_init+1,w
  2949     0F9E  00D2               	movwf	___aldiv@divisor+1
  2950     0F9F  0864               	movf	??_UART_init,w
  2951     0FA0  00D1               	movwf	___aldiv@divisor
  2952     0FA1  3001               	movlw	1
  2953     0FA2  00D8               	movwf	___aldiv@dividend+3
  2954     0FA3  3031               	movlw	49
  2955     0FA4  00D7               	movwf	___aldiv@dividend+2
  2956     0FA5  302D               	movlw	45
  2957     0FA6  00D6               	movwf	___aldiv@dividend+1
  2958     0FA7  3000               	movlw	0
  2959     0FA8  00D5               	movwf	___aldiv@dividend
  2960     0FA9  120A  118A  23B7  120A  158A  	fcall	___aldiv
  2961     0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  2962     0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  2963     0FB0  0851               	movf	?___aldiv,w
  2964     0FB1  3EFF               	addlw	255
  2965     0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  2966     0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  2967     0FB4  0099               	movwf	25	;volatile
  2968     0FB5                     l1990:
  2969                           
  2970                           ;main.c: 462:     INTCON |= 0x80;
  2971     0FB5  178B               	bsf	11,7	;volatile
  2972     0FB6                     l1992:
  2973                           
  2974                           ;main.c: 464:     INTCON |= 0x40;
  2975     0FB6  170B               	bsf	11,6	;volatile
  2976     0FB7                     l1994:
  2977                           
  2978                           ;main.c: 466:     PIE1 |= 0x20;
  2979     0FB7  168C               	bsf	12,5	;volatile
  2980     0FB8                     l213:
  2981     0FB8  0008               	return
  2982     0FB9                     __end_of_UART_init:
  2983                           
  2984                           	psect	text14
  2985     04DB                     __ptext14:	
  2986 ;; *************** function _UART_TxString *****************
  2987 ;; Defined at:
  2988 ;;		line 479 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  str             1    wreg     PTR const unsigned char 
  2991 ;;		 -> main@packet(50), 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  str             1    1[BANK0 ] PTR const unsigned char 
  2994 ;;		 -> main@packet(50), 
  2995 ;;  n               2    2[BANK0 ] unsigned int 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3005 ;;      Params:         0       0       0       0       0
  3006 ;;      Locals:         0       3       0       0       0
  3007 ;;      Temps:          0       1       0       0       0
  3008 ;;      Totals:         0       4       0       0       0
  3009 ;;Total ram usage:        4 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 2
  3012 ;; This function calls:
  3013 ;;		_UART_TxChar
  3014 ;; This function is called by:
  3015 ;;		_main
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019     04DB                     _UART_TxString:	
  3020                           ;psect for function _UART_TxString
  3021                           
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3025                           ;UART_TxString@str stored from wreg
  3026     04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3027     04DC  1303               	bcf	3,6	;RP1=0, select bank0
  3028     04DD  00C5               	movwf	UART_TxString@str
  3029     04DE                     l2290:
  3030                           
  3031                           ;main.c: 479: void UART_TxString(const char *str);main.c: 480: {;main.c: 481:     unsign
      +                          ed int n = 0;
  3032     04DE  01C6               	clrf	UART_TxString@n
  3033     04DF  01C7               	clrf	UART_TxString@n+1
  3034                           
  3035                           ;main.c: 483:     while(str[n] != '\0')
  3036     04E0  2CF4               	goto	l2296
  3037     04E1                     l2292:
  3038                           
  3039                           ;main.c: 484:     {;main.c: 485:         UART_TxChar(str[n]);
  3040     04E1  0846               	movf	UART_TxString@n,w
  3041     04E2  0745               	addwf	UART_TxString@str,w
  3042     04E3  00C4               	movwf	??_UART_TxString
  3043     04E4  0844               	movf	??_UART_TxString,w
  3044     04E5  0084               	movwf	4
  3045     04E6  0800               	movf	0,w
  3046     04E7  120A  158A  2684  120A  118A  	fcall	_UART_TxChar
  3047     04EC                     l2294:
  3048                           
  3049                           ;main.c: 486:         n++;
  3050     04EC  3001               	movlw	1
  3051     04ED  1283               	bcf	3,5	;RP0=0, select bank0
  3052     04EE  1303               	bcf	3,6	;RP1=0, select bank0
  3053     04EF  07C6               	addwf	UART_TxString@n,f
  3054     04F0  1803               	skipnc
  3055     04F1  0AC7               	incf	UART_TxString@n+1,f
  3056     04F2  3000               	movlw	0
  3057     04F3  07C7               	addwf	UART_TxString@n+1,f
  3058     04F4                     l2296:
  3059                           
  3060                           ;main.c: 483:     while(str[n] != '\0')
  3061     04F4  0846               	movf	UART_TxString@n,w
  3062     04F5  0745               	addwf	UART_TxString@str,w
  3063     04F6  00C4               	movwf	??_UART_TxString
  3064     04F7  0844               	movf	??_UART_TxString,w
  3065     04F8  0084               	movwf	4
  3066     04F9  1783               	bsf	3,7	;select IRP bank2
  3067     04FA  0800               	movf	0,w
  3068     04FB  1D03               	btfss	3,2
  3069     04FC  2CFE               	goto	u2291
  3070     04FD  2CFF               	goto	u2290
  3071     04FE                     u2291:
  3072     04FE  2CE1               	goto	l2292
  3073     04FF                     u2290:
  3074     04FF                     l225:
  3075     04FF  0008               	return
  3076     0500                     __end_of_UART_TxString:
  3077                           
  3078                           	psect	text15
  3079     0E84                     __ptext15:	
  3080 ;; *************** function _UART_TxChar *****************
  3081 ;; Defined at:
  3082 ;;		line 469 in file "main.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  ch              1    wreg     unsigned char 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  ch              1    5[COMMON] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         1       0       0       0       0
  3098 ;;      Temps:          1       0       0       0       0
  3099 ;;      Totals:         2       0       0       0       0
  3100 ;;Total ram usage:        2 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_UART_TxString
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110     0E84                     _UART_TxChar:	
  3111                           ;psect for function _UART_TxChar
  3112                           
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  3116                           ;UART_TxChar@ch stored from wreg
  3117     0E84  00F5               	movwf	UART_TxChar@ch
  3118     0E85                     l2092:
  3119     0E85                     l216:	
  3120                           ;main.c: 469: void UART_TxChar(char ch);main.c: 470: {;main.c: 472:     while(!(PIR1 & 0
      +                          x10));
  3121                           
  3122     0E85  1283               	bcf	3,5	;RP0=0, select bank0
  3123     0E86  1303               	bcf	3,6	;RP1=0, select bank0
  3124     0E87  1E0C               	btfss	12,4	;volatile
  3125     0E88  2E8A               	goto	u1911
  3126     0E89  2E8B               	goto	u1910
  3127     0E8A                     u1911:
  3128     0E8A  2E85               	goto	l216
  3129     0E8B                     u1910:
  3130     0E8B                     l2094:
  3131                           
  3132                           ;main.c: 474:     PIR1 &= ~0x10;
  3133     0E8B  30EF               	movlw	239
  3134     0E8C  00F4               	movwf	??_UART_TxChar
  3135     0E8D  0874               	movf	??_UART_TxChar,w
  3136     0E8E  058C               	andwf	12,f	;volatile
  3137     0E8F                     l2096:
  3138                           
  3139                           ;main.c: 476:     TXREG = ch;
  3140     0E8F  0875               	movf	UART_TxChar@ch,w
  3141     0E90  0099               	movwf	25	;volatile
  3142     0E91                     l219:
  3143     0E91  0008               	return
  3144     0E92                     __end_of_UART_TxChar:
  3145                           
  3146                           	psect	text16
  3147     01AE                     __ptext16:	
  3148 ;; *************** function _ConvertToString *****************
  3149 ;; Defined at:
  3150 ;;		line 271 in file "main.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  n               4   28[BANK0 ] long 
  3153 ;;  str             1   32[BANK0 ] PTR unsigned char 
  3154 ;;		 -> main@num_rand_s(16), 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  temp            2    0[BANK1 ] int 
  3157 ;;  i               2    4[BANK1 ] int 
  3158 ;;  j               2    2[BANK1 ] int 
  3159 ;;  n_cifre         1    6[BANK1 ] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3169 ;;      Params:         0       5       0       0       0
  3170 ;;      Locals:         0       0       7       0       0
  3171 ;;      Temps:          0       1       0       0       0
  3172 ;;      Totals:         0       6       7       0       0
  3173 ;;Total ram usage:       13 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 3
  3176 ;; This function calls:
  3177 ;;		___aldiv
  3178 ;;		___almod
  3179 ;;		___lmul
  3180 ;;		_pow
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186     01AE                     _ConvertToString:	
  3187                           ;psect for function _ConvertToString
  3188                           
  3189     01AE                     l2236:	
  3190                           ;incstack = 0
  3191                           ; Regs used in _ConvertToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3192                           
  3193                           
  3194                           ;main.c: 271: void ConvertToString(long n, char* str);main.c: 272: {;main.c: 275:     in
      +                          t i = 0, j = 0;
  3195     01AE  1683               	bsf	3,5	;RP0=1, select bank1
  3196     01AF  1303               	bcf	3,6	;RP1=0, select bank1
  3197     01B0  01AF               	clrf	ConvertToString@i^(0+128)
  3198     01B1  01B0               	clrf	(ConvertToString@i+1)^(0+128)
  3199     01B2  01AD               	clrf	ConvertToString@j^(0+128)
  3200     01B3  01AE               	clrf	(ConvertToString@j+1)^(0+128)
  3201     01B4                     l2238:
  3202                           
  3203                           ;main.c: 276:     if(n < 0)
  3204     01B4  1283               	bcf	3,5	;RP0=0, select bank0
  3205     01B5  1303               	bcf	3,6	;RP1=0, select bank0
  3206     01B6  1FE3               	btfss	ConvertToString@n+3,7
  3207     01B7  29B9               	goto	u2221
  3208     01B8  29BA               	goto	u2220
  3209     01B9                     u2221:
  3210     01B9  29E6               	goto	l2246
  3211     01BA                     u2220:
  3212     01BA                     l2240:
  3213                           
  3214                           ;main.c: 277:     {;main.c: 278:         i = 1;
  3215     01BA  3001               	movlw	1
  3216     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3217     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3218     01BD  00AF               	movwf	ConvertToString@i^(0+128)
  3219     01BE  3000               	movlw	0
  3220     01BF  00B0               	movwf	(ConvertToString@i^(0+128)+1)
  3221     01C0                     l2242:
  3222                           
  3223                           ;main.c: 279:         str[0] = '-';
  3224     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3225     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3226     01C2  0864               	movf	ConvertToString@str,w
  3227     01C3  0084               	movwf	4
  3228     01C4  302D               	movlw	45
  3229     01C5  1783               	bsf	3,7	;select IRP bank2
  3230     01C6  0080               	movwf	0
  3231     01C7                     l2244:
  3232                           
  3233                           ;main.c: 280:         n *= -1;
  3234     01C7  30FF               	movlw	255
  3235     01C8  00C7               	movwf	___lmul@multiplier+3
  3236     01C9  30FF               	movlw	255
  3237     01CA  00C6               	movwf	___lmul@multiplier+2
  3238     01CB  30FF               	movlw	255
  3239     01CC  00C5               	movwf	___lmul@multiplier+1
  3240     01CD  30FF               	movlw	255
  3241     01CE  00C4               	movwf	___lmul@multiplier
  3242     01CF  0863               	movf	ConvertToString@n+3,w
  3243     01D0  00CB               	movwf	___lmul@multiplicand+3
  3244     01D1  0862               	movf	ConvertToString@n+2,w
  3245     01D2  00CA               	movwf	___lmul@multiplicand+2
  3246     01D3  0861               	movf	ConvertToString@n+1,w
  3247     01D4  00C9               	movwf	___lmul@multiplicand+1
  3248     01D5  0860               	movf	ConvertToString@n,w
  3249     01D6  00C8               	movwf	___lmul@multiplicand
  3250     01D7  120A  118A  277C  120A  118A  	fcall	___lmul
  3251     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3252     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3253     01DE  0847               	movf	?___lmul+3,w
  3254     01DF  00E3               	movwf	ConvertToString@n+3
  3255     01E0  0846               	movf	?___lmul+2,w
  3256     01E1  00E2               	movwf	ConvertToString@n+2
  3257     01E2  0845               	movf	?___lmul+1,w
  3258     01E3  00E1               	movwf	ConvertToString@n+1
  3259     01E4  0844               	movf	?___lmul,w
  3260     01E5  00E0               	movwf	ConvertToString@n
  3261     01E6                     l2246:
  3262                           
  3263                           ;main.c: 283:     char n_cifre = 1;
  3264     01E6  1683               	bsf	3,5	;RP0=1, select bank1
  3265     01E7  1303               	bcf	3,6	;RP1=0, select bank1
  3266     01E8  01B1               	clrf	ConvertToString@n_cifre^(0+128)
  3267     01E9  0AB1               	incf	ConvertToString@n_cifre^(0+128),f
  3268                           
  3269                           ;main.c: 285:     while(n / pow(10, n_cifre))
  3270     01EA  29F1               	goto	l2250
  3271     01EB                     l2248:
  3272                           
  3273                           ;main.c: 286:         n_cifre++;
  3274     01EB  3001               	movlw	1
  3275     01EC  00E5               	movwf	??_ConvertToString
  3276     01ED  0865               	movf	??_ConvertToString,w
  3277     01EE  1683               	bsf	3,5	;RP0=1, select bank1
  3278     01EF  1303               	bcf	3,6	;RP1=0, select bank1
  3279     01F0  07B1               	addwf	ConvertToString@n_cifre^(0+128),f
  3280     01F1                     l2250:
  3281                           
  3282                           ;main.c: 285:     while(n / pow(10, n_cifre))
  3283     01F1  0831               	movf	ConvertToString@n_cifre^(0+128),w
  3284     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3285     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3286     01F4  00C8               	movwf	pow@exp
  3287     01F5  300A               	movlw	10
  3288     01F6  120A  118A  27C4  120A  118A  	fcall	_pow
  3289     01FB  1283               	bcf	3,5	;RP0=0, select bank0
  3290     01FC  1303               	bcf	3,6	;RP1=0, select bank0
  3291     01FD  0848               	movf	?_pow,w
  3292     01FE  00D1               	movwf	___aldiv@divisor
  3293     01FF  0849               	movf	?_pow+1,w
  3294     0200  00D2               	movwf	___aldiv@divisor+1
  3295     0201  3000               	movlw	0
  3296     0202  1BD2               	btfsc	___aldiv@divisor+1,7
  3297     0203  30FF               	movlw	255
  3298     0204  00D3               	movwf	___aldiv@divisor+2
  3299     0205  00D4               	movwf	___aldiv@divisor+3
  3300     0206  0863               	movf	ConvertToString@n+3,w
  3301     0207  00D8               	movwf	___aldiv@dividend+3
  3302     0208  0862               	movf	ConvertToString@n+2,w
  3303     0209  00D7               	movwf	___aldiv@dividend+2
  3304     020A  0861               	movf	ConvertToString@n+1,w
  3305     020B  00D6               	movwf	___aldiv@dividend+1
  3306     020C  0860               	movf	ConvertToString@n,w
  3307     020D  00D5               	movwf	___aldiv@dividend
  3308     020E  120A  118A  23B7  120A  118A  	fcall	___aldiv
  3309     0213  1283               	bcf	3,5	;RP0=0, select bank0
  3310     0214  1303               	bcf	3,6	;RP1=0, select bank0
  3311     0215  0854               	movf	?___aldiv+3,w
  3312     0216  0453               	iorwf	?___aldiv+2,w
  3313     0217  0452               	iorwf	?___aldiv+1,w
  3314     0218  0451               	iorwf	?___aldiv,w
  3315     0219  1D03               	skipz
  3316     021A  2A1C               	goto	u2231
  3317     021B  2A1D               	goto	u2230
  3318     021C                     u2231:
  3319     021C  29EB               	goto	l2248
  3320     021D                     u2230:
  3321     021D  2A99               	goto	l2262
  3322     021E                     l2252:
  3323                           
  3324                           ;main.c: 289:     {;main.c: 290:         int temp = pow(10, (char)(n_cifre - 1 - j));
  3325     021E  1683               	bsf	3,5	;RP0=1, select bank1
  3326     021F  1303               	bcf	3,6	;RP1=0, select bank1
  3327     0220  082D               	movf	ConvertToString@j^(0+128),w
  3328     0221  0231               	subwf	ConvertToString@n_cifre^(0+128),w
  3329     0222  3EFF               	addlw	255
  3330     0223  1283               	bcf	3,5	;RP0=0, select bank0
  3331     0224  1303               	bcf	3,6	;RP1=0, select bank0
  3332     0225  00C8               	movwf	pow@exp
  3333     0226  300A               	movlw	10
  3334     0227  120A  118A  27C4  120A  118A  	fcall	_pow
  3335     022C  1283               	bcf	3,5	;RP0=0, select bank0
  3336     022D  1303               	bcf	3,6	;RP1=0, select bank0
  3337     022E  0849               	movf	?_pow+1,w
  3338     022F  1683               	bsf	3,5	;RP0=1, select bank1
  3339     0230  1303               	bcf	3,6	;RP1=0, select bank1
  3340     0231  00AC               	movwf	(ConvertToString@temp+1)^(0+128)
  3341     0232  1283               	bcf	3,5	;RP0=0, select bank0
  3342     0233  1303               	bcf	3,6	;RP1=0, select bank0
  3343     0234  0848               	movf	?_pow,w
  3344     0235  1683               	bsf	3,5	;RP0=1, select bank1
  3345     0236  1303               	bcf	3,6	;RP1=0, select bank1
  3346     0237  00AB               	movwf	ConvertToString@temp^(0+128)
  3347     0238                     l2254:
  3348                           
  3349                           ;main.c: 292:         str[i] = (char)(n/temp) + '0';
  3350     0238  082F               	movf	ConvertToString@i^(0+128),w
  3351     0239  1283               	bcf	3,5	;RP0=0, select bank0
  3352     023A  1303               	bcf	3,6	;RP1=0, select bank0
  3353     023B  0764               	addwf	ConvertToString@str,w
  3354     023C  00E5               	movwf	??_ConvertToString
  3355     023D  0865               	movf	??_ConvertToString,w
  3356     023E  0084               	movwf	4
  3357     023F  1683               	bsf	3,5	;RP0=1, select bank1
  3358     0240  1303               	bcf	3,6	;RP1=0, select bank1
  3359     0241  082B               	movf	ConvertToString@temp^(0+128),w
  3360     0242  1283               	bcf	3,5	;RP0=0, select bank0
  3361     0243  1303               	bcf	3,6	;RP1=0, select bank0
  3362     0244  00D1               	movwf	___aldiv@divisor
  3363     0245  1683               	bsf	3,5	;RP0=1, select bank1
  3364     0246  1303               	bcf	3,6	;RP1=0, select bank1
  3365     0247  082C               	movf	(ConvertToString@temp+1)^(0+128),w
  3366     0248  1283               	bcf	3,5	;RP0=0, select bank0
  3367     0249  1303               	bcf	3,6	;RP1=0, select bank0
  3368     024A  00D2               	movwf	___aldiv@divisor+1
  3369     024B  3000               	movlw	0
  3370     024C  1BD2               	btfsc	___aldiv@divisor+1,7
  3371     024D  30FF               	movlw	255
  3372     024E  00D3               	movwf	___aldiv@divisor+2
  3373     024F  00D4               	movwf	___aldiv@divisor+3
  3374     0250  0863               	movf	ConvertToString@n+3,w
  3375     0251  00D8               	movwf	___aldiv@dividend+3
  3376     0252  0862               	movf	ConvertToString@n+2,w
  3377     0253  00D7               	movwf	___aldiv@dividend+2
  3378     0254  0861               	movf	ConvertToString@n+1,w
  3379     0255  00D6               	movwf	___aldiv@dividend+1
  3380     0256  0860               	movf	ConvertToString@n,w
  3381     0257  00D5               	movwf	___aldiv@dividend
  3382     0258  120A  118A  23B7  120A  118A  	fcall	___aldiv
  3383     025D  1283               	bcf	3,5	;RP0=0, select bank0
  3384     025E  1303               	bcf	3,6	;RP1=0, select bank0
  3385     025F  0851               	movf	?___aldiv,w
  3386     0260  3E30               	addlw	48
  3387     0261  1783               	bsf	3,7	;select IRP bank2
  3388     0262  0080               	movwf	0
  3389     0263                     l2256:
  3390                           
  3391                           ;main.c: 294:         n = n % temp;
  3392     0263  1683               	bsf	3,5	;RP0=1, select bank1
  3393     0264  1303               	bcf	3,6	;RP1=0, select bank1
  3394     0265  082B               	movf	ConvertToString@temp^(0+128),w
  3395     0266  1283               	bcf	3,5	;RP0=0, select bank0
  3396     0267  1303               	bcf	3,6	;RP1=0, select bank0
  3397     0268  00C4               	movwf	___almod@divisor
  3398     0269  1683               	bsf	3,5	;RP0=1, select bank1
  3399     026A  1303               	bcf	3,6	;RP1=0, select bank1
  3400     026B  082C               	movf	(ConvertToString@temp+1)^(0+128),w
  3401     026C  1283               	bcf	3,5	;RP0=0, select bank0
  3402     026D  1303               	bcf	3,6	;RP1=0, select bank0
  3403     026E  00C5               	movwf	___almod@divisor+1
  3404     026F  3000               	movlw	0
  3405     0270  1BC5               	btfsc	___almod@divisor+1,7
  3406     0271  30FF               	movlw	255
  3407     0272  00C6               	movwf	___almod@divisor+2
  3408     0273  00C7               	movwf	___almod@divisor+3
  3409     0274  0863               	movf	ConvertToString@n+3,w
  3410     0275  00CB               	movwf	___almod@dividend+3
  3411     0276  0862               	movf	ConvertToString@n+2,w
  3412     0277  00CA               	movwf	___almod@dividend+2
  3413     0278  0861               	movf	ConvertToString@n+1,w
  3414     0279  00C9               	movwf	___almod@dividend+1
  3415     027A  0860               	movf	ConvertToString@n,w
  3416     027B  00C8               	movwf	___almod@dividend
  3417     027C  120A  118A  2454  120A  118A  	fcall	___almod
  3418     0281  1283               	bcf	3,5	;RP0=0, select bank0
  3419     0282  1303               	bcf	3,6	;RP1=0, select bank0
  3420     0283  0847               	movf	?___almod+3,w
  3421     0284  00E3               	movwf	ConvertToString@n+3
  3422     0285  0846               	movf	?___almod+2,w
  3423     0286  00E2               	movwf	ConvertToString@n+2
  3424     0287  0845               	movf	?___almod+1,w
  3425     0288  00E1               	movwf	ConvertToString@n+1
  3426     0289  0844               	movf	?___almod,w
  3427     028A  00E0               	movwf	ConvertToString@n
  3428     028B                     l2258:
  3429                           
  3430                           ;main.c: 295:         i++;
  3431     028B  3001               	movlw	1
  3432     028C  1683               	bsf	3,5	;RP0=1, select bank1
  3433     028D  1303               	bcf	3,6	;RP1=0, select bank1
  3434     028E  07AF               	addwf	ConvertToString@i^(0+128),f
  3435     028F  1803               	skipnc
  3436     0290  0AB0               	incf	(ConvertToString@i+1)^(0+128),f
  3437     0291  3000               	movlw	0
  3438     0292  07B0               	addwf	(ConvertToString@i+1)^(0+128),f
  3439     0293                     l2260:
  3440                           
  3441                           ;main.c: 296:         j++;
  3442     0293  3001               	movlw	1
  3443     0294  07AD               	addwf	ConvertToString@j^(0+128),f
  3444     0295  1803               	skipnc
  3445     0296  0AAE               	incf	(ConvertToString@j+1)^(0+128),f
  3446     0297  3000               	movlw	0
  3447     0298  07AE               	addwf	(ConvertToString@j+1)^(0+128),f
  3448     0299                     l2262:
  3449                           
  3450                           ;main.c: 288:     while(j < n_cifre)
  3451     0299  1683               	bsf	3,5	;RP0=1, select bank1
  3452     029A  1303               	bcf	3,6	;RP1=0, select bank1
  3453     029B  082E               	movf	(ConvertToString@j+1)^(0+128),w
  3454     029C  3A80               	xorlw	128
  3455     029D  1283               	bcf	3,5	;RP0=0, select bank0
  3456     029E  1303               	bcf	3,6	;RP1=0, select bank0
  3457     029F  00E5               	movwf	??_ConvertToString
  3458     02A0  3080               	movlw	128
  3459     02A1  0265               	subwf	??_ConvertToString,w
  3460     02A2  1D03               	skipz
  3461     02A3  2AA8               	goto	u2245
  3462     02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3463     02A5  1303               	bcf	3,6	;RP1=0, select bank1
  3464     02A6  0831               	movf	ConvertToString@n_cifre^(0+128),w
  3465     02A7  022D               	subwf	ConvertToString@j^(0+128),w
  3466     02A8                     u2245:
  3467     02A8  1C03               	skipc
  3468     02A9  2AAB               	goto	u2241
  3469     02AA  2AAC               	goto	u2240
  3470     02AB                     u2241:
  3471     02AB  2A1E               	goto	l2252
  3472     02AC                     u2240:
  3473     02AC                     l2264:
  3474                           
  3475                           ;main.c: 299:     str[i] = '\0';
  3476     02AC  1683               	bsf	3,5	;RP0=1, select bank1
  3477     02AD  1303               	bcf	3,6	;RP1=0, select bank1
  3478     02AE  082F               	movf	ConvertToString@i^(0+128),w
  3479     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3480     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3481     02B1  0764               	addwf	ConvertToString@str,w
  3482     02B2  00E5               	movwf	??_ConvertToString
  3483     02B3  0865               	movf	??_ConvertToString,w
  3484     02B4  0084               	movwf	4
  3485     02B5  1783               	bsf	3,7	;select IRP bank2
  3486     02B6  0180               	clrf	0
  3487     02B7                     l158:
  3488     02B7  0008               	return
  3489     02B8                     __end_of_ConvertToString:
  3490                           
  3491                           	psect	text17
  3492     07C4                     __ptext17:	
  3493 ;; *************** function _pow *****************
  3494 ;; Defined at:
  3495 ;;		line 260 in file "main.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  b               1    wreg     unsigned char 
  3498 ;;  exp             1    4[BANK0 ] unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  b               1    8[BANK0 ] unsigned char 
  3501 ;;  i               2    9[BANK0 ] int 
  3502 ;;  n               2   11[BANK0 ] int 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    4[BANK0 ] int 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         0       2       0       0       0
  3513 ;;      Locals:         0       5       0       0       0
  3514 ;;      Temps:          0       2       0       0       0
  3515 ;;      Totals:         0       9       0       0       0
  3516 ;;Total ram usage:        9 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 2
  3519 ;; This function calls:
  3520 ;;		___wmul
  3521 ;; This function is called by:
  3522 ;;		_ConvertToString
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526     07C4                     _pow:	
  3527                           ;psect for function _pow
  3528                           
  3529                           
  3530                           ;incstack = 0
  3531                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  3532                           ;pow@b stored from wreg
  3533     07C4  1283               	bcf	3,5	;RP0=0, select bank0
  3534     07C5  1303               	bcf	3,6	;RP1=0, select bank0
  3535     07C6  00CC               	movwf	pow@b
  3536     07C7                     l2028:
  3537                           
  3538                           ;main.c: 260: int pow(char b, char exp);main.c: 261: {;main.c: 262:     int n = 1;
  3539     07C7  3001               	movlw	1
  3540     07C8  00CF               	movwf	pow@n
  3541     07C9  3000               	movlw	0
  3542     07CA  00D0               	movwf	pow@n+1
  3543     07CB                     l2030:
  3544                           
  3545                           ;main.c: 263:     for(int i = 0; i < exp; i++)
  3546     07CB  01CD               	clrf	pow@i
  3547     07CC  01CE               	clrf	pow@i+1
  3548     07CD  2FEC               	goto	l2036
  3549     07CE                     l2032:
  3550                           
  3551                           ;main.c: 264:     {;main.c: 265:         n *= b;
  3552     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  3553     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  3554     07D0  084C               	movf	pow@b,w
  3555     07D1  00CA               	movwf	??_pow
  3556     07D2  01CB               	clrf	??_pow+1
  3557     07D3  084A               	movf	??_pow,w
  3558     07D4  00C4               	movwf	___wmul@multiplier
  3559     07D5  084B               	movf	??_pow+1,w
  3560     07D6  00C5               	movwf	___wmul@multiplier+1
  3561     07D7  0850               	movf	pow@n+1,w
  3562     07D8  00C7               	movwf	___wmul@multiplicand+1
  3563     07D9  084F               	movf	pow@n,w
  3564     07DA  00C6               	movwf	___wmul@multiplicand
  3565     07DB  120A  158A  26E2  120A  118A  	fcall	___wmul
  3566     07E0  1283               	bcf	3,5	;RP0=0, select bank0
  3567     07E1  1303               	bcf	3,6	;RP1=0, select bank0
  3568     07E2  0845               	movf	?___wmul+1,w
  3569     07E3  00D0               	movwf	pow@n+1
  3570     07E4  0844               	movf	?___wmul,w
  3571     07E5  00CF               	movwf	pow@n
  3572     07E6                     l2034:
  3573                           
  3574                           ;main.c: 266:     }
  3575     07E6  3001               	movlw	1
  3576     07E7  07CD               	addwf	pow@i,f
  3577     07E8  1803               	skipnc
  3578     07E9  0ACE               	incf	pow@i+1,f
  3579     07EA  3000               	movlw	0
  3580     07EB  07CE               	addwf	pow@i+1,f
  3581     07EC                     l2036:
  3582     07EC  084E               	movf	pow@i+1,w
  3583     07ED  3A80               	xorlw	128
  3584     07EE  00CA               	movwf	??_pow
  3585     07EF  3080               	movlw	128
  3586     07F0  024A               	subwf	??_pow,w
  3587     07F1  1D03               	skipz
  3588     07F2  2FF5               	goto	u1825
  3589     07F3  0848               	movf	pow@exp,w
  3590     07F4  024D               	subwf	pow@i,w
  3591     07F5                     u1825:
  3592     07F5  1C03               	skipc
  3593     07F6  2FF8               	goto	u1821
  3594     07F7  2FF9               	goto	u1820
  3595     07F8                     u1821:
  3596     07F8  2FCE               	goto	l2032
  3597     07F9                     u1820:
  3598     07F9                     l2038:
  3599                           
  3600                           ;main.c: 267:     return n;
  3601     07F9  1283               	bcf	3,5	;RP0=0, select bank0
  3602     07FA  1303               	bcf	3,6	;RP1=0, select bank0
  3603     07FB  0850               	movf	pow@n+1,w
  3604     07FC  00C9               	movwf	?_pow+1
  3605     07FD  084F               	movf	pow@n,w
  3606     07FE  00C8               	movwf	?_pow
  3607     07FF                     l148:
  3608     07FF  0008               	return
  3609     0800                     __end_of_pow:
  3610                           
  3611                           	psect	text18
  3612     0EE2                     __ptext18:	
  3613 ;; *************** function ___wmul *****************
  3614 ;; Defined at:
  3615 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3618 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  product         2    4[COMMON] unsigned int 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  2    0[BANK0 ] unsigned int 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         0       4       0       0       0
  3631 ;;      Locals:         2       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0
  3633 ;;      Totals:         2       4       0       0       0
  3634 ;;Total ram usage:        6 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_pow
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644     0EE2                     ___wmul:	
  3645                           ;psect for function ___wmul
  3646                           
  3647     0EE2                     l1912:	
  3648                           ;incstack = 0
  3649                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3650                           
  3651     0EE2  01F4               	clrf	___wmul@product
  3652     0EE3  01F5               	clrf	___wmul@product+1
  3653     0EE4                     l1914:
  3654     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3655     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3656     0EE6  1C44               	btfss	___wmul@multiplier,0
  3657     0EE7  2EE9               	goto	u1621
  3658     0EE8  2EEA               	goto	u1620
  3659     0EE9                     u1621:
  3660     0EE9  2EF0               	goto	l318
  3661     0EEA                     u1620:
  3662     0EEA                     l1916:
  3663     0EEA  0846               	movf	___wmul@multiplicand,w
  3664     0EEB  07F4               	addwf	___wmul@product,f
  3665     0EEC  1803               	skipnc
  3666     0EED  0AF5               	incf	___wmul@product+1,f
  3667     0EEE  0847               	movf	___wmul@multiplicand+1,w
  3668     0EEF  07F5               	addwf	___wmul@product+1,f
  3669     0EF0                     l318:
  3670     0EF0  3001               	movlw	1
  3671     0EF1                     u1635:
  3672     0EF1  1003               	clrc
  3673     0EF2  0DC6               	rlf	___wmul@multiplicand,f
  3674     0EF3  0DC7               	rlf	___wmul@multiplicand+1,f
  3675     0EF4  3EFF               	addlw	-1
  3676     0EF5  1D03               	skipz
  3677     0EF6  2EF1               	goto	u1635
  3678     0EF7                     l1918:
  3679     0EF7  3001               	movlw	1
  3680     0EF8                     u1645:
  3681     0EF8  1003               	clrc
  3682     0EF9  0CC5               	rrf	___wmul@multiplier+1,f
  3683     0EFA  0CC4               	rrf	___wmul@multiplier,f
  3684     0EFB  3EFF               	addlw	-1
  3685     0EFC  1D03               	skipz
  3686     0EFD  2EF8               	goto	u1645
  3687     0EFE                     l1920:
  3688     0EFE  0844               	movf	___wmul@multiplier,w
  3689     0EFF  0445               	iorwf	___wmul@multiplier+1,w
  3690     0F00  1D03               	btfss	3,2
  3691     0F01  2F03               	goto	u1651
  3692     0F02  2F04               	goto	u1650
  3693     0F03                     u1651:
  3694     0F03  2EE4               	goto	l1914
  3695     0F04                     u1650:
  3696     0F04                     l1922:
  3697     0F04  0875               	movf	___wmul@product+1,w
  3698     0F05  00C5               	movwf	?___wmul+1
  3699     0F06  0874               	movf	___wmul@product,w
  3700     0F07  00C4               	movwf	?___wmul
  3701     0F08                     l320:
  3702     0F08  0008               	return
  3703     0F09                     __end_of___wmul:
  3704                           
  3705                           	psect	text19
  3706     077C                     __ptext19:	
  3707 ;; *************** function ___lmul *****************
  3708 ;; Defined at:
  3709 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  multiplier      4    0[BANK0 ] unsigned long 
  3712 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  3713 ;; Auto vars:     Size  Location     Type
  3714 ;;  product         4    8[BANK0 ] unsigned long 
  3715 ;; Return value:  Size  Location     Type
  3716 ;;                  4    0[BANK0 ] unsigned long 
  3717 ;; Registers used:
  3718 ;;		wreg, status,2, status,0
  3719 ;; Tracked objects:
  3720 ;;		On entry : 0/0
  3721 ;;		On exit  : 0/0
  3722 ;;		Unchanged: 0/0
  3723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3724 ;;      Params:         0       8       0       0       0
  3725 ;;      Locals:         0       4       0       0       0
  3726 ;;      Temps:          1       0       0       0       0
  3727 ;;      Totals:         1      12       0       0       0
  3728 ;;Total ram usage:       13 bytes
  3729 ;; Hardware stack levels used: 1
  3730 ;; Hardware stack levels required when called: 1
  3731 ;; This function calls:
  3732 ;;		Nothing
  3733 ;; This function is called by:
  3734 ;;		_ConvertToString
  3735 ;;		_rand
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739     077C                     ___lmul:	
  3740                           ;psect for function ___lmul
  3741                           
  3742     077C                     l1926:	
  3743                           ;incstack = 0
  3744                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3745                           
  3746     077C  3000               	movlw	0
  3747     077D  1283               	bcf	3,5	;RP0=0, select bank0
  3748     077E  1303               	bcf	3,6	;RP1=0, select bank0
  3749     077F  00CF               	movwf	___lmul@product+3
  3750     0780  3000               	movlw	0
  3751     0781  00CE               	movwf	___lmul@product+2
  3752     0782  3000               	movlw	0
  3753     0783  00CD               	movwf	___lmul@product+1
  3754     0784  3000               	movlw	0
  3755     0785  00CC               	movwf	___lmul@product
  3756     0786                     l1928:
  3757     0786  1C44               	btfss	___lmul@multiplier,0
  3758     0787  2F89               	goto	u1661
  3759     0788  2F8A               	goto	u1660
  3760     0789                     u1661:
  3761     0789  2FA1               	goto	l1932
  3762     078A                     u1660:
  3763     078A                     l1930:
  3764     078A  0848               	movf	___lmul@multiplicand,w
  3765     078B  07CC               	addwf	___lmul@product,f
  3766     078C  0849               	movf	___lmul@multiplicand+1,w
  3767     078D  1103               	clrz
  3768     078E  1803               	skipnc
  3769     078F  3E01               	addlw	1
  3770     0790  1903               	skipnz
  3771     0791  2F93               	goto	u1671
  3772     0792  07CD               	addwf	___lmul@product+1,f
  3773     0793                     u1671:
  3774     0793  084A               	movf	___lmul@multiplicand+2,w
  3775     0794  1103               	clrz
  3776     0795  1803               	skipnc
  3777     0796  3E01               	addlw	1
  3778     0797  1903               	skipnz
  3779     0798  2F9A               	goto	u1672
  3780     0799  07CE               	addwf	___lmul@product+2,f
  3781     079A                     u1672:
  3782     079A  084B               	movf	___lmul@multiplicand+3,w
  3783     079B  1103               	clrz
  3784     079C  1803               	skipnc
  3785     079D  3E01               	addlw	1
  3786     079E  1903               	skipnz
  3787     079F  2FA1               	goto	u1673
  3788     07A0  07CF               	addwf	___lmul@product+3,f
  3789     07A1                     u1673:
  3790     07A1                     l1932:
  3791     07A1  3001               	movlw	1
  3792     07A2  00F4               	movwf	??___lmul
  3793     07A3                     u1685:
  3794     07A3  1003               	clrc
  3795     07A4  0DC8               	rlf	___lmul@multiplicand,f
  3796     07A5  0DC9               	rlf	___lmul@multiplicand+1,f
  3797     07A6  0DCA               	rlf	___lmul@multiplicand+2,f
  3798     07A7  0DCB               	rlf	___lmul@multiplicand+3,f
  3799     07A8  0BF4               	decfsz	??___lmul,f
  3800     07A9  2FA3               	goto	u1685
  3801     07AA                     l1934:
  3802     07AA  3001               	movlw	1
  3803     07AB                     u1695:
  3804     07AB  1003               	clrc
  3805     07AC  0CC7               	rrf	___lmul@multiplier+3,f
  3806     07AD  0CC6               	rrf	___lmul@multiplier+2,f
  3807     07AE  0CC5               	rrf	___lmul@multiplier+1,f
  3808     07AF  0CC4               	rrf	___lmul@multiplier,f
  3809     07B0  3EFF               	addlw	-1
  3810     07B1  1D03               	skipz
  3811     07B2  2FAB               	goto	u1695
  3812     07B3  0847               	movf	___lmul@multiplier+3,w
  3813     07B4  0446               	iorwf	___lmul@multiplier+2,w
  3814     07B5  0445               	iorwf	___lmul@multiplier+1,w
  3815     07B6  0444               	iorwf	___lmul@multiplier,w
  3816     07B7  1D03               	skipz
  3817     07B8  2FBA               	goto	u1701
  3818     07B9  2FBB               	goto	u1700
  3819     07BA                     u1701:
  3820     07BA  2F86               	goto	l1928
  3821     07BB                     u1700:
  3822     07BB                     l1936:
  3823     07BB  084F               	movf	___lmul@product+3,w
  3824     07BC  00C7               	movwf	?___lmul+3
  3825     07BD  084E               	movf	___lmul@product+2,w
  3826     07BE  00C6               	movwf	?___lmul+2
  3827     07BF  084D               	movf	___lmul@product+1,w
  3828     07C0  00C5               	movwf	?___lmul+1
  3829     07C1  084C               	movf	___lmul@product,w
  3830     07C2  00C4               	movwf	?___lmul
  3831     07C3                     l332:
  3832     07C3  0008               	return
  3833     07C4                     __end_of___lmul:
  3834                           
  3835                           	psect	text20
  3836     0454                     __ptext20:	
  3837 ;; *************** function ___almod *****************
  3838 ;; Defined at:
  3839 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  divisor         4    0[BANK0 ] long 
  3842 ;;  dividend        4    4[BANK0 ] long 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;  sign            1    9[BANK0 ] unsigned char 
  3845 ;;  counter         1    8[BANK0 ] unsigned char 
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  4    0[BANK0 ] long 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3855 ;;      Params:         0       8       0       0       0
  3856 ;;      Locals:         0       2       0       0       0
  3857 ;;      Temps:          1       0       0       0       0
  3858 ;;      Totals:         1      10       0       0       0
  3859 ;;Total ram usage:       11 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_ConvertToString
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     0454                     ___almod:	
  3870                           ;psect for function ___almod
  3871                           
  3872     0454                     l2098:	
  3873                           ;incstack = 0
  3874                           ; Regs used in ___almod: [wreg+status,2+status,0]
  3875                           
  3876     0454  1283               	bcf	3,5	;RP0=0, select bank0
  3877     0455  1303               	bcf	3,6	;RP1=0, select bank0
  3878     0456  01CD               	clrf	___almod@sign
  3879     0457                     l2100:
  3880     0457  1FCB               	btfss	___almod@dividend+3,7
  3881     0458  2C5A               	goto	u1921
  3882     0459  2C5B               	goto	u1920
  3883     045A                     u1921:
  3884     045A  2C68               	goto	l396
  3885     045B                     u1920:
  3886     045B                     l2102:
  3887     045B  09C8               	comf	___almod@dividend,f
  3888     045C  09C9               	comf	___almod@dividend+1,f
  3889     045D  09CA               	comf	___almod@dividend+2,f
  3890     045E  09CB               	comf	___almod@dividend+3,f
  3891     045F  0AC8               	incf	___almod@dividend,f
  3892     0460  1903               	skipnz
  3893     0461  0AC9               	incf	___almod@dividend+1,f
  3894     0462  1903               	skipnz
  3895     0463  0ACA               	incf	___almod@dividend+2,f
  3896     0464  1903               	skipnz
  3897     0465  0ACB               	incf	___almod@dividend+3,f
  3898     0466  01CD               	clrf	___almod@sign
  3899     0467  0ACD               	incf	___almod@sign,f
  3900     0468                     l396:
  3901     0468  1FC7               	btfss	___almod@divisor+3,7
  3902     0469  2C6B               	goto	u1931
  3903     046A  2C6C               	goto	u1930
  3904     046B                     u1931:
  3905     046B  2C77               	goto	l2106
  3906     046C                     u1930:
  3907     046C                     l2104:
  3908     046C  09C4               	comf	___almod@divisor,f
  3909     046D  09C5               	comf	___almod@divisor+1,f
  3910     046E  09C6               	comf	___almod@divisor+2,f
  3911     046F  09C7               	comf	___almod@divisor+3,f
  3912     0470  0AC4               	incf	___almod@divisor,f
  3913     0471  1903               	skipnz
  3914     0472  0AC5               	incf	___almod@divisor+1,f
  3915     0473  1903               	skipnz
  3916     0474  0AC6               	incf	___almod@divisor+2,f
  3917     0475  1903               	skipnz
  3918     0476  0AC7               	incf	___almod@divisor+3,f
  3919     0477                     l2106:
  3920     0477  0847               	movf	___almod@divisor+3,w
  3921     0478  0446               	iorwf	___almod@divisor+2,w
  3922     0479  0445               	iorwf	___almod@divisor+1,w
  3923     047A  0444               	iorwf	___almod@divisor,w
  3924     047B  1903               	skipnz
  3925     047C  2C7E               	goto	u1941
  3926     047D  2C7F               	goto	u1940
  3927     047E                     u1941:
  3928     047E  2CC2               	goto	l2122
  3929     047F                     u1940:
  3930     047F                     l2108:
  3931     047F  01CC               	clrf	___almod@counter
  3932     0480  0ACC               	incf	___almod@counter,f
  3933     0481  2C8F               	goto	l2112
  3934     0482                     l2110:
  3935     0482  3001               	movlw	1
  3936     0483  00F4               	movwf	??___almod
  3937     0484                     u1955:
  3938     0484  1003               	clrc
  3939     0485  0DC4               	rlf	___almod@divisor,f
  3940     0486  0DC5               	rlf	___almod@divisor+1,f
  3941     0487  0DC6               	rlf	___almod@divisor+2,f
  3942     0488  0DC7               	rlf	___almod@divisor+3,f
  3943     0489  0BF4               	decfsz	??___almod,f
  3944     048A  2C84               	goto	u1955
  3945     048B  3001               	movlw	1
  3946     048C  00F4               	movwf	??___almod
  3947     048D  0874               	movf	??___almod,w
  3948     048E  07CC               	addwf	___almod@counter,f
  3949     048F                     l2112:
  3950     048F  1FC7               	btfss	___almod@divisor+3,7
  3951     0490  2C92               	goto	u1961
  3952     0491  2C93               	goto	u1960
  3953     0492                     u1961:
  3954     0492  2C82               	goto	l2110
  3955     0493                     u1960:
  3956     0493                     l2114:
  3957     0493  0847               	movf	___almod@divisor+3,w
  3958     0494  024B               	subwf	___almod@dividend+3,w
  3959     0495  1D03               	skipz
  3960     0496  2CA1               	goto	u1975
  3961     0497  0846               	movf	___almod@divisor+2,w
  3962     0498  024A               	subwf	___almod@dividend+2,w
  3963     0499  1D03               	skipz
  3964     049A  2CA1               	goto	u1975
  3965     049B  0845               	movf	___almod@divisor+1,w
  3966     049C  0249               	subwf	___almod@dividend+1,w
  3967     049D  1D03               	skipz
  3968     049E  2CA1               	goto	u1975
  3969     049F  0844               	movf	___almod@divisor,w
  3970     04A0  0248               	subwf	___almod@dividend,w
  3971     04A1                     u1975:
  3972     04A1  1C03               	skipc
  3973     04A2  2CA4               	goto	u1971
  3974     04A3  2CA5               	goto	u1970
  3975     04A4                     u1971:
  3976     04A4  2CB3               	goto	l2118
  3977     04A5                     u1970:
  3978     04A5                     l2116:
  3979     04A5  0844               	movf	___almod@divisor,w
  3980     04A6  02C8               	subwf	___almod@dividend,f
  3981     04A7  0845               	movf	___almod@divisor+1,w
  3982     04A8  1C03               	skipc
  3983     04A9  0F45               	incfsz	___almod@divisor+1,w
  3984     04AA  02C9               	subwf	___almod@dividend+1,f
  3985     04AB  0846               	movf	___almod@divisor+2,w
  3986     04AC  1C03               	skipc
  3987     04AD  0F46               	incfsz	___almod@divisor+2,w
  3988     04AE  02CA               	subwf	___almod@dividend+2,f
  3989     04AF  0847               	movf	___almod@divisor+3,w
  3990     04B0  1C03               	skipc
  3991     04B1  0F47               	incfsz	___almod@divisor+3,w
  3992     04B2  02CB               	subwf	___almod@dividend+3,f
  3993     04B3                     l2118:
  3994     04B3  3001               	movlw	1
  3995     04B4                     u1985:
  3996     04B4  1003               	clrc
  3997     04B5  0CC7               	rrf	___almod@divisor+3,f
  3998     04B6  0CC6               	rrf	___almod@divisor+2,f
  3999     04B7  0CC5               	rrf	___almod@divisor+1,f
  4000     04B8  0CC4               	rrf	___almod@divisor,f
  4001     04B9  3EFF               	addlw	-1
  4002     04BA  1D03               	skipz
  4003     04BB  2CB4               	goto	u1985
  4004     04BC                     l2120:
  4005     04BC  3001               	movlw	1
  4006     04BD  02CC               	subwf	___almod@counter,f
  4007     04BE  1D03               	btfss	3,2
  4008     04BF  2CC1               	goto	u1991
  4009     04C0  2CC2               	goto	u1990
  4010     04C1                     u1991:
  4011     04C1  2C93               	goto	l2114
  4012     04C2                     u1990:
  4013     04C2                     l2122:
  4014     04C2  084D               	movf	___almod@sign,w
  4015     04C3  1903               	btfsc	3,2
  4016     04C4  2CC6               	goto	u2001
  4017     04C5  2CC7               	goto	u2000
  4018     04C6                     u2001:
  4019     04C6  2CD2               	goto	l2126
  4020     04C7                     u2000:
  4021     04C7                     l2124:
  4022     04C7  09C8               	comf	___almod@dividend,f
  4023     04C8  09C9               	comf	___almod@dividend+1,f
  4024     04C9  09CA               	comf	___almod@dividend+2,f
  4025     04CA  09CB               	comf	___almod@dividend+3,f
  4026     04CB  0AC8               	incf	___almod@dividend,f
  4027     04CC  1903               	skipnz
  4028     04CD  0AC9               	incf	___almod@dividend+1,f
  4029     04CE  1903               	skipnz
  4030     04CF  0ACA               	incf	___almod@dividend+2,f
  4031     04D0  1903               	skipnz
  4032     04D1  0ACB               	incf	___almod@dividend+3,f
  4033     04D2                     l2126:
  4034     04D2  084B               	movf	___almod@dividend+3,w
  4035     04D3  00C7               	movwf	?___almod+3
  4036     04D4  084A               	movf	___almod@dividend+2,w
  4037     04D5  00C6               	movwf	?___almod+2
  4038     04D6  0849               	movf	___almod@dividend+1,w
  4039     04D7  00C5               	movwf	?___almod+1
  4040     04D8  0848               	movf	___almod@dividend,w
  4041     04D9  00C4               	movwf	?___almod
  4042     04DA                     l406:
  4043     04DA  0008               	return
  4044     04DB                     __end_of___almod:
  4045                           
  4046                           	psect	text21
  4047     03B7                     __ptext21:	
  4048 ;; *************** function ___aldiv *****************
  4049 ;; Defined at:
  4050 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  divisor         4   13[BANK0 ] long 
  4053 ;;  dividend        4   17[BANK0 ] long 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  quotient        4   24[BANK0 ] long 
  4056 ;;  sign            1   23[BANK0 ] unsigned char 
  4057 ;;  counter         1   22[BANK0 ] unsigned char 
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  4   13[BANK0 ] long 
  4060 ;; Registers used:
  4061 ;;		wreg, status,2, status,0
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4067 ;;      Params:         0       8       0       0       0
  4068 ;;      Locals:         0       6       0       0       0
  4069 ;;      Temps:          0       1       0       0       0
  4070 ;;      Totals:         0      15       0       0       0
  4071 ;;Total ram usage:       15 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_ConvertToString
  4078 ;;		_UART_init
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082     03B7                     ___aldiv:	
  4083                           ;psect for function ___aldiv
  4084                           
  4085     03B7                     l1940:	
  4086                           ;incstack = 0
  4087                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4088                           
  4089     03B7  1283               	bcf	3,5	;RP0=0, select bank0
  4090     03B8  1303               	bcf	3,6	;RP1=0, select bank0
  4091     03B9  01DB               	clrf	___aldiv@sign
  4092     03BA                     l1942:
  4093     03BA  1FD4               	btfss	___aldiv@divisor+3,7
  4094     03BB  2BBD               	goto	u1711
  4095     03BC  2BBE               	goto	u1710
  4096     03BD                     u1711:
  4097     03BD  2BCB               	goto	l383
  4098     03BE                     u1710:
  4099     03BE                     l1944:
  4100     03BE  09D1               	comf	___aldiv@divisor,f
  4101     03BF  09D2               	comf	___aldiv@divisor+1,f
  4102     03C0  09D3               	comf	___aldiv@divisor+2,f
  4103     03C1  09D4               	comf	___aldiv@divisor+3,f
  4104     03C2  0AD1               	incf	___aldiv@divisor,f
  4105     03C3  1903               	skipnz
  4106     03C4  0AD2               	incf	___aldiv@divisor+1,f
  4107     03C5  1903               	skipnz
  4108     03C6  0AD3               	incf	___aldiv@divisor+2,f
  4109     03C7  1903               	skipnz
  4110     03C8  0AD4               	incf	___aldiv@divisor+3,f
  4111     03C9  01DB               	clrf	___aldiv@sign
  4112     03CA  0ADB               	incf	___aldiv@sign,f
  4113     03CB                     l383:
  4114     03CB  1FD8               	btfss	___aldiv@dividend+3,7
  4115     03CC  2BCE               	goto	u1721
  4116     03CD  2BCF               	goto	u1720
  4117     03CE                     u1721:
  4118     03CE  2BDE               	goto	l1950
  4119     03CF                     u1720:
  4120     03CF                     l1946:
  4121     03CF  09D5               	comf	___aldiv@dividend,f
  4122     03D0  09D6               	comf	___aldiv@dividend+1,f
  4123     03D1  09D7               	comf	___aldiv@dividend+2,f
  4124     03D2  09D8               	comf	___aldiv@dividend+3,f
  4125     03D3  0AD5               	incf	___aldiv@dividend,f
  4126     03D4  1903               	skipnz
  4127     03D5  0AD6               	incf	___aldiv@dividend+1,f
  4128     03D6  1903               	skipnz
  4129     03D7  0AD7               	incf	___aldiv@dividend+2,f
  4130     03D8  1903               	skipnz
  4131     03D9  0AD8               	incf	___aldiv@dividend+3,f
  4132     03DA                     l1948:
  4133     03DA  3001               	movlw	1
  4134     03DB  00D9               	movwf	??___aldiv
  4135     03DC  0859               	movf	??___aldiv,w
  4136     03DD  06DB               	xorwf	___aldiv@sign,f
  4137     03DE                     l1950:
  4138     03DE  3000               	movlw	0
  4139     03DF  00DF               	movwf	___aldiv@quotient+3
  4140     03E0  3000               	movlw	0
  4141     03E1  00DE               	movwf	___aldiv@quotient+2
  4142     03E2  3000               	movlw	0
  4143     03E3  00DD               	movwf	___aldiv@quotient+1
  4144     03E4  3000               	movlw	0
  4145     03E5  00DC               	movwf	___aldiv@quotient
  4146     03E6                     l1952:
  4147     03E6  0854               	movf	___aldiv@divisor+3,w
  4148     03E7  0453               	iorwf	___aldiv@divisor+2,w
  4149     03E8  0452               	iorwf	___aldiv@divisor+1,w
  4150     03E9  0451               	iorwf	___aldiv@divisor,w
  4151     03EA  1903               	skipnz
  4152     03EB  2BED               	goto	u1731
  4153     03EC  2BEE               	goto	u1730
  4154     03ED                     u1731:
  4155     03ED  2C3B               	goto	l1972
  4156     03EE                     u1730:
  4157     03EE                     l1954:
  4158     03EE  01DA               	clrf	___aldiv@counter
  4159     03EF  0ADA               	incf	___aldiv@counter,f
  4160     03F0  2BFE               	goto	l1958
  4161     03F1                     l1956:
  4162     03F1  3001               	movlw	1
  4163     03F2  00D9               	movwf	??___aldiv
  4164     03F3                     u1745:
  4165     03F3  1003               	clrc
  4166     03F4  0DD1               	rlf	___aldiv@divisor,f
  4167     03F5  0DD2               	rlf	___aldiv@divisor+1,f
  4168     03F6  0DD3               	rlf	___aldiv@divisor+2,f
  4169     03F7  0DD4               	rlf	___aldiv@divisor+3,f
  4170     03F8  0BD9               	decfsz	??___aldiv,f
  4171     03F9  2BF3               	goto	u1745
  4172     03FA  3001               	movlw	1
  4173     03FB  00D9               	movwf	??___aldiv
  4174     03FC  0859               	movf	??___aldiv,w
  4175     03FD  07DA               	addwf	___aldiv@counter,f
  4176     03FE                     l1958:
  4177     03FE  1FD4               	btfss	___aldiv@divisor+3,7
  4178     03FF  2C01               	goto	u1751
  4179     0400  2C02               	goto	u1750
  4180     0401                     u1751:
  4181     0401  2BF1               	goto	l1956
  4182     0402                     u1750:
  4183     0402                     l1960:
  4184     0402  3001               	movlw	1
  4185     0403  00D9               	movwf	??___aldiv
  4186     0404                     u1765:
  4187     0404  1003               	clrc
  4188     0405  0DDC               	rlf	___aldiv@quotient,f
  4189     0406  0DDD               	rlf	___aldiv@quotient+1,f
  4190     0407  0DDE               	rlf	___aldiv@quotient+2,f
  4191     0408  0DDF               	rlf	___aldiv@quotient+3,f
  4192     0409  0BD9               	decfsz	??___aldiv,f
  4193     040A  2C04               	goto	u1765
  4194     040B                     l1962:
  4195     040B  0854               	movf	___aldiv@divisor+3,w
  4196     040C  0258               	subwf	___aldiv@dividend+3,w
  4197     040D  1D03               	skipz
  4198     040E  2C19               	goto	u1775
  4199     040F  0853               	movf	___aldiv@divisor+2,w
  4200     0410  0257               	subwf	___aldiv@dividend+2,w
  4201     0411  1D03               	skipz
  4202     0412  2C19               	goto	u1775
  4203     0413  0852               	movf	___aldiv@divisor+1,w
  4204     0414  0256               	subwf	___aldiv@dividend+1,w
  4205     0415  1D03               	skipz
  4206     0416  2C19               	goto	u1775
  4207     0417  0851               	movf	___aldiv@divisor,w
  4208     0418  0255               	subwf	___aldiv@dividend,w
  4209     0419                     u1775:
  4210     0419  1C03               	skipc
  4211     041A  2C1C               	goto	u1771
  4212     041B  2C1D               	goto	u1770
  4213     041C                     u1771:
  4214     041C  2C2C               	goto	l1968
  4215     041D                     u1770:
  4216     041D                     l1964:
  4217     041D  0851               	movf	___aldiv@divisor,w
  4218     041E  02D5               	subwf	___aldiv@dividend,f
  4219     041F  0852               	movf	___aldiv@divisor+1,w
  4220     0420  1C03               	skipc
  4221     0421  0F52               	incfsz	___aldiv@divisor+1,w
  4222     0422  02D6               	subwf	___aldiv@dividend+1,f
  4223     0423  0853               	movf	___aldiv@divisor+2,w
  4224     0424  1C03               	skipc
  4225     0425  0F53               	incfsz	___aldiv@divisor+2,w
  4226     0426  02D7               	subwf	___aldiv@dividend+2,f
  4227     0427  0854               	movf	___aldiv@divisor+3,w
  4228     0428  1C03               	skipc
  4229     0429  0F54               	incfsz	___aldiv@divisor+3,w
  4230     042A  02D8               	subwf	___aldiv@dividend+3,f
  4231     042B                     l1966:
  4232     042B  145C               	bsf	___aldiv@quotient,0
  4233     042C                     l1968:
  4234     042C  3001               	movlw	1
  4235     042D                     u1785:
  4236     042D  1003               	clrc
  4237     042E  0CD4               	rrf	___aldiv@divisor+3,f
  4238     042F  0CD3               	rrf	___aldiv@divisor+2,f
  4239     0430  0CD2               	rrf	___aldiv@divisor+1,f
  4240     0431  0CD1               	rrf	___aldiv@divisor,f
  4241     0432  3EFF               	addlw	-1
  4242     0433  1D03               	skipz
  4243     0434  2C2D               	goto	u1785
  4244     0435                     l1970:
  4245     0435  3001               	movlw	1
  4246     0436  02DA               	subwf	___aldiv@counter,f
  4247     0437  1D03               	btfss	3,2
  4248     0438  2C3A               	goto	u1791
  4249     0439  2C3B               	goto	u1790
  4250     043A                     u1791:
  4251     043A  2C02               	goto	l1960
  4252     043B                     u1790:
  4253     043B                     l1972:
  4254     043B  085B               	movf	___aldiv@sign,w
  4255     043C  1903               	btfsc	3,2
  4256     043D  2C3F               	goto	u1801
  4257     043E  2C40               	goto	u1800
  4258     043F                     u1801:
  4259     043F  2C4B               	goto	l1976
  4260     0440                     u1800:
  4261     0440                     l1974:
  4262     0440  09DC               	comf	___aldiv@quotient,f
  4263     0441  09DD               	comf	___aldiv@quotient+1,f
  4264     0442  09DE               	comf	___aldiv@quotient+2,f
  4265     0443  09DF               	comf	___aldiv@quotient+3,f
  4266     0444  0ADC               	incf	___aldiv@quotient,f
  4267     0445  1903               	skipnz
  4268     0446  0ADD               	incf	___aldiv@quotient+1,f
  4269     0447  1903               	skipnz
  4270     0448  0ADE               	incf	___aldiv@quotient+2,f
  4271     0449  1903               	skipnz
  4272     044A  0ADF               	incf	___aldiv@quotient+3,f
  4273     044B                     l1976:
  4274     044B  085F               	movf	___aldiv@quotient+3,w
  4275     044C  00D4               	movwf	?___aldiv+3
  4276     044D  085E               	movf	___aldiv@quotient+2,w
  4277     044E  00D3               	movwf	?___aldiv+2
  4278     044F  085D               	movf	___aldiv@quotient+1,w
  4279     0450  00D2               	movwf	?___aldiv+1
  4280     0451  085C               	movf	___aldiv@quotient,w
  4281     0452  00D1               	movwf	?___aldiv
  4282     0453                     l393:
  4283     0453  0008               	return
  4284     0454                     __end_of___aldiv:
  4285                           
  4286                           	psect	text22
  4287     06A1                     __ptext22:	
  4288 ;; *************** function _ConcatToPacket *****************
  4289 ;; Defined at:
  4290 ;;		line 303 in file "main.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  pkt             1    wreg     PTR unsigned char 
  4293 ;;		 -> main@packet(50), 
  4294 ;;  str             2   10[BANK0 ] PTR unsigned char 
  4295 ;;		 -> STR_1(10), main@num_rand_s(16), 
  4296 ;;  delim           1   12[BANK0 ] unsigned char 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  pkt             1   16[BANK0 ] PTR unsigned char 
  4299 ;;		 -> main@packet(50), 
  4300 ;;  packet_lengt    2   14[BANK0 ] int 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         0       3       0       0       0
  4311 ;;      Locals:         0       3       0       0       0
  4312 ;;      Temps:          0       1       0       0       0
  4313 ;;      Totals:         0       7       0       0       0
  4314 ;;Total ram usage:        7 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 3
  4317 ;; This function calls:
  4318 ;;		_strcat
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324     06A1                     _ConcatToPacket:	
  4325                           ;psect for function _ConcatToPacket
  4326                           
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _ConcatToPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4330                           ;ConcatToPacket@pkt stored from wreg
  4331     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  4332     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  4333     06A3  00D4               	movwf	ConcatToPacket@pkt
  4334     06A4                     l2274:
  4335                           
  4336                           ;main.c: 303: void ConcatToPacket(char* pkt, char* str, char delim);main.c: 304: {;main.
      +                          c: 305:     int packet_length = strcat(pkt, str);
  4337     06A4  084E               	movf	ConcatToPacket@str,w
  4338     06A5  00F4               	movwf	strcat@str2
  4339     06A6  084F               	movf	ConcatToPacket@str+1,w
  4340     06A7  00F5               	movwf	strcat@str2+1
  4341     06A8  0854               	movf	ConcatToPacket@pkt,w
  4342     06A9  120A  118A  2586  120A  118A  	fcall	_strcat
  4343     06AE  0875               	movf	?_strcat+1,w
  4344     06AF  1283               	bcf	3,5	;RP0=0, select bank0
  4345     06B0  1303               	bcf	3,6	;RP1=0, select bank0
  4346     06B1  00D3               	movwf	ConcatToPacket@packet_length+1
  4347     06B2  0874               	movf	?_strcat,w
  4348     06B3  00D2               	movwf	ConcatToPacket@packet_length
  4349     06B4                     l2276:
  4350                           
  4351                           ;main.c: 306:     if(delim != ' ')
  4352     06B4  3020               	movlw	32
  4353     06B5  0650               	xorwf	ConcatToPacket@delim,w
  4354     06B6  1903               	btfsc	3,2
  4355     06B7  2EB9               	goto	u2281
  4356     06B8  2EBA               	goto	u2280
  4357     06B9                     u2281:
  4358     06B9  2EC9               	goto	l2282
  4359     06BA                     u2280:
  4360     06BA                     l2278:
  4361                           
  4362                           ;main.c: 307:     {;main.c: 308:         pkt[packet_length] = delim;
  4363     06BA  0852               	movf	ConcatToPacket@packet_length,w
  4364     06BB  0754               	addwf	ConcatToPacket@pkt,w
  4365     06BC  00D1               	movwf	??_ConcatToPacket
  4366     06BD  0851               	movf	??_ConcatToPacket,w
  4367     06BE  0084               	movwf	4
  4368     06BF  0850               	movf	ConcatToPacket@delim,w
  4369     06C0  1783               	bsf	3,7	;select IRP bank2
  4370     06C1  0080               	movwf	0
  4371     06C2                     l2280:
  4372                           
  4373                           ;main.c: 309:         packet_length++;
  4374     06C2  3001               	movlw	1
  4375     06C3  07D2               	addwf	ConcatToPacket@packet_length,f
  4376     06C4  1803               	skipnc
  4377     06C5  0AD3               	incf	ConcatToPacket@packet_length+1,f
  4378     06C6  3000               	movlw	0
  4379     06C7  07D3               	addwf	ConcatToPacket@packet_length+1,f
  4380                           
  4381                           ;main.c: 310:     }
  4382     06C8  2EE4               	goto	l2288
  4383     06C9                     l2282:
  4384                           
  4385                           ;main.c: 312:     {;main.c: 313:         pkt[packet_length] = '\r';
  4386     06C9  0852               	movf	ConcatToPacket@packet_length,w
  4387     06CA  0754               	addwf	ConcatToPacket@pkt,w
  4388     06CB  00D1               	movwf	??_ConcatToPacket
  4389     06CC  0851               	movf	??_ConcatToPacket,w
  4390     06CD  0084               	movwf	4
  4391     06CE  300D               	movlw	13
  4392     06CF  1783               	bsf	3,7	;select IRP bank2
  4393     06D0  0080               	movwf	0
  4394     06D1                     l2284:
  4395                           
  4396                           ;main.c: 314:         packet_length++;
  4397     06D1  3001               	movlw	1
  4398     06D2  07D2               	addwf	ConcatToPacket@packet_length,f
  4399     06D3  1803               	skipnc
  4400     06D4  0AD3               	incf	ConcatToPacket@packet_length+1,f
  4401     06D5  3000               	movlw	0
  4402     06D6  07D3               	addwf	ConcatToPacket@packet_length+1,f
  4403     06D7                     l2286:
  4404                           
  4405                           ;main.c: 315:         pkt[packet_length] = '\n';
  4406     06D7  0852               	movf	ConcatToPacket@packet_length,w
  4407     06D8  0754               	addwf	ConcatToPacket@pkt,w
  4408     06D9  00D1               	movwf	??_ConcatToPacket
  4409     06DA  0851               	movf	??_ConcatToPacket,w
  4410     06DB  0084               	movwf	4
  4411     06DC  300A               	movlw	10
  4412     06DD  0080               	movwf	0
  4413                           
  4414                           ;main.c: 316:         packet_length++;
  4415     06DE  3001               	movlw	1
  4416     06DF  07D2               	addwf	ConcatToPacket@packet_length,f
  4417     06E0  1803               	skipnc
  4418     06E1  0AD3               	incf	ConcatToPacket@packet_length+1,f
  4419     06E2  3000               	movlw	0
  4420     06E3  07D3               	addwf	ConcatToPacket@packet_length+1,f
  4421     06E4                     l2288:
  4422                           
  4423                           ;main.c: 318:     pkt[packet_length] = '\0';
  4424     06E4  0852               	movf	ConcatToPacket@packet_length,w
  4425     06E5  0754               	addwf	ConcatToPacket@pkt,w
  4426     06E6  00D1               	movwf	??_ConcatToPacket
  4427     06E7  0851               	movf	??_ConcatToPacket,w
  4428     06E8  0084               	movwf	4
  4429     06E9  0180               	clrf	0
  4430     06EA                     l163:
  4431     06EA  0008               	return
  4432     06EB                     __end_of_ConcatToPacket:
  4433                           
  4434                           	psect	text23
  4435     0586                     __ptext23:	
  4436 ;; *************** function _strcat *****************
  4437 ;; Defined at:
  4438 ;;		line 321 in file "main.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  str1            1    wreg     PTR unsigned char 
  4441 ;;		 -> main@packet(50), 
  4442 ;;  str2            2    4[COMMON] PTR unsigned char 
  4443 ;;		 -> STR_1(10), main@num_rand_s(16), 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  str1            1    5[BANK0 ] PTR unsigned char 
  4446 ;;		 -> main@packet(50), 
  4447 ;;  length_str1     2    8[BANK0 ] int 
  4448 ;;  n               2    6[BANK0 ] int 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2    4[COMMON] int 
  4451 ;; Registers used:
  4452 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         2       0       0       0       0
  4459 ;;      Locals:         0       5       0       0       0
  4460 ;;      Temps:          0       5       0       0       0
  4461 ;;      Totals:         2      10       0       0       0
  4462 ;;Total ram usage:       12 bytes
  4463 ;; Hardware stack levels used: 2
  4464 ;; Hardware stack levels required when called: 1
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_ConcatToPacket
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472     0586                     _strcat:	
  4473                           ;psect for function _strcat
  4474                           
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4478                           ;strcat@str1 stored from wreg
  4479     0586  1283               	bcf	3,5	;RP0=0, select bank0
  4480     0587  1303               	bcf	3,6	;RP1=0, select bank0
  4481     0588  00C9               	movwf	strcat@str1
  4482     0589                     l2042:
  4483                           
  4484                           ;main.c: 321: int strcat(char* str1, char* str2);main.c: 322: {;main.c: 323:     int n =
      +                           0, length_str1 = 0;
  4485     0589  01CA               	clrf	strcat@n
  4486     058A  01CB               	clrf	strcat@n+1
  4487     058B  01CC               	clrf	strcat@length_str1
  4488     058C  01CD               	clrf	strcat@length_str1+1
  4489                           
  4490                           ;main.c: 326:     while(str1[length_str1] != '\0')
  4491     058D  2D94               	goto	l2046
  4492     058E                     l2044:
  4493                           
  4494                           ;main.c: 327:         length_str1++;
  4495     058E  3001               	movlw	1
  4496     058F  07CC               	addwf	strcat@length_str1,f
  4497     0590  1803               	skipnc
  4498     0591  0ACD               	incf	strcat@length_str1+1,f
  4499     0592  3000               	movlw	0
  4500     0593  07CD               	addwf	strcat@length_str1+1,f
  4501     0594                     l2046:
  4502                           
  4503                           ;main.c: 326:     while(str1[length_str1] != '\0')
  4504     0594  084C               	movf	strcat@length_str1,w
  4505     0595  0749               	addwf	strcat@str1,w
  4506     0596  00C4               	movwf	??_strcat
  4507     0597  0844               	movf	??_strcat,w
  4508     0598  0084               	movwf	4
  4509     0599  1783               	bsf	3,7	;select IRP bank2
  4510     059A  0800               	movf	0,w
  4511     059B  1D03               	btfss	3,2
  4512     059C  2D9E               	goto	u1831
  4513     059D  2D9F               	goto	u1830
  4514     059E                     u1831:
  4515     059E  2D8E               	goto	l2044
  4516     059F                     u1830:
  4517     059F  2DCC               	goto	l169
  4518     05A0                     l2048:
  4519                           
  4520                           ;main.c: 331:     {;main.c: 332:         str1[length_str1] = str2[n];
  4521     05A0  084A               	movf	strcat@n,w
  4522     05A1  0774               	addwf	strcat@str2,w
  4523     05A2  00C5               	movwf	??_strcat+1
  4524     05A3  0875               	movf	strcat@str2+1,w
  4525     05A4  00C4               	movwf	??_strcat
  4526     05A5  1803               	skipnc
  4527     05A6  0AC4               	incf	??_strcat,f
  4528     05A7  1FCA               	btfss	strcat@n,7
  4529     05A8  2DAA               	goto	u1840
  4530     05A9  03C4               	decf	??_strcat,f
  4531     05AA                     u1840:
  4532     05AA  1283               	bcf	3,5	;RP0=0, select bank0
  4533     05AB  1303               	bcf	3,6	;RP1=0, select bank0
  4534     05AC  0844               	movf	??_strcat,w
  4535     05AD  00C6               	movwf	??_strcat+2
  4536     05AE  0846               	movf	??_strcat+2,w
  4537     05AF  00FF               	movwf	btemp+1
  4538     05B0  0845               	movf	??_strcat+1,w
  4539     05B1  0084               	movwf	4
  4540     05B2  120A  118A  2500  120A  118A  	fcall	stringtab
  4541     05B7  00C7               	movwf	??_strcat+3
  4542     05B8  084C               	movf	strcat@length_str1,w
  4543     05B9  0749               	addwf	strcat@str1,w
  4544     05BA  00C8               	movwf	??_strcat+4
  4545     05BB  0848               	movf	??_strcat+4,w
  4546     05BC  0084               	movwf	4
  4547     05BD  0847               	movf	??_strcat+3,w
  4548     05BE  1783               	bsf	3,7	;select IRP bank2
  4549     05BF  0080               	movwf	0
  4550     05C0                     l2050:
  4551                           
  4552                           ;main.c: 333:         n++;
  4553     05C0  3001               	movlw	1
  4554     05C1  07CA               	addwf	strcat@n,f
  4555     05C2  1803               	skipnc
  4556     05C3  0ACB               	incf	strcat@n+1,f
  4557     05C4  3000               	movlw	0
  4558     05C5  07CB               	addwf	strcat@n+1,f
  4559     05C6                     l2052:
  4560                           
  4561                           ;main.c: 334:         length_str1++;
  4562     05C6  3001               	movlw	1
  4563     05C7  07CC               	addwf	strcat@length_str1,f
  4564     05C8  1803               	skipnc
  4565     05C9  0ACD               	incf	strcat@length_str1+1,f
  4566     05CA  3000               	movlw	0
  4567     05CB  07CD               	addwf	strcat@length_str1+1,f
  4568     05CC                     l169:	
  4569                           ;main.c: 335:     }
  4570                           
  4571                           
  4572                           ;main.c: 330:     while(str2[n] != '\0')
  4573     05CC  084A               	movf	strcat@n,w
  4574     05CD  0774               	addwf	strcat@str2,w
  4575     05CE  00C5               	movwf	??_strcat+1
  4576     05CF  0875               	movf	strcat@str2+1,w
  4577     05D0  00C4               	movwf	??_strcat
  4578     05D1  1803               	skipnc
  4579     05D2  0AC4               	incf	??_strcat,f
  4580     05D3  1FCA               	btfss	strcat@n,7
  4581     05D4  2DD6               	goto	u1850
  4582     05D5  03C4               	decf	??_strcat,f
  4583     05D6                     u1850:
  4584     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  4585     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  4586     05D8  0844               	movf	??_strcat,w
  4587     05D9  00C6               	movwf	??_strcat+2
  4588     05DA  0846               	movf	??_strcat+2,w
  4589     05DB  00FF               	movwf	btemp+1
  4590     05DC  0845               	movf	??_strcat+1,w
  4591     05DD  0084               	movwf	4
  4592     05DE  120A  118A  2500  120A  118A  	fcall	stringtab
  4593     05E3  3A00               	xorlw	0
  4594     05E4  1D03               	skipz
  4595     05E5  2DE7               	goto	u1861
  4596     05E6  2DE8               	goto	u1860
  4597     05E7                     u1861:
  4598     05E7  2DA0               	goto	l2048
  4599     05E8                     u1860:
  4600     05E8                     l2054:
  4601                           
  4602                           ;main.c: 338:     return length_str1;
  4603     05E8  084D               	movf	strcat@length_str1+1,w
  4604     05E9  00F5               	movwf	?_strcat+1
  4605     05EA  084C               	movf	strcat@length_str1,w
  4606     05EB  00F4               	movwf	?_strcat
  4607     05EC                     l172:
  4608     05EC  0008               	return
  4609     05ED                     __end_of_strcat:
  4610                           
  4611                           	psect	text24
  4612     0F34                     __ptext24:	
  4613 ;; *************** function _IRS *****************
  4614 ;; Defined at:
  4615 ;;		line 490 in file "main.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          4       0       0       0       0
  4632 ;;      Totals:         4       0       0       0       0
  4633 ;;Total ram usage:        4 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		Interrupt level 1
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642     0F34                     _IRS:	
  4643                           ;psect for function _IRS
  4644                           
  4645     0F34                     i1l1864:
  4646                           
  4647                           ;main.c: 493:     if(RCIF)
  4648     0F34  1283               	bcf	3,5	;RP0=0, select bank0
  4649     0F35  1303               	bcf	3,6	;RP1=0, select bank0
  4650     0F36  1E8C               	btfss	12,5	;volatile
  4651     0F37  2F39               	goto	u159_21
  4652     0F38  2F3A               	goto	u159_20
  4653     0F39                     u159_21:
  4654     0F39  2F55               	goto	i1l1878
  4655     0F3A                     u159_20:
  4656     0F3A                     i1l1866:
  4657                           
  4658                           ;main.c: 494:     {;main.c: 495:         datoSeriale[iS++] = RCREG;
  4659     0F3A  1683               	bsf	3,5	;RP0=1, select bank1
  4660     0F3B  1303               	bcf	3,6	;RP1=0, select bank1
  4661     0F3C  082A               	movf	_iS^(0+128),w
  4662     0F3D  3E34               	addlw	(low (_datoSeriale| 0))& (0+255)
  4663     0F3E  0084               	movwf	4
  4664     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  4665     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  4666     0F41  081A               	movf	26,w	;volatile
  4667     0F42  1383               	bcf	3,7	;select IRP bank0
  4668     0F43  0080               	movwf	0
  4669     0F44                     i1l1868:
  4670     0F44  3001               	movlw	1
  4671     0F45  00F0               	movwf	??_IRS
  4672     0F46  0870               	movf	??_IRS,w
  4673     0F47  1683               	bsf	3,5	;RP0=1, select bank1
  4674     0F48  1303               	bcf	3,6	;RP1=0, select bank1
  4675     0F49  07AA               	addwf	_iS^(0+128),f
  4676     0F4A                     i1l1870:
  4677                           
  4678                           ;main.c: 496:         datoSeriale[iS] = '\0';
  4679     0F4A  082A               	movf	_iS^(0+128),w
  4680     0F4B  3E34               	addlw	(low (_datoSeriale| 0))& (0+255)
  4681     0F4C  0084               	movwf	4
  4682     0F4D  0180               	clrf	0
  4683     0F4E                     i1l1872:
  4684                           
  4685                           ;main.c: 497:         recieved = 1;
  4686     0F4E  01A7               	clrf	_recieved^(0+128)
  4687     0F4F  0AA7               	incf	_recieved^(0+128),f
  4688     0F50                     i1l1874:
  4689                           
  4690                           ;main.c: 498:         compare = 1;
  4691     0F50  01A6               	clrf	_compare^(0+128)
  4692     0F51  0AA6               	incf	_compare^(0+128),f
  4693     0F52                     i1l1876:
  4694                           
  4695                           ;main.c: 499:         RCIF = 0;
  4696     0F52  1283               	bcf	3,5	;RP0=0, select bank0
  4697     0F53  1303               	bcf	3,6	;RP1=0, select bank0
  4698     0F54  128C               	bcf	12,5	;volatile
  4699     0F55                     i1l1878:
  4700                           
  4701                           ;main.c: 502:     if(T0IF)
  4702     0F55  1D0B               	btfss	11,2	;volatile
  4703     0F56  2F58               	goto	u160_21
  4704     0F57  2F59               	goto	u160_20
  4705     0F58                     u160_21:
  4706     0F58  2F6A               	goto	i1l232
  4707     0F59                     u160_20:
  4708     0F59                     i1l1880:
  4709                           
  4710                           ;main.c: 503:     {;main.c: 504:         TMR0 = 131;
  4711     0F59  3083               	movlw	131
  4712     0F5A  0081               	movwf	1	;volatile
  4713                           
  4714                           ;main.c: 505:         milliseconds++;
  4715     0F5B  3001               	movlw	1
  4716     0F5C  07A0               	addwf	_milliseconds,f
  4717     0F5D  3000               	movlw	0
  4718     0F5E  1803               	skipnc
  4719     0F5F  3001               	movlw	1
  4720     0F60  07A1               	addwf	_milliseconds+1,f
  4721     0F61  3000               	movlw	0
  4722     0F62  1803               	skipnc
  4723     0F63  3001               	movlw	1
  4724     0F64  07A2               	addwf	_milliseconds+2,f
  4725     0F65  3000               	movlw	0
  4726     0F66  1803               	skipnc
  4727     0F67  3001               	movlw	1
  4728     0F68  07A3               	addwf	_milliseconds+3,f
  4729     0F69                     i1l1882:
  4730                           
  4731                           ;main.c: 506:         T0IF = 0;
  4732     0F69  110B               	bcf	11,2	;volatile
  4733     0F6A                     i1l232:
  4734     0F6A  0873               	movf	??_IRS+3,w
  4735     0F6B  008A               	movwf	10
  4736     0F6C  0872               	movf	??_IRS+2,w
  4737     0F6D  0084               	movwf	4
  4738     0F6E  0E71               	swapf	??_IRS+1,w
  4739     0F6F  0083               	movwf	3
  4740     0F70  0EFE               	swapf	btemp,f
  4741     0F71  0E7E               	swapf	btemp,w
  4742     0F72  0009               	retfie
  4743     0F73                     __end_of_IRS:
  4744     007E                     btemp	set	126	;btemp
  4745     007E                     wtemp0	set	126
  4746                           
  4747                           	psect	intentry
  4748     0004                     __pintentry:	
  4749                           ;incstack = 0
  4750                           ; Regs used in _IRS: [wreg-fsr0h+status,2+status,0]
  4751                           
  4752     0004                     interrupt_function:
  4753     007E                     saved_w	set	btemp
  4754     0004  00FE               	movwf	btemp
  4755     0005  0E03               	swapf	3,w
  4756     0006  00F1               	movwf	??_IRS+1
  4757     0007  0804               	movf	4,w
  4758     0008  00F2               	movwf	??_IRS+2
  4759     0009  080A               	movf	10,w
  4760     000A  00F3               	movwf	??_IRS+3
  4761     000B  120A  158A  2F34   	ljmp	_IRS
  4762                           
  4763                           	psect	idloc
  4764                           
  4765                           ;Config register IDLOC0 @ 0x2000
  4766                           ;	unspecified, using default values
  4767     2000                     	org	8192
  4768     2000  3FFF               	dw	16383
  4769                           
  4770                           ;Config register IDLOC1 @ 0x2001
  4771                           ;	unspecified, using default values
  4772     2001                     	org	8193
  4773     2001  3FFF               	dw	16383
  4774                           
  4775                           ;Config register IDLOC2 @ 0x2002
  4776                           ;	unspecified, using default values
  4777     2002                     	org	8194
  4778     2002  3FFF               	dw	16383
  4779                           
  4780                           ;Config register IDLOC3 @ 0x2003
  4781                           ;	unspecified, using default values
  4782     2003                     	org	8195
  4783     2003  3FFF               	dw	16383
  4784                           
  4785                           	psect	config
  4786                           
  4787                           ;Config register CONFIG @ 0x2007
  4788                           ;	Oscillator Selection bits
  4789                           ;	FOSC = HS, HS oscillator
  4790                           ;	Watchdog Timer Enable bit
  4791                           ;	WDTE = OFF, WDT disabled
  4792                           ;	Power-up Timer Enable bit
  4793                           ;	PWRTE = ON, PWRT enabled
  4794                           ;	Brown-out Reset Enable bit
  4795                           ;	BOREN = ON, BOR enabled
  4796                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4797                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  4798                           ;	Data EEPROM Memory Code Protection bit
  4799                           ;	CPD = OFF, Data EEPROM code protection off
  4800                           ;	Flash Program Memory Write Enable bits
  4801                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4802                           ;	In-Circuit Debugger Mode bit
  4803                           ;	DEBUG = 0x1, unprogrammed default
  4804                           ;	Flash Program Memory Code Protection bit
  4805                           ;	CP = OFF, Code protection off
  4806     2007                     	org	8199
  4807     2007  3FF2               	dw	16370

Data Sizes:
    Strings     99
    Constant    19
    Data        6
    BSS         50
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     36      76
    BANK1            80      7      19
    BANK3            96     66      66
    BANK2            96      0       0

Pointer List with Targets:

    UART_TxString@str	PTR const unsigned char  size(1) Largest target is 50
		 -> main@packet(BANK3[50]), 

    CompareStrings@str2	PTR unsigned char  size(1) Largest target is 16
		 -> datoTastierino(BANK0[16]), 

    CompareStrings@str1	PTR unsigned char  size(1) Largest target is 16
		 -> datoSeriale(BANK0[16]), 

    Length@str	PTR unsigned char  size(1) Largest target is 16
		 -> datoSeriale(BANK0[16]), datoTastierino(BANK0[16]), 

    strcat@str2	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[10]), main@num_rand_s(BANK3[16]), 

    strcat@str1	PTR unsigned char  size(1) Largest target is 50
		 -> main@packet(BANK3[50]), 

    ConcatToPacket@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[10]), main@num_rand_s(BANK3[16]), 

    ConcatToPacket@pkt	PTR unsigned char  size(1) Largest target is 50
		 -> main@packet(BANK3[50]), 

    ConvertToString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@num_rand_s(BANK3[16]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 17
		 -> datoTastierino(BANK0[16]), STR_8(CODE[17]), STR_7(CODE[16]), STR_6(CODE[13]), 
		 -> STR_5(CODE[15]), STR_4(CODE[12]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> main@num_rand_s(BANK3[16]), 


Critical Paths under _main in COMMON

    _main->_lcdSend
    _read_NumPad->___awmod
    _read_NumPad->_srand
    _rand->___lmul
    _CompareStrings->_Length
    _lcdPrint->_lcdSend
    _init_LCD->_lcdSend
    _UART_TxString->_UART_TxChar
    _pow->___wmul
    _ConcatToPacket->_strcat

Critical Paths under _IRS in COMMON

    None.

Critical Paths under _main in BANK0

    _read_NumPad->___awmod
    _rand->___lmul
    ___awmod->_rand
    _CompareStrings->_Length
    _lcdPrint->_lcdSend
    _init_PIC->_UART_init
    _init_LCD->_lcdSend
    _UART_init->___aldiv
    _ConvertToString->___aldiv
    _pow->___wmul
    ___aldiv->_pow
    _ConcatToPacket->_strcat

Critical Paths under _IRS in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ConvertToString

Critical Paths under _IRS in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                66    66      0   14325
                                              0 BANK3     66    66      0
                     _ConcatToPacket
                    _ConvertToString
                      _UART_TxString
                           _init_PIC
                           _lcdPrint
                            _lcdSend
                        _read_NumPad
 ---------------------------------------------------------------------------------
 (1) _read_NumPad                                          2     2      0    1778
                                             25 BANK0      2     2      0
                     _CompareStrings
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     496
                                             12 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              5 COMMON     1     1      0
                                             19 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _CompareStrings                                       6     5      1     548
                                              6 BANK0      6     5      1
                             _Length
 ---------------------------------------------------------------------------------
 (3) _Length                                               8     6      2     168
                                              4 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    2712
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _init_PIC                                             0     0      0    2878
                          _UART_init
                           _init_LCD
                        _init_NumPad
                        _init_Timer0
 ---------------------------------------------------------------------------------
 (2) _init_Timer0                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_NumPad                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             2     2      0    1772
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              4     3      1    1772
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            8     4      4    1106
                                             28 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        4     4      0     197
                                              0 BANK0      4     4      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ConvertToString                                     13     8      5    3494
                                             28 BANK0      6     1      5
                                              0 BANK1      7     7      0
                            ___aldiv
                            ___almod
                             ___lmul
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                  9     7      2     663
                                              4 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     496
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     613
                                              4 COMMON     1     1      0
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     985
                                             13 BANK0     15     7      8
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (1) _ConcatToPacket                                       7     4      3    1236
                                             10 BANK0      7     4      3
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                              12    10      2     420
                                              4 COMMON     2     0      2
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _IRS                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConcatToPacket
     _strcat
   _ConvertToString
     ___aldiv
       _pow (ARG)
         ___wmul
     ___almod
     ___lmul
     _pow
   _UART_TxString
     _UART_TxChar
   _init_PIC
     _UART_init
       ___aldiv
     _init_LCD
       _lcdSend
     _init_NumPad
     _init_Timer0
   _lcdPrint
     _lcdSend
   _lcdSend
   _read_NumPad
     _CompareStrings
       _Length
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
     _srand

 _IRS (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     42      42       9       68.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      13       7       23.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed May 31 14:51:38 2023

                          pc 0002             ??_CompareStrings 004B                           _iS 00AA  
                         _iT 00A9                           fsr 0004          ___wmul@multiplicand 0046  
                        l130 0EA6                          l210 03B6                          l213 0FB8  
                        l133 06A0                          l142 077B                          l127 0EE1  
                        l320 0F08                          l216 0E85                          l136 0F33  
                        l225 04FF                          l163 06EA                          l219 0E91  
                        l172 05EC                          l332 07C3                          l148 07FF  
                        l406 04DA                          l318 0EF0                          l158 02B7  
                        l190 0E83                          l182 0733                          l169 05CC  
                        l178 0EC2                          l197 0306                          l383 03CB  
                        l393 0453                          l396 0468                          l484 0647  
                        l771 0E78                          l774 0FFF                          _IRS 0F34  
                        _pow 07C4                          fsr0 0004                          indf 0000  
               ___awmod@sign 005C                         ?_IRS 0070                         l2000 0656  
                       l2010 0684                         l2002 0659                         l2100 0457  
                       l2012 068B                         l2004 0660                         l2020 0E92  
                       l2110 0482                         l2102 045B                         l2030 07CB  
                       l2014 0692                         l2006 0672                         l2022 0E96  
                       l2120 04BC                         l2112 048F                         l2104 046C  
                       l2032 07CE                         l2016 0699                         l2008 067D  
                       l2024 0E9A                         l2200 0310                         l2050 05C0  
                       l2042 0589                         l2114 0493                         l2122 04C2  
                       l2106 0477                         l2034 07E6                         l2018 0E79  
                       l2026 0E9E                         l2130 05ED                         l2210 0358  
                       l2202 0315                         l2052 05C6                         l2044 058E  
                       l2124 04C7                         l2116 04A5                         l2108 047F  
                       l2036 07EC                         l2028 07C7                         l2060 070C  
                       l2140 05FF                         l2132 05F0                         l2220 0378  
                       l2212 0367                         l2204 0316                         l2300 0056  
                       l2054 05E8                         l2046 0594                         l2126 04D2  
                       l2118 04B3                         l2038 07F9                         l2150 0618  
                       l2142 0604                         l2134 05F4                         l2230 03A3  
                       l2222 037F                         l2214 036C                         l2206 031C  
                       l2310 0091                         l2302 005B                         l2048 05A0  
                       l2240 01BA                         l2152 061C                         l2144 060A  
                       l2160 0639                         l2136 05F9                         l2224 0394  
                       l2216 0370                         l2208 0323                         l2232 03AC  
                       l2320 00BC                         l2312 0094                         l2304 0067  
                       l2250 01F1                         l2242 01C0                         l2074 0723  
                       l2066 070E                         l2058 06EE                         l2162 063E  
                       l2154 0626                         l2146 060D                         l2138 05FB  
                       l2082 0E70                         l2234 03B0                         l2226 039A  
                       l2218 0373                         l2170 02B8                         l2330 00F0  
                       l2322 00C1                         l2314 00A2                         l2306 006E  
                       l2260 0293                         l2252 021E                         l2244 01C7  
                       l2236 01AE                         l2092 0E85                         l2068 0710  
                       l2076 0727                         l2164 0643                         l2156 062C  
                       l2148 0614                         l2084 0FB9                         l2228 039E  
                       l2180 02C6                         l2172 02C0                         l2340 010B  
                       l2332 00F3                         l2324 00C8                         l2316 00B0  
                       l2308 0086                         l2254 0238                         l2262 0299  
                       l2246 01E6                         l2238 01B4                         l2094 0E8B  
                       l2270 0757                         l2078 0732                         l2158 0633  
                       l2086 0FDA                         l2190 02DF                         l2182 02D1  
                       l2350 0119                         l2342 010F                         l2326 00D3  
                       l2334 00F4                         l2318 00B6                         l2280 06C2  
                       l2264 02AC                         l2256 0263                         l2248 01EB  
                       l2096 0E8F                         l2168 0EC3                         l2272 075F  
                       l2088 0FE8                         l2192 02EA                         l2360 0148  
                       l2352 011F                         l2344 0110                         l2336 00F9  
                       l2328 00E5                         l2282 06C9                         l2274 06A4  
                       l2098 0454                         l2258 028B                         l2290 04DE  
                       l2266 0734                         l2194 02F9                         l2178 02C1  
                       l2370 0165                         l2362 0153                         l2354 0124  
                       l2346 0111                         l2338 0100                         l2284 06D1  
                       l2276 06B4                         l2292 04E1                         l1900 0F26  
                       l2268 0739                         l2196 0304                         l2188 02D2  
                       l2372 0170                         l2364 0157                         l2356 012B  
                       l2380 0189                         l2348 0114                         l2286 06D7  
                       l2278 06BA                         l2294 04EC                         l1902 0F30  
                       l2198 030A                         l2382 018F                         l2374 0182  
                       l2358 0136                         l2366 0159                         l2288 06E4  
                       l1920 0EFE                         l1912 0EE2                         l2296 04F4  
                       l1904 0EAA                         l2384 0194                         l2376 0186  
                       l2368 015E                         l1930 078A                         l1922 0F04  
                       l1914 0EE4                         l1906 0EAC                         l2386 019B  
                       l2378 0188                         l2298 0051                         l1940 03B7  
                       l1932 07A1                         l1916 0EEA                         l1908 0EBE  
                       l2388 01A6                         l1950 03DE                         l1942 03BA  
                       l1934 07AA                         l1926 077C                         l1918 0EF7  
                       l1960 0402                         l1952 03E6                         l1944 03BE  
                       l1936 07BB                         l1928 0786                         l1970 0435  
                       l1962 040B                         l1954 03EE                         l1946 03CF  
                       l1890 0F0F                         l1964 041D                         l1956 03F1  
                       l1972 043B                         l1948 03DA                         l1980 0F73  
                       l1892 0F12                         l1884 0F0A                         l1974 0440  
                       l1966 042B                         l1958 03FE                         l1990 0FB5  
                       l1982 0F7B                         l1894 0F14                         l1886 0F0D  
                       l1976 044B                         l1968 042C                         l1992 0FB6  
                       l1984 0F84                         l1896 0F19                         l1888 0F0E  
                       l1994 0FB7                         l1986 0F87                         l1898 0F23  
                       l1988 0F88                         l1996 0648                         l1998 064C  
                       ?_pow 0048                         STR_1 057C                         STR_2 0534  
                       STR_3 0563                         STR_4 0570                         STR_5 0554  
                       STR_6 0563                         STR_7 0544                         STR_8 0523  
                       _T0IF 005A                         u2000 04C7                         u2001 04C6  
                       u2010 05F4                         u2011 05F3                         u2020 05FF  
                       u2100 02DF                         u2021 05FE                         u2101 02DE  
                       u2030 060A                         u2110 02F9                         u2031 0609  
                       u2111 02F8                         u2200 03AC                         u2201 03AB  
                       u2050 061C                         u2210 03B6                         u2130 0310  
                       u2051 061B                         u2211 03B5                         u2131 030F  
                       u2220 01BA                         u2060 0626                         u2140 0315  
                       u2300 0067                         u2221 01B9                         u2061 0625  
                       u2045 060E                         u2141 0314                         u2125 02FC  
                       u2301 0066                         u2230 021D                         u2150 031C  
                       u2310 00C1                         u2231 021C                         u2151 031B  
                       u2311 00C0                         u2240 02AC                         u2080 0639  
                       u2160 0323                         u2320 00F9                         u2241 02AB  
                       u2081 0638                         u2065 0622                         u2161 0322  
                       u2321 00F8                         u2305 0063                         u2250 0745  
                       u1610 0EBE                         u2090 063E                         u2170 0367  
                       u2330 0119                         u1611 0EBD                         u2091 063D  
                       u2075 062D                         u2171 0366                         u2331 0118  
                       u1700 07BB                         u1620 0EEA                         u2260 0769  
                       u2180 0378                         u2340 011F                         u1701 07BA  
                       u1621 0EE9                         u2245 02A8                         u2181 0377  
                       u2341 011E                         u1710 03BE                         u2270 077B  
                       u2190 037F                         u2350 0124                         u1711 03BD  
                       u2407 0652                         u2271 077A                         u2191 037E  
                       u2351 0123                         u2280 06BA                         u1800 0440  
                       u1720 03CF                         u2360 015E                         u2281 06B9  
                       u1801 043F                         u1721 03CE                         u2417 0666  
                       u2361 015D                         u1730 03EE                         u1650 0F04  
                       u2290 04FF                         u1810 0F96                         u2370 018F  
                       u1731 03ED                         u1651 0F03                         u1635 0EF1  
                       u2291 04FE                         u2427 0678                         u2371 018E  
                       u1660 078A                         u1820 07F9                         u1900 0FF7  
                       u2380 0194                         u1661 0789                         u1645 0EF8  
                       u1821 07F8                         u2437 0F1F                         u2381 0193  
                       u1830 059F                         u1750 0402                         u1910 0E8B  
                       u1831 059E                         u1751 0401                         u1671 0793  
                       u1911 0E8A                         u1815 0F91                         u2447 0F2C  
                       _PIE1 008C                         u1840 05AA                         u1920 045B  
                       u1672 079A                         u1745 03F3                         u1921 045A  
                       u1673 07A1                         u1825 07F5                         u1905 0FF2  
                       u1850 05D6                         u1770 041D                         u1930 046C  
                       u1771 041C                         u1931 046B                         u1860 05E8  
                       u1940 047F                         u1861 05E7                         u1765 0404  
                       u1941 047E                         u1685 07A3                         u2397 02E5  
                       u1790 043B                         u1870 070C                         u1791 043A  
                       u1775 0419                         u1695 07AB                         u1871 070B  
                       u1960 0493                         u1880 0722                         u1785 042D  
                       u1961 0492                         u1881 0721                         u1970 04A5  
                       u1890 0732                         u1971 04A4                         u1955 0484  
                       u1891 0731                         u1875 0708                         u1990 04C2  
                       u1991 04C1                         u1975 04A1                         u1985 04B4  
                       _RCIF 0065                         _PIR1 000C                         _TMR0 0001  
                       _fail 00A4                         _main 0051            ConcatToPacket@pkt 0054  
                       _keyf 0076                         _keys 0510                         _rand 0FB9  
          ConcatToPacket@str 004E                         btemp 007E                         pow@b 004C  
                       pow@i 004D                         pow@n 004F                         start 000E  
                      ??_IRS 0070                        ??_pow 004A                 ?_init_NumPad 0070  
               ?_init_Timer0 0070              __end_of___aldiv 0454              __end_of___almod 04DB  
                      ?_main 0070                        ?_rand 0050              __end_of___awmod 0648  
               ?_read_NumPad 0070                        i1l232 0F6A                        _RCREG 001A  
                      _RCSTA 0018                        _SPBRG 0099                        _PORTB 0006  
                      _PORTD 0008                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                        _TXREG 0019                        _TXSTA 0098  
            __end_of_colMask 0523          ___lmul@multiplicand 0048              __end_of_lcdSend 0F34  
                      _randx 0068                        _srand 0E70                        pclath 000A  
            __end_of_rowMask 0520                        status 0003                        wtemp0 007E  
            __initialization 0011                 __end_of_main 01AE                 __end_of_keys 051C  
               __end_of_rand 1000                       ??_main 0076                       ??_rand 0052  
          strcat@length_str1 004C                       ?_srand 0074                       i1l1870 0F4A  
                     i1l1880 0F59                       i1l1872 0F4E                       i1l1864 0F34  
                     i1l1882 0F69                       i1l1874 0F50                       i1l1866 0F3A  
                     i1l1876 0F52                       i1l1868 0F44                       i1l1878 0F55  
                     u160_20 0F59                       u160_21 0F58                       _INTCON 000B  
                     u159_20 0F3A                       u159_21 0F39                 ?_UART_TxChar 0070  
                     _Length 0EA7             __end_of_lcdPrint 077C                       ___lmul 077C  
                  ??___aldiv 0059                    ??___almod 0074                       ___wmul 0EE2  
          __end_of_UART_init 0FB9                    ??___awmod 0075          ConcatToPacket@delim 0050  
           __end_of_init_LCD 06A1             __end_of_init_PIC 0EE2                       _old_iT 00A8  
            ___awmod@divisor 0057              ___awmod@counter 005B                    ??_lcdSend 0044  
                     _strcat 0586                 __pdataCOMMON 0079                       saved_w 007E  
                     pow@exp 0048                       srand@x 0074               _datoTastierino 0024  
    __end_of__initialization 004D        __end_of_UART_TxString 0500               __pcstackCOMMON 0070  
               __pidataBANK0 0E64                 __pidataBANK1 0E63                __end_of_srand 0E79  
                    ??_srand 0076                   __pbssBANK0 0020                   __pbssBANK1 00A0  
                    ?_Length 0074                   __pmaintext 0051                      ?___lmul 0044  
                    ?___wmul 0044                   __pintentry 0004               ___lmul@product 004C  
                    ?_strcat 0074                    ?_lcdPrint 0046       ConvertToString@n_cifre 00B1  
                 __stringtab 0500                    ?_init_LCD 0070                    ?_init_PIC 0070  
          ??_ConvertToString 0065                      ___aldiv 03B7                      ___almod 0454  
                    ___awmod 05ED                      _colMask 0520                      _colScan 0078  
                    _lcdSend 0F09                      __ptext1 02B8                      __ptext2 0E70  
                    __ptext3 0FB9                      __ptext4 05ED                      __ptext5 06EB  
                    __ptext6 0EA7                      __ptext7 0734                      __ptext8 0EC3  
                    __ptext9 0E92               _ConcatToPacket 06A1                      _compare 00A6  
                    _maxFail 00B2             ___awmod@dividend 0059             ___aldiv@dividend 0055  
                 _keypressed 0079                      _rowMask 051C                      _rowScan 0077  
                    _success 00A5                   ??_lcdPrint 0048                      clrloop0 0E69  
       end_of_initialization 004D               main@num_rand_s 01C2                   ??_init_LCD 0046  
                 ??_init_PIC 0076               UART_TxString@n 0046             ___aldiv@quotient 005C  
                    strcat@n 004A       __end_of_ConcatToPacket 06EB                    _UART_init 0F73  
                  _PORTEbits 0009                    _TRISEbits 0089                   main@packet 0190  
                  Length@len 0048                    Length@str 0047               __end_of_Length 0EC3  
             __end_of___lmul 07C4               __end_of___wmul 0F09              ?_ConcatToPacket 004E  
              __pidataCOMMON 0003                   ?_UART_init 0060               __end_of_strcat 05ED  
        start_initialization 0011                  __end_of_IRS 0F73                  __end_of_pow 0800  
                   ??_Length 0044              CompareStrings@i 004F                     ??___lmul 0074  
                   ??___wmul 0074                ??_init_NumPad 0074                  __pdataBANK0 0068  
                __pdataBANK1 00B2                ??_init_Timer0 0074                ??_read_NumPad 005D  
                   ??_strcat 0044                  __pbssCOMMON 0076               _CompareStrings 06EB  
                  ___latbits 0002                __pcstackBANK0 0044                __pcstackBANK1 00AB  
              __pcstackBANK3 0190              _ConvertToString 01AE                  _datoSeriale 0034  
                   ?___aldiv 0051                     ?___almod 0044                     ?___awmod 0057  
           ___almod@dividend 0048                    __pstrings 0500                  ??_UART_init 0064  
                   ?_lcdSend 0074       __end_of_CompareStrings 0734          __end_of_init_NumPad 0E84  
        __end_of_init_Timer0 0EA7                UART_TxChar@ch 0075          __end_of_read_NumPad 03B7  
            ___aldiv@divisor 0051            interrupt_function 0004              ___aldiv@counter 005A  
             ___wmul@product 0074                 _milliseconds 0020                    clear_ram0 0E68  
              ??_UART_TxChar 0074                _UART_TxString 04DB                 _old_num_rand 00A0  
           ConvertToString@i 00AF             ConvertToString@j 00AD             ConvertToString@n 0060  
                  lcdPrint@n 004B                  __stringbase 050F            ___wmul@multiplier 0044  
            ?_CompareStrings 004A      __end_of_ConvertToString 02B8            ___lmul@multiplier 0044  
         CompareStrings@str1 004E           CompareStrings@str2 004A               ?_UART_TxString 0070  
           ??_ConcatToPacket 0051          __end_of_UART_TxChar 0E92                  _init_NumPad 0E79  
                _init_Timer0 0E92           __end_of__stringtab 0510                  _read_NumPad 02B8  
                 strcat@str1 0049                   strcat@str2 0074                     __ptext10 0E79  
                   __ptext11 0648                     __ptext20 0454                     __ptext12 0F09  
                   __ptext21 03B7                     __ptext13 0F73                     __ptext22 06A1  
                   __ptext14 04DB                     __ptext23 0586                     __ptext15 0E84  
                   __ptext24 0F34                     __ptext16 01AE                     __ptext17 07C4  
                   __ptext18 0EE2                     __ptext19 077C                     _lcdPrint 0734  
           UART_TxString@str 0045              ___almod@divisor 0044  ConcatToPacket@packet_length 0052  
            ___almod@counter 004C                     _init_LCD 0648                     _init_PIC 0EC3  
                   _recieved 00A7                     _num_rand 00A2             ?_ConvertToString 0060  
                   intlevel1 0000            UART_init@baudrate 0060              ??_UART_TxString 0044  
        ConvertToString@temp 00AB                    stringcode 050A                  _UART_TxChar 0E84  
                 _OPTION_REG 0081                  lcdSend@dato 0075                  lcdSend@tipo 0074  
         ConvertToString@str 0064                     stringdir 050A                     stringtab 0500  
               ___aldiv@sign 005B                  lcdPrint@str 0046                 ___almod@sign 004D  
