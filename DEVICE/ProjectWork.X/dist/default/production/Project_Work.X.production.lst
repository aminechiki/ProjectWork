

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 14 16:32:53 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	maintext,global,class=CODE,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x7E,2
    52     0000                     
    53                           ; Version 2.40
    54                           ; Generated 17/11/2021 GMT
    55                           ; 
    56                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution. Publication is not required when
    70                           ;        this file is used in an embedded application.
    71                           ; 
    72                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    73                           ;        software without specific prior written permission.
    74                           ; 
    75                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    76                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    77                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    78                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    79                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    80                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    81                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    82                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    83                           ; 
    84                           ; 
    85                           ; Code-generator required, PIC16F877A Definitions
    86                           ; 
    87                           ; SFR Addresses
    88     0000                     	;# 
    89     0001                     	;# 
    90     0002                     	;# 
    91     0003                     	;# 
    92     0004                     	;# 
    93     0005                     	;# 
    94     0006                     	;# 
    95     0007                     	;# 
    96     0008                     	;# 
    97     0009                     	;# 
    98     000A                     	;# 
    99     000B                     	;# 
   100     000C                     	;# 
   101     000D                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0013                     	;# 
   109     0014                     	;# 
   110     0015                     	;# 
   111     0015                     	;# 
   112     0016                     	;# 
   113     0017                     	;# 
   114     0018                     	;# 
   115     0019                     	;# 
   116     001A                     	;# 
   117     001B                     	;# 
   118     001B                     	;# 
   119     001C                     	;# 
   120     001D                     	;# 
   121     001E                     	;# 
   122     001F                     	;# 
   123     0081                     	;# 
   124     0085                     	;# 
   125     0086                     	;# 
   126     0087                     	;# 
   127     0088                     	;# 
   128     0089                     	;# 
   129     008C                     	;# 
   130     008D                     	;# 
   131     008E                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     010F                     	;# 
   146     018C                     	;# 
   147     018D                     	;# 
   148     0000                     	;# 
   149     0001                     	;# 
   150     0002                     	;# 
   151     0003                     	;# 
   152     0004                     	;# 
   153     0005                     	;# 
   154     0006                     	;# 
   155     0007                     	;# 
   156     0008                     	;# 
   157     0009                     	;# 
   158     000A                     	;# 
   159     000B                     	;# 
   160     000C                     	;# 
   161     000D                     	;# 
   162     000E                     	;# 
   163     000E                     	;# 
   164     000F                     	;# 
   165     0010                     	;# 
   166     0011                     	;# 
   167     0012                     	;# 
   168     0013                     	;# 
   169     0014                     	;# 
   170     0015                     	;# 
   171     0015                     	;# 
   172     0016                     	;# 
   173     0017                     	;# 
   174     0018                     	;# 
   175     0019                     	;# 
   176     001A                     	;# 
   177     001B                     	;# 
   178     001B                     	;# 
   179     001C                     	;# 
   180     001D                     	;# 
   181     001E                     	;# 
   182     001F                     	;# 
   183     0081                     	;# 
   184     0085                     	;# 
   185     0086                     	;# 
   186     0087                     	;# 
   187     0088                     	;# 
   188     0089                     	;# 
   189     008C                     	;# 
   190     008D                     	;# 
   191     008E                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0094                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     010C                     	;# 
   203     010D                     	;# 
   204     010E                     	;# 
   205     010F                     	;# 
   206     018C                     	;# 
   207     018D                     	;# 
   208                           
   209                           	psect	idataCOMMON
   210     07FF                     __pidataCOMMON:
   211                           
   212                           ;initializer for _keypressed
   213     07FF  3463               	retlw	99
   214                           
   215                           	psect	idataBANK0
   216     07FB                     __pidataBANK0:
   217                           
   218                           ;initializer for _randx
   219     07FB  3401               	retlw	1
   220     07FC  3400               	retlw	0
   221     07FD  3400               	retlw	0
   222     07FE  3400               	retlw	0
   223                           
   224                           	psect	idataBANK1
   225     0003                     __pidataBANK1:
   226                           
   227                           ;initializer for _maxFail
   228     0003  3403               	retlw	3
   229                           
   230                           	psect	strings
   231     0600                     __pstrings:
   232     0600                     stringtab:
   233     0600                     __stringtab:
   234                           
   235                           ;	String table - string pointers are 1 byte each
   236     0600  1BFF               	btfsc	btemp+1,7
   237     0601  2E0A               	ljmp	stringcode
   238     0602  1383               	bcf	3,7
   239     0603  187F               	btfsc	btemp+1,0
   240     0604  1783               	bsf	3,7
   241     0605  0800               	movf	0,w
   242     0606  0A84               	incf	4,f
   243     0607  1903               	skipnz
   244     0608  0AFF               	incf	btemp+1,f
   245     0609  0008               	return
   246     060A                     stringcode:
   247     060A                     stringdir:
   248     060A  3006               	movlw	high stringdir
   249     060B  008A               	movwf	10
   250     060C  0804               	movf	4,w
   251     060D  0A84               	incf	4,f
   252     060E  0782               	addwf	2,f
   253     060F                     __stringbase:
   254     060F  3400               	retlw	0
   255     0610                     __end_of__stringtab:
   256     0610                     _keys:
   257     0610  342A               	retlw	42
   258     0611  3437               	retlw	55
   259     0612  3434               	retlw	52
   260     0613  3431               	retlw	49
   261     0614  3430               	retlw	48
   262     0615  3438               	retlw	56
   263     0616  3435               	retlw	53
   264     0617  3432               	retlw	50
   265     0618  3423               	retlw	35
   266     0619  3439               	retlw	57
   267     061A  3436               	retlw	54
   268     061B  3433               	retlw	51
   269     061C                     __end_of_keys:
   270     061C                     _rowMask:
   271     061C  3401               	retlw	1
   272     061D  3402               	retlw	2
   273     061E  3404               	retlw	4
   274     061F  3408               	retlw	8
   275     0620                     __end_of_rowMask:
   276     0620                     _colMask:
   277     0620  34FE               	retlw	254
   278     0621  34FD               	retlw	253
   279     0622  34FB               	retlw	251
   280     0623                     __end_of_colMask:
   281     001A                     _RCREG	set	26
   282     0019                     _TXREG	set	25
   283     000C                     _PIR1	set	12
   284     0018                     _RCSTA	set	24
   285     0006                     _PORTB	set	6
   286     0008                     _PORTD	set	8
   287     0009                     _PORTEbits	set	9
   288     0001                     _TMR0	set	1
   289     000B                     _INTCON	set	11
   290     005A                     _T0IF	set	90
   291     0065                     _RCIF	set	101
   292     008C                     _PIE1	set	140
   293     0099                     _SPBRG	set	153
   294     0098                     _TXSTA	set	152
   295     0087                     _TRISC	set	135
   296     0086                     _TRISB	set	134
   297     0089                     _TRISEbits	set	137
   298     0088                     _TRISD	set	136
   299     0081                     _OPTION_REG	set	129
   300     0623                     STR_4:
   301     0623  3449               	retlw	73	;'I'
   302     0624  346E               	retlw	110	;'n'
   303     0625  3473               	retlw	115	;'s'
   304     0626  3465               	retlw	101	;'e'
   305     0627  3472               	retlw	114	;'r'
   306     0628  3469               	retlw	105	;'i'
   307     0629  3473               	retlw	115	;'s'
   308     062A  3463               	retlw	99	;'c'
   309     062B  3469               	retlw	105	;'i'
   310     062C  3420               	retlw	32	;' '
   311     062D  3463               	retlw	99	;'c'
   312     062E  346F               	retlw	111	;'o'
   313     062F  3464               	retlw	100	;'d'
   314     0630  3469               	retlw	105	;'i'
   315     0631  3463               	retlw	99	;'c'
   316     0632  3465               	retlw	101	;'e'
   317     0633  3400               	retlw	0
   318     0634  3400               	retlw	0
   319     0635                     STR_12:
   320     0635  3452               	retlw	82	;'R'
   321     0636  3469               	retlw	105	;'i'
   322     0637  3467               	retlw	103	;'g'
   323     0638  3465               	retlw	101	;'e'
   324     0639  346E               	retlw	110	;'n'
   325     063A  3465               	retlw	101	;'e'
   326     063B  3472               	retlw	114	;'r'
   327     063C  3461               	retlw	97	;'a'
   328     063D  3472               	retlw	114	;'r'
   329     063E  3465               	retlw	101	;'e'
   330     063F  3420               	retlw	32	;' '
   331     0640  3463               	retlw	99	;'c'
   332     0641  346F               	retlw	111	;'o'
   333     0642  3464               	retlw	100	;'d'
   334     0643  3465               	retlw	101	;'e'
   335     0644  3400               	retlw	0
   336     0645  3400               	retlw	0
   337     0646                     STR_11:
   338     0646  3454               	retlw	84	;'T'
   339     0647  3465               	retlw	101	;'e'
   340     0648  346E               	retlw	110	;'n'
   341     0649  3474               	retlw	116	;'t'
   342     064A  342E               	retlw	46	;'.'
   343     064B  3420               	retlw	32	;' '
   344     064C  3465               	retlw	101	;'e'
   345     064D  3473               	retlw	115	;'s'
   346     064E  3461               	retlw	97	;'a'
   347     064F  3475               	retlw	117	;'u'
   348     0650  3472               	retlw	114	;'r'
   349     0651  3469               	retlw	105	;'i'
   350     0652  3474               	retlw	116	;'t'
   351     0653  3469               	retlw	105	;'i'
   352     0654  3400               	retlw	0
   353     0655  3400               	retlw	0
   354     0656                     STR_9:
   355     0656  3443               	retlw	67	;'C'
   356     0657  346F               	retlw	111	;'o'
   357     0658  3464               	retlw	100	;'d'
   358     0659  3469               	retlw	105	;'i'
   359     065A  3463               	retlw	99	;'c'
   360     065B  3465               	retlw	101	;'e'
   361     065C  3420               	retlw	32	;' '
   362     065D  3465               	retlw	101	;'e'
   363     065E  3472               	retlw	114	;'r'
   364     065F  3472               	retlw	114	;'r'
   365     0660  3461               	retlw	97	;'a'
   366     0661  3474               	retlw	116	;'t'
   367     0662  346F               	retlw	111	;'o'
   368     0663  3400               	retlw	0
   369     0664  3400               	retlw	0
   370     0665                     STR_5:
   371     0665  3454               	retlw	84	;'T'
   372     0666  3465               	retlw	101	;'e'
   373     0667  346E               	retlw	110	;'n'
   374     0668  3474               	retlw	116	;'t'
   375     0669  3461               	retlw	97	;'a'
   376     066A  3474               	retlw	116	;'t'
   377     066B  3469               	retlw	105	;'i'
   378     066C  3476               	retlw	118	;'v'
   379     066D  3469               	retlw	105	;'i'
   380     066E  343A               	retlw	58	;':'
   381     066F  3420               	retlw	32	;' '
   382     0670  3400               	retlw	0
   383     0671  3400               	retlw	0
   384     0672                     STR_6:
   385     0672  3442               	retlw	66	;'B'
   386     0673  3465               	retlw	101	;'e'
   387     0674  346E               	retlw	110	;'n'
   388     0675  3476               	retlw	118	;'v'
   389     0676  3465               	retlw	101	;'e'
   390     0677  346E               	retlw	110	;'n'
   391     0678  3475               	retlw	117	;'u'
   392     0679  3474               	retlw	116	;'t'
   393     067A  346F               	retlw	111	;'o'
   394     067B  3421               	retlw	33	;'!'
   395     067C  3400               	retlw	0
   396     067D  3400               	retlw	0
   397     067E                     STR_1:
   398     067E  3430               	retlw	48	;'0'
   399     067F  3430               	retlw	48	;'0'
   400     0680  3431               	retlw	49	;'1'
   401     0681  3400               	retlw	0
   402     0682  3400               	retlw	0
   403     0683                     STR_14:
   404     0683  3431               	retlw	49	;'1'
   405     0684  342F               	retlw	47	;'/'
   406     0685  3430               	retlw	48	;'0'
   407     0686  3400               	retlw	0
   408     0687                     STR_8:
   409     0687  3431               	retlw	49	;'1'
   410     0688  342F               	retlw	47	;'/'
   411     0689  3431               	retlw	49	;'1'
   412     068A  3400               	retlw	0
   413     0665                     
   414                           	psect	cinit
   415     0011                     start_initialization:	
   416                           ; #config settings
   417                           
   418     0011                     __initialization:
   419                           
   420                           ; Initialize objects allocated to BANK1
   421     0011  1683               	bsf	3,5	;RP0=1, select bank1
   422     0012  1303               	bcf	3,6	;RP1=0, select bank1
   423     0013  120A  118A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   424     0018  00B8               	movwf	__pdataBANK1& (0+127)
   425                           
   426                           ; Initialize objects allocated to BANK0
   427     0019  1283               	bcf	3,5	;RP0=0, select bank0
   428     001A  1303               	bcf	3,6	;RP1=0, select bank0
   429     001B  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   430     0020  00EA               	movwf	__pdataBANK0& (0+127)
   431     0021  120A  118A  27FC  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   432     0026  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   433     0027  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   434     002C  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   435     002D  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   436     0032  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   437                           
   438                           ; Initialize objects allocated to COMMON
   439     0033  120A  118A  27FF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   440     0038  00F9               	movwf	__pdataCOMMON& (0+127)
   441                           
   442                           ; Clear objects allocated to BANK3
   443     0039  1783               	bsf	3,7	;select IRP bank2
   444     003A  3090               	movlw	low __pbssBANK3
   445     003B  0084               	movwf	4
   446     003C  30C2               	movlw	low (__pbssBANK3+50)
   447     003D  120A  158A  24E8  120A  118A  	fcall	clear_ram0
   448                           
   449                           ; Clear objects allocated to BANK1
   450     0042  1383               	bcf	3,7	;select IRP bank0
   451     0043  30A0               	movlw	low __pbssBANK1
   452     0044  0084               	movwf	4
   453     0045  30B1               	movlw	low (__pbssBANK1+17)
   454     0046  120A  158A  24E8  120A  118A  	fcall	clear_ram0
   455                           
   456                           ; Clear objects allocated to BANK0
   457     004B  3020               	movlw	low __pbssBANK0
   458     004C  0084               	movwf	4
   459     004D  3046               	movlw	low (__pbssBANK0+38)
   460     004E  120A  158A  24E8  120A  118A  	fcall	clear_ram0
   461                           
   462                           ; Clear objects allocated to COMMON
   463     0053  01F6               	clrf	__pbssCOMMON& (0+127)
   464     0054  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   465     0055  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   466     0056                     end_of_initialization:	
   467                           ;End of C runtime variable initialization code
   468                           
   469     0056                     __end_of__initialization:
   470     0056  0183               	clrf	3
   471     0057  120A  118A  285A   	ljmp	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMMON
   474     0076                     __pbssCOMMON:
   475     0076                     _keyf:
   476     0076                     	ds	1
   477     0077                     _rowScan:
   478     0077                     	ds	1
   479     0078                     _colScan:
   480     0078                     	ds	1
   481                           
   482                           	psect	dataCOMMON
   483     0079                     __pdataCOMMON:
   484     0079                     _keypressed:
   485     0079                     	ds	1
   486                           
   487                           	psect	bssBANK0
   488     0020                     __pbssBANK0:
   489     0020                     _milliseconds:
   490     0020                     	ds	4
   491     0024                     _datoTastierino:
   492     0024                     	ds	17
   493     0035                     _datoSeriale:
   494     0035                     	ds	17
   495                           
   496                           	psect	dataBANK0
   497     006A                     __pdataBANK0:
   498     006A                     _randx:
   499     006A                     	ds	4
   500                           
   501                           	psect	bssBANK1
   502     00A0                     __pbssBANK1:
   503     00A0                     _old_num_rand:
   504     00A0                     	ds	2
   505     00A2                     _num_rand:
   506     00A2                     	ds	2
   507     00A4                     _fail:
   508     00A4                     	ds	1
   509     00A5                     _success:
   510     00A5                     	ds	1
   511     00A6                     _compare:
   512     00A6                     	ds	1
   513     00A7                     _recieved:
   514     00A7                     	ds	1
   515     00A8                     _old_iT:
   516     00A8                     	ds	1
   517     00A9                     _iT:
   518     00A9                     	ds	1
   519     00AA                     _iS:
   520     00AA                     	ds	1
   521     00AB                     _type:
   522     00AB                     	ds	1
   523     00AC                     _source:
   524     00AC                     	ds	1
   525     00AD                     _id_dest:
   526     00AD                     	ds	4
   527                           
   528                           	psect	dataBANK1
   529     00B8                     __pdataBANK1:
   530     00B8                     _maxFail:
   531     00B8                     	ds	1
   532                           
   533                           	psect	bssBANK3
   534     0190                     __pbssBANK3:
   535     0190                     _dato:
   536     0190                     	ds	50
   537                           
   538                           	psect	clrtext
   539     0CE8                     clear_ram0:	
   540                           ;	Called with FSR containing the base address, and
   541                           ;	W with the last address+1
   542                           
   543     0CE8  0064               	clrwdt	;clear the watchdog before getting into this loop
   544     0CE9                     clrloop0:
   545     0CE9  0180               	clrf	0	;clear RAM location pointed to by FSR
   546     0CEA  0A84               	incf	4,f	;increment pointer
   547     0CEB  0604               	xorwf	4,w	;XOR with final address
   548     0CEC  1903               	btfsc	3,2	;have we reached the end yet?
   549     0CED  3400               	retlw	0	;all done for this memory range, return
   550     0CEE  0604               	xorwf	4,w	;XOR again to restore value
   551     0CEF  2CE9               	goto	clrloop0	;do the next byte
   552                           
   553                           	psect	cstackBANK2
   554     0110                     __pcstackBANK2:
   555     0110                     main@num_rand_s:
   556                           
   557                           ; 16 bytes @ 0x0
   558     0110                     	ds	16
   559     0120                     main@packet_199:
   560                           
   561                           ; 14 bytes @ 0x10
   562     0120                     	ds	14
   563     012E                     main@packet_206:
   564                           
   565                           ; 14 bytes @ 0x1E
   566     012E                     	ds	14
   567     013C                     main@packet:
   568                           
   569                           ; 14 bytes @ 0x2C
   570     013C                     	ds	14
   571                           
   572                           	psect	cstackBANK1
   573     00B1                     __pcstackBANK1:
   574     00B1                     ConvertToString@temp:
   575                           
   576                           ; 2 bytes @ 0x0
   577     00B1                     	ds	2
   578     00B3                     ConvertToString@j:
   579                           
   580                           ; 2 bytes @ 0x2
   581     00B3                     	ds	2
   582     00B5                     ConvertToString@i:
   583                           
   584                           ; 2 bytes @ 0x4
   585     00B5                     	ds	2
   586     00B7                     ConvertToString@n_cifre:
   587                           
   588                           ; 1 bytes @ 0x6
   589     00B7                     	ds	1
   590                           
   591                           	psect	cstackCOMMON
   592     0070                     __pcstackCOMMON:
   593     0070                     ?_init_PIC:
   594     0070                     ?_read_NumPad:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_UART_TxString:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     ?_SplitPacket:	
   601                           ; 1 bytes @ 0x0
   602                           
   603     0070                     ?_init_LCD:	
   604                           ; 1 bytes @ 0x0
   605                           
   606     0070                     ?_init_NumPad:	
   607                           ; 1 bytes @ 0x0
   608                           
   609     0070                     ?_init_Timer0:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     ?_main:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     ?_UART_TxChar:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     ?_IRS:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     ??_IRS:	
   622                           ; 1 bytes @ 0x0
   623                           
   624                           
   625                           ; 1 bytes @ 0x0
   626     0070                     	ds	4
   627     0074                     ?_lcdSend:
   628     0074                     ??_init_NumPad:	
   629                           ; 1 bytes @ 0x4
   630                           
   631     0074                     ??_init_Timer0:	
   632                           ; 1 bytes @ 0x4
   633                           
   634     0074                     ?_strcopy:	
   635                           ; 1 bytes @ 0x4
   636                           
   637     0074                     ?_srand:	
   638                           ; 1 bytes @ 0x4
   639                           
   640     0074                     ??_UART_TxChar:	
   641                           ; 1 bytes @ 0x4
   642                           
   643     0074                     ??___wmul:	
   644                           ; 1 bytes @ 0x4
   645                           
   646     0074                     ??___lmul:	
   647                           ; 1 bytes @ 0x4
   648                           
   649     0074                     ??___almod:	
   650                           ; 1 bytes @ 0x4
   651                           
   652     0074                     ?_Length:	
   653                           ; 1 bytes @ 0x4
   654                           
   655     0074                     lcdSend@tipo:	
   656                           ; 2 bytes @ 0x4
   657                           
   658     0074                     strcopy@source:	
   659                           ; 1 bytes @ 0x4
   660                           
   661     0074                     Length@str:	
   662                           ; 1 bytes @ 0x4
   663                           
   664     0074                     ___wmul@product:	
   665                           ; 2 bytes @ 0x4
   666                           
   667     0074                     srand@x:	
   668                           ; 2 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672     0074                     	ds	1
   673     0075                     ??___awmod:
   674     0075                     lcdSend@dato:	
   675                           ; 1 bytes @ 0x5
   676                           
   677     0075                     UART_TxChar@ch:	
   678                           ; 1 bytes @ 0x5
   679                           
   680                           
   681                           ; 1 bytes @ 0x5
   682     0075                     	ds	1
   683     0076                     ??_init_PIC:
   684     0076                     ??_srand:	
   685                           ; 1 bytes @ 0x6
   686                           
   687     0076                     ??_main:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           	psect	cstackBANK0
   692     0046                     __pcstackBANK0:	
   693                           ; 1 bytes @ 0x6
   694                           
   695     0046                     ??_lcdSend:
   696     0046                     ??_UART_TxString:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0046                     ??_strcopy:	
   700                           ; 1 bytes @ 0x0
   701                           
   702     0046                     ??_Length:	
   703                           ; 1 bytes @ 0x0
   704                           
   705     0046                     ?___wmul:	
   706                           ; 1 bytes @ 0x0
   707                           
   708     0046                     ?___lmul:	
   709                           ; 2 bytes @ 0x0
   710                           
   711     0046                     ?___almod:	
   712                           ; 4 bytes @ 0x0
   713                           
   714     0046                     ___wmul@multiplier:	
   715                           ; 4 bytes @ 0x0
   716                           
   717     0046                     ___lmul@multiplier:	
   718                           ; 2 bytes @ 0x0
   719                           
   720     0046                     ___almod@divisor:	
   721                           ; 4 bytes @ 0x0
   722                           
   723                           
   724                           ; 4 bytes @ 0x0
   725     0046                     	ds	1
   726     0047                     UART_TxString@n:
   727                           
   728                           ; 2 bytes @ 0x1
   729     0047                     	ds	1
   730     0048                     ?_lcdPrint:
   731     0048                     ??_init_LCD:	
   732                           ; 1 bytes @ 0x2
   733                           
   734     0048                     lcdPrint@str:	
   735                           ; 1 bytes @ 0x2
   736                           
   737     0048                     ___wmul@multiplicand:	
   738                           ; 2 bytes @ 0x2
   739                           
   740                           
   741                           ; 2 bytes @ 0x2
   742     0048                     	ds	1
   743     0049                     strcopy@dest:
   744     0049                     UART_TxString@str:	
   745                           ; 1 bytes @ 0x3
   746                           
   747     0049                     Length@len:	
   748                           ; 1 bytes @ 0x3
   749                           
   750                           
   751                           ; 2 bytes @ 0x3
   752     0049                     	ds	1
   753     004A                     ??_lcdPrint:
   754     004A                     ?_pow:	
   755                           ; 1 bytes @ 0x4
   756                           
   757     004A                     pow@exp:	
   758                           ; 2 bytes @ 0x4
   759                           
   760     004A                     strcopy@n:	
   761                           ; 1 bytes @ 0x4
   762                           
   763     004A                     ___lmul@multiplicand:	
   764                           ; 2 bytes @ 0x4
   765                           
   766     004A                     ___almod@dividend:	
   767                           ; 4 bytes @ 0x4
   768                           
   769                           
   770                           ; 4 bytes @ 0x4
   771     004A                     	ds	1
   772     004B                     ?_CompareStrings:
   773     004B                     ?_strcat:	
   774                           ; 1 bytes @ 0x5
   775                           
   776     004B                     strcat@source:	
   777                           ; 2 bytes @ 0x5
   778                           
   779     004B                     CompareStrings@str2:	
   780                           ; 2 bytes @ 0x5
   781                           
   782                           
   783                           ; 2 bytes @ 0x5
   784     004B                     	ds	1
   785     004C                     ??_SplitPacket:
   786     004C                     ??_pow:	
   787                           ; 1 bytes @ 0x6
   788                           
   789                           
   790                           ; 1 bytes @ 0x6
   791     004C                     	ds	1
   792     004D                     ??_CompareStrings:
   793     004D                     ??_strcat:	
   794                           ; 1 bytes @ 0x7
   795                           
   796     004D                     lcdPrint@n:	
   797                           ; 1 bytes @ 0x7
   798                           
   799                           
   800                           ; 2 bytes @ 0x7
   801     004D                     	ds	1
   802     004E                     pow@b:
   803     004E                     ___almod@counter:	
   804                           ; 1 bytes @ 0x8
   805                           
   806     004E                     ___lmul@product:	
   807                           ; 1 bytes @ 0x8
   808                           
   809                           
   810                           ; 4 bytes @ 0x8
   811     004E                     	ds	1
   812     004F                     CompareStrings@str1:
   813     004F                     ___almod@sign:	
   814                           ; 1 bytes @ 0x9
   815                           
   816     004F                     pow@i:	
   817                           ; 1 bytes @ 0x9
   818                           
   819     004F                     SplitPacket@len:	
   820                           ; 2 bytes @ 0x9
   821                           
   822                           
   823                           ; 2 bytes @ 0x9
   824     004F                     	ds	1
   825     0050                     CompareStrings@i:
   826                           
   827                           ; 1 bytes @ 0xA
   828     0050                     	ds	1
   829     0051                     pow@n:
   830     0051                     SplitPacket@part:	
   831                           ; 2 bytes @ 0xB
   832                           
   833                           
   834                           ; 5 bytes @ 0xB
   835     0051                     	ds	1
   836     0052                     ?_rand:
   837     0052                     strcat@dest:	
   838                           ; 2 bytes @ 0xC
   839                           
   840                           
   841                           ; 1 bytes @ 0xC
   842     0052                     	ds	1
   843     0053                     ?___aldiv:
   844     0053                     strcat@n:	
   845                           ; 4 bytes @ 0xD
   846                           
   847     0053                     ___aldiv@divisor:	
   848                           ; 2 bytes @ 0xD
   849                           
   850                           
   851                           ; 4 bytes @ 0xD
   852     0053                     	ds	1
   853     0054                     ??_rand:
   854                           
   855                           ; 1 bytes @ 0xE
   856     0054                     	ds	1
   857     0055                     strcat@length_dest:
   858                           
   859                           ; 2 bytes @ 0xF
   860     0055                     	ds	1
   861     0056                     SplitPacket@section:
   862                           
   863                           ; 2 bytes @ 0x10
   864     0056                     	ds	1
   865     0057                     ?_ConcatToPacket:
   866     0057                     ConcatToPacket@str:	
   867                           ; 1 bytes @ 0x11
   868                           
   869     0057                     ___aldiv@dividend:	
   870                           ; 2 bytes @ 0x11
   871                           
   872                           
   873                           ; 4 bytes @ 0x11
   874     0057                     	ds	1
   875     0058                     SplitPacket@i_part:
   876                           
   877                           ; 2 bytes @ 0x12
   878     0058                     	ds	1
   879     0059                     ?___awmod:
   880     0059                     ConcatToPacket@delim:	
   881                           ; 2 bytes @ 0x13
   882                           
   883     0059                     ___awmod@divisor:	
   884                           ; 1 bytes @ 0x13
   885                           
   886                           
   887                           ; 2 bytes @ 0x13
   888     0059                     	ds	1
   889     005A                     ??_ConcatToPacket:
   890     005A                     SplitPacket@pkt:	
   891                           ; 1 bytes @ 0x14
   892                           
   893                           
   894                           ; 1 bytes @ 0x14
   895     005A                     	ds	1
   896     005B                     ??___aldiv:
   897     005B                     ConcatToPacket@packet_length:	
   898                           ; 1 bytes @ 0x15
   899                           
   900     005B                     SplitPacket@i:	
   901                           ; 2 bytes @ 0x15
   902                           
   903     005B                     ___awmod@dividend:	
   904                           ; 2 bytes @ 0x15
   905                           
   906                           
   907                           ; 2 bytes @ 0x15
   908     005B                     	ds	1
   909     005C                     ___aldiv@counter:
   910                           
   911                           ; 1 bytes @ 0x16
   912     005C                     	ds	1
   913     005D                     ConcatToPacket@pkt:
   914     005D                     ___aldiv@sign:	
   915                           ; 1 bytes @ 0x17
   916                           
   917     005D                     ___awmod@counter:	
   918                           ; 1 bytes @ 0x17
   919                           
   920                           
   921                           ; 1 bytes @ 0x17
   922     005D                     	ds	1
   923     005E                     ___awmod@sign:
   924     005E                     ___aldiv@quotient:	
   925                           ; 1 bytes @ 0x18
   926                           
   927                           
   928                           ; 4 bytes @ 0x18
   929     005E                     	ds	1
   930     005F                     ??_read_NumPad:
   931                           
   932                           ; 1 bytes @ 0x19
   933     005F                     	ds	3
   934     0062                     ?_ConvertToString:
   935     0062                     ?_UART_init:	
   936                           ; 1 bytes @ 0x1C
   937                           
   938     0062                     ConvertToString@n:	
   939                           ; 1 bytes @ 0x1C
   940                           
   941     0062                     UART_init@baudrate:	
   942                           ; 4 bytes @ 0x1C
   943                           
   944                           
   945                           ; 4 bytes @ 0x1C
   946     0062                     	ds	4
   947     0066                     ??_UART_init:
   948     0066                     ConvertToString@str:	
   949                           ; 1 bytes @ 0x20
   950                           
   951                           
   952                           ; 1 bytes @ 0x20
   953     0066                     	ds	1
   954     0067                     ??_ConvertToString:
   955                           
   956                           ; 1 bytes @ 0x21
   957     0067                     	ds	3
   958                           
   959                           	psect	maintext
   960     005A                     __pmaintext:	
   961 ;;
   962 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   963 ;;
   964 ;; *************** function _main *****************
   965 ;; Defined at:
   966 ;;		line 114 in file "main.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  packet         14   30[BANK2 ] unsigned char [14]
   971 ;;  packet         14   16[BANK2 ] unsigned char [14]
   972 ;;  num_rand_s     16    0[BANK2 ] unsigned char [16]
   973 ;;  packet         14   44[BANK2 ] unsigned char [14]
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : B00/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0      58
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0      58
   987 ;;Total ram usage:       58 bytes
   988 ;; Hardware stack levels required when called: 5
   989 ;; This function calls:
   990 ;;		_CompareStrings
   991 ;;		_ConcatToPacket
   992 ;;		_ConvertToString
   993 ;;		_SplitPacket
   994 ;;		_UART_TxString
   995 ;;		_init_PIC
   996 ;;		_lcdPrint
   997 ;;		_lcdSend
   998 ;;		_read_NumPad
   999 ;; This function is called by:
  1000 ;;		Startup code after reset
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004     005A                     _main:	
  1005                           ;psect for function _main
  1006                           
  1007     005A                     l2639:	
  1008                           ;incstack = 0
  1009                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1010                           
  1011                           
  1012                           ;main.c: 117:     init_PIC();
  1013     005A  120A  118A  25E1  120A  118A  	fcall	_init_PIC
  1014     005F                     l2641:
  1015                           
  1016                           ;main.c: 120:     {;main.c: 122:         read_NumPad();
  1017     005F  120A  118A  234B  120A  118A  	fcall	_read_NumPad
  1018     0064                     l2643:
  1019                           
  1020                           ;main.c: 126:         if(num_rand != old_num_rand)
  1021     0064  1683               	bsf	3,5	;RP0=1, select bank1
  1022     0065  1303               	bcf	3,6	;RP1=0, select bank1
  1023     0066  0821               	movf	(_old_num_rand+1)^(0+128),w
  1024     0067  0623               	xorwf	(_num_rand+1)^(0+128),w
  1025     0068  1D03               	skipz
  1026     0069  286C               	goto	u2485
  1027     006A  0820               	movf	_old_num_rand^(0+128),w
  1028     006B  0622               	xorwf	_num_rand^(0+128),w
  1029     006C                     u2485:
  1030     006C  1903               	skipnz
  1031     006D  286F               	goto	u2481
  1032     006E  2870               	goto	u2480
  1033     006F                     u2481:
  1034     006F  28CA               	goto	l2669
  1035     0070                     u2480:
  1036     0070                     l2645:
  1037                           
  1038                           ;main.c: 127:         {;main.c: 129:             lcdSend(0x01, 0);
  1039     0070  01F4               	clrf	lcdSend@tipo
  1040     0071  3001               	movlw	1
  1041     0072  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1042     0077                     l2647:
  1043                           
  1044                           ;main.c: 131:             char num_rand_s[16];;main.c: 132:             ConvertToString(
      +                          num_rand, num_rand_s);
  1045     0077  1683               	bsf	3,5	;RP0=1, select bank1
  1046     0078  1303               	bcf	3,6	;RP1=0, select bank1
  1047     0079  0822               	movf	_num_rand^(0+128),w
  1048     007A  1283               	bcf	3,5	;RP0=0, select bank0
  1049     007B  1303               	bcf	3,6	;RP1=0, select bank0
  1050     007C  00E2               	movwf	ConvertToString@n
  1051     007D  1683               	bsf	3,5	;RP0=1, select bank1
  1052     007E  1303               	bcf	3,6	;RP1=0, select bank1
  1053     007F  0823               	movf	(_num_rand+1)^(0+128),w
  1054     0080  1283               	bcf	3,5	;RP0=0, select bank0
  1055     0081  1303               	bcf	3,6	;RP1=0, select bank0
  1056     0082  00E3               	movwf	ConvertToString@n+1
  1057     0083  3000               	movlw	0
  1058     0084  1BE3               	btfsc	ConvertToString@n+1,7
  1059     0085  30FF               	movlw	255
  1060     0086  00E4               	movwf	ConvertToString@n+2
  1061     0087  00E5               	movwf	ConvertToString@n+3
  1062     0088  3010               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
  1063     0089  00E6               	movwf	ConvertToString@str
  1064     008A  120A  118A  2241  120A  118A  	fcall	_ConvertToString
  1065     008F                     l2649:
  1066                           
  1067                           ;main.c: 133:             lcdPrint(num_rand_s);
  1068     008F  3010               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
  1069     0090  1283               	bcf	3,5	;RP0=0, select bank0
  1070     0091  1303               	bcf	3,6	;RP1=0, select bank0
  1071     0092  00C8               	movwf	lcdPrint@str
  1072     0093  3001               	movlw	1
  1073     0094  00C9               	movwf	lcdPrint@str+1
  1074     0095  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1075     009A                     l2651:
  1076                           
  1077                           ;main.c: 144:             char packet[14];;main.c: 146:             packet[0] = '0';
  1078     009A  3030               	movlw	48
  1079     009B  1283               	bcf	3,5	;RP0=0, select bank2
  1080     009C  1703               	bsf	3,6	;RP1=1, select bank2
  1081     009D  00BC               	movwf	main@packet^(0+256)
  1082     009E                     l2653:
  1083                           
  1084                           ;main.c: 147:             packet[1] = '/';
  1085     009E  302F               	movlw	47
  1086     009F  00BD               	movwf	(main@packet^(0+256)+1)
  1087     00A0                     l2655:
  1088                           
  1089                           ;main.c: 148:             packet[2] = '\0';
  1090     00A0  01BE               	clrf	(main@packet^(0+256)+2)
  1091     00A1                     l2657:
  1092                           
  1093                           ;main.c: 150:             ConcatToPacket(packet, "001\0", '/');
  1094     00A1  306F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1095     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1096     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1097     00A4  00D7               	movwf	ConcatToPacket@str
  1098     00A5  3080               	movlw	128
  1099     00A6  00D8               	movwf	ConcatToPacket@str+1
  1100     00A7  302F               	movlw	47
  1101     00A8  00D9               	movwf	ConcatToPacket@delim
  1102     00A9  303C               	movlw	(low (main@packet| (0+256)))& (0+255)
  1103     00AA  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1104     00AF                     l2659:
  1105                           
  1106                           ;main.c: 152:             packet[6] = '0';
  1107     00AF  3030               	movlw	48
  1108     00B0  1283               	bcf	3,5	;RP0=0, select bank2
  1109     00B1  1703               	bsf	3,6	;RP1=1, select bank2
  1110     00B2  00C2               	movwf	(main@packet^(0+256)+6)
  1111     00B3                     l2661:
  1112                           
  1113                           ;main.c: 153:             packet[7] = '/';
  1114     00B3  302F               	movlw	47
  1115     00B4  00C3               	movwf	(main@packet^(0+256)+7)
  1116     00B5                     l2663:
  1117                           
  1118                           ;main.c: 154:             packet[8] = '\0';
  1119     00B5  01C4               	clrf	(main@packet^(0+256)+8)
  1120     00B6                     l2665:
  1121                           
  1122                           ;main.c: 156:             ConcatToPacket(packet, num_rand_s, ' ');
  1123     00B6  3010               	movlw	(low (main@num_rand_s| (0+256)))& (0+255)
  1124     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1125     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1126     00B9  00D7               	movwf	ConcatToPacket@str
  1127     00BA  3001               	movlw	1
  1128     00BB  00D8               	movwf	ConcatToPacket@str+1
  1129     00BC  3020               	movlw	32
  1130     00BD  00D9               	movwf	ConcatToPacket@delim
  1131     00BE  303C               	movlw	(low (main@packet| (0+256)))& (0+255)
  1132     00BF  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1133     00C4                     l2667:
  1134                           
  1135                           ;main.c: 158:             UART_TxString(packet);
  1136     00C4  303C               	movlw	(low (main@packet| (0+256)))& (0+255)
  1137     00C5  120A  158A  2527  120A  118A  	fcall	_UART_TxString
  1138     00CA                     l2669:
  1139                           
  1140                           ;main.c: 161:         old_num_rand = num_rand;
  1141     00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1142     00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1143     00CC  0823               	movf	(_num_rand+1)^(0+128),w
  1144     00CD  00A1               	movwf	(_old_num_rand+1)^(0+128)
  1145     00CE  0822               	movf	_num_rand^(0+128),w
  1146     00CF  00A0               	movwf	_old_num_rand^(0+128)
  1147     00D0                     l2671:
  1148                           
  1149                           ;main.c: 164:         if(recieved)
  1150     00D0  0827               	movf	_recieved^(0+128),w
  1151     00D1  1903               	btfsc	3,2
  1152     00D2  28D4               	goto	u2491
  1153     00D3  28D5               	goto	u2490
  1154     00D4                     u2491:
  1155     00D4  2933               	goto	l2699
  1156     00D5                     u2490:
  1157     00D5                     l2673:
  1158                           
  1159                           ;main.c: 165:         {;main.c: 166:             SplitPacket(dato);
  1160     00D5  3090               	movlw	(low (_dato| (0+256)))& (0+255)
  1161     00D6  120A  118A  244C  120A  118A  	fcall	_SplitPacket
  1162     00DB                     l2675:
  1163                           
  1164                           ;main.c: 168:             if(source == '1' && CompareStrings(id_dest, "001\0") && type =
      +                          = '0')
  1165     00DB  3031               	movlw	49
  1166     00DC  1683               	bsf	3,5	;RP0=1, select bank1
  1167     00DD  1303               	bcf	3,6	;RP1=0, select bank1
  1168     00DE  062C               	xorwf	_source^(0+128),w
  1169     00DF  1D03               	btfss	3,2
  1170     00E0  28E2               	goto	u2501
  1171     00E1  28E3               	goto	u2500
  1172     00E2                     u2501:
  1173     00E2  292F               	goto	l2695
  1174     00E3                     u2500:
  1175     00E3                     l2677:
  1176     00E3  306F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1177     00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1178     00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1179     00E6  00CB               	movwf	CompareStrings@str2
  1180     00E7  3080               	movlw	128
  1181     00E8  00CC               	movwf	CompareStrings@str2+1
  1182     00E9  30AD               	movlw	(low (_id_dest| 0))& (0+255)
  1183     00EA  120A  158A  27AA  120A  118A  	fcall	_CompareStrings
  1184     00EF  3A00               	xorlw	0
  1185     00F0  1903               	skipnz
  1186     00F1  28F3               	goto	u2511
  1187     00F2  28F4               	goto	u2510
  1188     00F3                     u2511:
  1189     00F3  292F               	goto	l2695
  1190     00F4                     u2510:
  1191     00F4                     l2679:
  1192     00F4  3030               	movlw	48
  1193     00F5  1683               	bsf	3,5	;RP0=1, select bank1
  1194     00F6  1303               	bcf	3,6	;RP1=0, select bank1
  1195     00F7  062B               	xorwf	_type^(0+128),w
  1196     00F8  1D03               	btfss	3,2
  1197     00F9  28FB               	goto	u2521
  1198     00FA  28FC               	goto	u2520
  1199     00FB                     u2521:
  1200     00FB  292F               	goto	l2695
  1201     00FC                     u2520:
  1202     00FC                     l2681:
  1203                           
  1204                           ;main.c: 169:             {;main.c: 171:                 compare = 1;
  1205     00FC  01A6               	clrf	_compare^(0+128)
  1206     00FD  0AA6               	incf	_compare^(0+128),f
  1207     00FE                     l2683:
  1208                           
  1209                           ;main.c: 173:                 maxFail = 3;
  1210     00FE  3003               	movlw	3
  1211     00FF  00B8               	movwf	_maxFail^(0+128)
  1212     0100                     l2685:
  1213                           
  1214                           ;main.c: 175:                 lcdSend(0x01, 0);
  1215     0100  01F4               	clrf	lcdSend@tipo
  1216     0101  3001               	movlw	1
  1217     0102  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1218     0107                     l2687:
  1219                           
  1220                           ;main.c: 176:                 lcdPrint("Inserisci codice\0");
  1221     0107  3014               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1222     0108  1283               	bcf	3,5	;RP0=0, select bank0
  1223     0109  1303               	bcf	3,6	;RP1=0, select bank0
  1224     010A  00C8               	movwf	lcdPrint@str
  1225     010B  3080               	movlw	128
  1226     010C  00C9               	movwf	lcdPrint@str+1
  1227     010D  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1228     0112                     l2689:
  1229                           
  1230                           ;main.c: 177:                 lcdSend(0xC0, 0);
  1231     0112  01F4               	clrf	lcdSend@tipo
  1232     0113  30C0               	movlw	192
  1233     0114  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1234     0119                     l2691:
  1235                           
  1236                           ;main.c: 178:                 lcdPrint("Tentativi: \0");
  1237     0119  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1238     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1239     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1240     011C  00C8               	movwf	lcdPrint@str
  1241     011D  3080               	movlw	128
  1242     011E  00C9               	movwf	lcdPrint@str+1
  1243     011F  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1244     0124                     l2693:
  1245                           
  1246                           ;main.c: 179:                 lcdSend(maxFail + '0', 1);
  1247     0124  01F4               	clrf	lcdSend@tipo
  1248     0125  0AF4               	incf	lcdSend@tipo,f
  1249     0126  1683               	bsf	3,5	;RP0=1, select bank1
  1250     0127  1303               	bcf	3,6	;RP1=0, select bank1
  1251     0128  0838               	movf	_maxFail^(0+128),w
  1252     0129  3E30               	addlw	48
  1253     012A  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1254     012F                     l2695:
  1255                           
  1256                           ;main.c: 181:             recieved = 0;
  1257     012F  1683               	bsf	3,5	;RP0=1, select bank1
  1258     0130  1303               	bcf	3,6	;RP1=0, select bank1
  1259     0131  01A7               	clrf	_recieved^(0+128)
  1260     0132                     l2697:
  1261                           
  1262                           ;main.c: 182:             iS = 0;
  1263     0132  01AA               	clrf	_iS^(0+128)
  1264     0133                     l2699:
  1265                           
  1266                           ;main.c: 187:         if(success)
  1267     0133  0825               	movf	_success^(0+128),w
  1268     0134  1903               	btfsc	3,2
  1269     0135  2937               	goto	u2531
  1270     0136  2938               	goto	u2530
  1271     0137                     u2531:
  1272     0137  297C               	goto	l2725
  1273     0138                     u2530:
  1274     0138                     l2701:
  1275                           
  1276                           ;main.c: 188:         {;main.c: 190:             lcdSend(0x01, 0);
  1277     0138  01F4               	clrf	lcdSend@tipo
  1278     0139  3001               	movlw	1
  1279     013A  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1280     013F                     l2703:
  1281                           
  1282                           ;main.c: 191:             lcdPrint("Benvenuto!\0");
  1283     013F  3063               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1284     0140  1283               	bcf	3,5	;RP0=0, select bank0
  1285     0141  1303               	bcf	3,6	;RP1=0, select bank0
  1286     0142  00C8               	movwf	lcdPrint@str
  1287     0143  3080               	movlw	128
  1288     0144  00C9               	movwf	lcdPrint@str+1
  1289     0145  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1290     014A                     l2705:
  1291                           
  1292                           ;main.c: 192:             iT = old_iT = 0;
  1293     014A  1683               	bsf	3,5	;RP0=1, select bank1
  1294     014B  1303               	bcf	3,6	;RP1=0, select bank1
  1295     014C  01A8               	clrf	_old_iT^(0+128)
  1296     014D  01A9               	clrf	_iT^(0+128)
  1297     014E                     l2707:
  1298                           
  1299                           ;main.c: 193:             success = 0;
  1300     014E  01A5               	clrf	_success^(0+128)
  1301     014F                     l2709:
  1302                           
  1303                           ;main.c: 195:             compare = 0;
  1304     014F  01A6               	clrf	_compare^(0+128)
  1305     0150                     l2711:
  1306                           
  1307                           ;main.c: 196:             maxFail = 3;
  1308     0150  3003               	movlw	3
  1309     0151  00B8               	movwf	_maxFail^(0+128)
  1310     0152                     l2713:
  1311                           
  1312                           ;main.c: 198:             char packet[14];;main.c: 199:             packet[0] = '0';
  1313     0152  3030               	movlw	48
  1314     0153  1283               	bcf	3,5	;RP0=0, select bank2
  1315     0154  1703               	bsf	3,6	;RP1=1, select bank2
  1316     0155  00A0               	movwf	main@packet_199^(0+256)
  1317     0156                     l2715:
  1318                           
  1319                           ;main.c: 200:             packet[1] = '/';
  1320     0156  302F               	movlw	47
  1321     0157  00A1               	movwf	(main@packet_199^(0+256)+1)
  1322     0158                     l2717:
  1323                           
  1324                           ;main.c: 201:             packet[2] = '\0';
  1325     0158  01A2               	clrf	(main@packet_199^(0+256)+2)
  1326     0159                     l2719:
  1327                           
  1328                           ;main.c: 202:             ConcatToPacket(packet, "001\0", '/');
  1329     0159  306F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1330     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1331     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1332     015C  00D7               	movwf	ConcatToPacket@str
  1333     015D  3080               	movlw	128
  1334     015E  00D8               	movwf	ConcatToPacket@str+1
  1335     015F  302F               	movlw	47
  1336     0160  00D9               	movwf	ConcatToPacket@delim
  1337     0161  3020               	movlw	(low (main@packet_199| (0+256)))& (0+255)
  1338     0162  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1339     0167                     l2721:
  1340                           
  1341                           ;main.c: 203:             ConcatToPacket(packet, "1/1", ' ');
  1342     0167  3078               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1343     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1344     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1345     016A  00D7               	movwf	ConcatToPacket@str
  1346     016B  3080               	movlw	128
  1347     016C  00D8               	movwf	ConcatToPacket@str+1
  1348     016D  3020               	movlw	32
  1349     016E  00D9               	movwf	ConcatToPacket@delim
  1350     016F  3020               	movlw	(low (main@packet_199| (0+256)))& (0+255)
  1351     0170  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1352     0175                     l2723:
  1353                           
  1354                           ;main.c: 204:             UART_TxString(packet);
  1355     0175  3020               	movlw	(low (main@packet_199| (0+256)))& (0+255)
  1356     0176  120A  158A  2527  120A  118A  	fcall	_UART_TxString
  1357                           
  1358                           ;main.c: 205:         }
  1359     017B  2A1A               	goto	l2769
  1360     017C                     l2725:
  1361     017C  0838               	movf	_maxFail^(0+128),w
  1362     017D  1903               	btfsc	3,2
  1363     017E  2980               	goto	u2541
  1364     017F  2981               	goto	u2540
  1365     0180                     u2541:
  1366     0180  29C1               	goto	l2743
  1367     0181                     u2540:
  1368     0181                     l2727:
  1369     0181  3003               	movlw	3
  1370     0182  0238               	subwf	_maxFail^(0+128),w
  1371     0183  1803               	skipnc
  1372     0184  2986               	goto	u2551
  1373     0185  2987               	goto	u2550
  1374     0186                     u2551:
  1375     0186  29C1               	goto	l2743
  1376     0187                     u2550:
  1377     0187                     l2729:
  1378     0187  0824               	movf	_fail^(0+128),w
  1379     0188  1903               	btfsc	3,2
  1380     0189  298B               	goto	u2561
  1381     018A  298C               	goto	u2560
  1382     018B                     u2561:
  1383     018B  29C1               	goto	l2743
  1384     018C                     u2560:
  1385     018C                     l2731:
  1386                           
  1387                           ;main.c: 208:         {;main.c: 210:             lcdSend(0x01, 0);
  1388     018C  01F4               	clrf	lcdSend@tipo
  1389     018D  3001               	movlw	1
  1390     018E  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1391     0193                     l2733:
  1392                           
  1393                           ;main.c: 211:             lcdPrint("Codice errato\0");
  1394     0193  3047               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1395     0194  1283               	bcf	3,5	;RP0=0, select bank0
  1396     0195  1303               	bcf	3,6	;RP1=0, select bank0
  1397     0196  00C8               	movwf	lcdPrint@str
  1398     0197  3080               	movlw	128
  1399     0198  00C9               	movwf	lcdPrint@str+1
  1400     0199  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1401     019E                     l2735:
  1402                           
  1403                           ;main.c: 212:             lcdSend(0xC0, 0);
  1404     019E  01F4               	clrf	lcdSend@tipo
  1405     019F  30C0               	movlw	192
  1406     01A0  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1407                           
  1408                           ;main.c: 213:             lcdPrint("Tentativi: \0");
  1409     01A5  3056               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1410     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1411     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1412     01A8  00C8               	movwf	lcdPrint@str
  1413     01A9  3080               	movlw	128
  1414     01AA  00C9               	movwf	lcdPrint@str+1
  1415     01AB  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1416     01B0                     l2737:
  1417                           
  1418                           ;main.c: 214:             lcdSend(maxFail + '0', 1);
  1419     01B0  01F4               	clrf	lcdSend@tipo
  1420     01B1  0AF4               	incf	lcdSend@tipo,f
  1421     01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1422     01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1423     01B4  0838               	movf	_maxFail^(0+128),w
  1424     01B5  3E30               	addlw	48
  1425     01B6  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1426     01BB                     l2739:
  1427                           
  1428                           ;main.c: 215:             iT = old_iT = 0;
  1429     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1430     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1431     01BD  01A8               	clrf	_old_iT^(0+128)
  1432     01BE  01A9               	clrf	_iT^(0+128)
  1433     01BF                     l2741:
  1434                           
  1435                           ;main.c: 216:             fail = 0;
  1436     01BF  01A4               	clrf	_fail^(0+128)
  1437                           
  1438                           ;main.c: 217:         }
  1439     01C0  2A1A               	goto	l2769
  1440     01C1                     l2743:
  1441     01C1  0838               	movf	_maxFail^(0+128),w
  1442     01C2  1D03               	btfss	3,2
  1443     01C3  29C5               	goto	u2571
  1444     01C4  29C6               	goto	u2570
  1445     01C5                     u2571:
  1446     01C5  2A1A               	goto	l2769
  1447     01C6                     u2570:
  1448     01C6                     l2745:
  1449                           
  1450                           ;main.c: 220:         {;main.c: 222:             lcdSend(0x01, 0);
  1451     01C6  01F4               	clrf	lcdSend@tipo
  1452     01C7  3001               	movlw	1
  1453     01C8  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1454     01CD                     l2747:
  1455                           
  1456                           ;main.c: 223:             lcdPrint("Tent. esauriti\0");
  1457     01CD  3037               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1458     01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1459     01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1460     01D0  00C8               	movwf	lcdPrint@str
  1461     01D1  3080               	movlw	128
  1462     01D2  00C9               	movwf	lcdPrint@str+1
  1463     01D3  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1464     01D8                     l2749:
  1465                           
  1466                           ;main.c: 224:             lcdSend(0xC0, 0);
  1467     01D8  01F4               	clrf	lcdSend@tipo
  1468     01D9  30C0               	movlw	192
  1469     01DA  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1470                           
  1471                           ;main.c: 225:             lcdPrint("Rigenerare code\0");
  1472     01DF  3026               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1473     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1474     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1475     01E2  00C8               	movwf	lcdPrint@str
  1476     01E3  3080               	movlw	128
  1477     01E4  00C9               	movwf	lcdPrint@str+1
  1478     01E5  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1479     01EA                     l2751:
  1480                           
  1481                           ;main.c: 227:             maxFail = 3;
  1482     01EA  3003               	movlw	3
  1483     01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1484     01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1485     01ED  00B8               	movwf	_maxFail^(0+128)
  1486     01EE                     l2753:
  1487                           
  1488                           ;main.c: 228:             iT = old_iT = 0;
  1489     01EE  01A8               	clrf	_old_iT^(0+128)
  1490     01EF  01A9               	clrf	_iT^(0+128)
  1491     01F0                     l2755:
  1492                           
  1493                           ;main.c: 229:             compare = 0;
  1494     01F0  01A6               	clrf	_compare^(0+128)
  1495     01F1                     l2757:
  1496                           
  1497                           ;main.c: 231:             char packet[14];;main.c: 232:             packet[0] = '0';
  1498     01F1  3030               	movlw	48
  1499     01F2  1283               	bcf	3,5	;RP0=0, select bank2
  1500     01F3  1703               	bsf	3,6	;RP1=1, select bank2
  1501     01F4  00AE               	movwf	main@packet_206^(0+256)
  1502     01F5                     l2759:
  1503                           
  1504                           ;main.c: 233:             packet[1] = '/';
  1505     01F5  302F               	movlw	47
  1506     01F6  00AF               	movwf	(main@packet_206^(0+256)+1)
  1507     01F7                     l2761:
  1508                           
  1509                           ;main.c: 234:             packet[2] = '\0';
  1510     01F7  01B0               	clrf	(main@packet_206^(0+256)+2)
  1511     01F8                     l2763:
  1512                           
  1513                           ;main.c: 235:             ConcatToPacket(packet, "001\0", '/');
  1514     01F8  306F               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1515     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1516     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1517     01FB  00D7               	movwf	ConcatToPacket@str
  1518     01FC  3080               	movlw	128
  1519     01FD  00D8               	movwf	ConcatToPacket@str+1
  1520     01FE  302F               	movlw	47
  1521     01FF  00D9               	movwf	ConcatToPacket@delim
  1522     0200  302E               	movlw	(low (main@packet_206| (0+256)))& (0+255)
  1523     0201  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1524     0206                     l2765:
  1525                           
  1526                           ;main.c: 236:             ConcatToPacket(packet, "1/0", ' ');
  1527     0206  3074               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1528     0207  1283               	bcf	3,5	;RP0=0, select bank0
  1529     0208  1303               	bcf	3,6	;RP1=0, select bank0
  1530     0209  00D7               	movwf	ConcatToPacket@str
  1531     020A  3080               	movlw	128
  1532     020B  00D8               	movwf	ConcatToPacket@str+1
  1533     020C  3020               	movlw	32
  1534     020D  00D9               	movwf	ConcatToPacket@delim
  1535     020E  302E               	movlw	(low (main@packet_206| (0+256)))& (0+255)
  1536     020F  120A  158A  2760  120A  118A  	fcall	_ConcatToPacket
  1537     0214                     l2767:
  1538                           
  1539                           ;main.c: 237:             UART_TxString(packet);
  1540     0214  302E               	movlw	(low (main@packet_206| (0+256)))& (0+255)
  1541     0215  120A  158A  2527  120A  118A  	fcall	_UART_TxString
  1542     021A                     l2769:
  1543                           
  1544                           ;main.c: 241:         if(iT != old_iT && compare)
  1545     021A  1683               	bsf	3,5	;RP0=1, select bank1
  1546     021B  1303               	bcf	3,6	;RP1=0, select bank1
  1547     021C  0829               	movf	_iT^(0+128),w
  1548     021D  0628               	xorwf	_old_iT^(0+128),w
  1549     021E  1903               	skipnz
  1550     021F  2A21               	goto	u2581
  1551     0220  2A22               	goto	u2580
  1552     0221                     u2581:
  1553     0221  2A39               	goto	l2777
  1554     0222                     u2580:
  1555     0222                     l2771:
  1556     0222  0826               	movf	_compare^(0+128),w
  1557     0223  1903               	btfsc	3,2
  1558     0224  2A26               	goto	u2591
  1559     0225  2A27               	goto	u2590
  1560     0226                     u2591:
  1561     0226  2A39               	goto	l2777
  1562     0227                     u2590:
  1563     0227                     l2773:
  1564                           
  1565                           ;main.c: 242:         {;main.c: 244:             lcdSend(0x01, 0);
  1566     0227  01F4               	clrf	lcdSend@tipo
  1567     0228  3001               	movlw	1
  1568     0229  120A  158A  2573  120A  118A  	fcall	_lcdSend
  1569     022E                     l2775:
  1570                           
  1571                           ;main.c: 245:             lcdPrint(datoTastierino);
  1572     022E  3024               	movlw	(low (_datoTastierino| 0))& (0+255)
  1573     022F  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0230  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0231  00C8               	movwf	lcdPrint@str
  1576     0232  3000               	movlw	0
  1577     0233  00C9               	movwf	lcdPrint@str+1
  1578     0234  120A  158A  2718  120A  118A  	fcall	_lcdPrint
  1579     0239                     l2777:
  1580                           
  1581                           ;main.c: 248:         old_iT = iT;
  1582     0239  1683               	bsf	3,5	;RP0=1, select bank1
  1583     023A  1303               	bcf	3,6	;RP1=0, select bank1
  1584     023B  0829               	movf	_iT^(0+128),w
  1585     023C  00A8               	movwf	_old_iT^(0+128)
  1586     023D  285F               	goto	l2641
  1587     023E  120A  118A  280E   	ljmp	start
  1588     0241                     __end_of_main:
  1589                           
  1590                           	psect	text1
  1591     034B                     __ptext1:	
  1592 ;; *************** function _read_NumPad *****************
  1593 ;; Defined at:
  1594 ;;		line 507 in file "main.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      void 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       2       0       0       0
  1611 ;;      Totals:         0       2       0       0       0
  1612 ;;Total ram usage:        2 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		_CompareStrings
  1617 ;;		___awmod
  1618 ;;		_rand
  1619 ;;		_srand
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625     034B                     _read_NumPad:	
  1626                           ;psect for function _read_NumPad
  1627                           
  1628     034B                     l2469:	
  1629                           ;incstack = 0
  1630                           ; Regs used in _read_NumPad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1631                           
  1632                           
  1633                           ;main.c: 510:     TRISD |= 0x0F;
  1634     034B  300F               	movlw	15
  1635     034C  1283               	bcf	3,5	;RP0=0, select bank0
  1636     034D  1303               	bcf	3,6	;RP1=0, select bank0
  1637     034E  00DF               	movwf	??_read_NumPad
  1638     034F  085F               	movf	??_read_NumPad,w
  1639     0350  1683               	bsf	3,5	;RP0=1, select bank1
  1640     0351  1303               	bcf	3,6	;RP1=0, select bank1
  1641     0352  0488               	iorwf	8,f	;volatile
  1642     0353                     l2471:
  1643                           
  1644                           ;main.c: 511:     for(colScan = 0; colScan < 3; colScan++)
  1645     0353  01F8               	clrf	_colScan
  1646     0354                     l2477:
  1647                           
  1648                           ;main.c: 512:     {;main.c: 515:         PORTB |= 0x07;
  1649     0354  3007               	movlw	7
  1650     0355  1283               	bcf	3,5	;RP0=0, select bank0
  1651     0356  00DF               	movwf	??_read_NumPad
  1652     0357  085F               	movf	??_read_NumPad,w
  1653     0358  0486               	iorwf	6,f	;volatile
  1654     0359                     l2479:
  1655                           
  1656                           ;main.c: 517:         PORTB &= colMask[colScan];
  1657     0359  0878               	movf	_colScan,w
  1658     035A  3E11               	addlw	low ((_colMask-__stringbase)| (0+32768))
  1659     035B  0084               	movwf	4
  1660     035C  120A  118A  260A  120A  118A  	fcall	stringdir
  1661     0361  00DF               	movwf	??_read_NumPad
  1662     0362  085F               	movf	??_read_NumPad,w
  1663     0363  0586               	andwf	6,f	;volatile
  1664     0364                     l2481:
  1665                           
  1666                           ;main.c: 519:         for(rowScan = 0; rowScan < 4; rowScan++)
  1667     0364  01F7               	clrf	_rowScan
  1668     0365                     l2487:
  1669                           
  1670                           ;main.c: 520:         {;main.c: 522:             if(!(PORTD & rowMask[rowScan]))
  1671     0365  0877               	movf	_rowScan,w
  1672     0366  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  1673     0367  0084               	movwf	4
  1674     0368  120A  118A  260A  120A  118A  	fcall	stringdir
  1675     036D  0508               	andwf	8,w	;volatile
  1676     036E  1D03               	btfss	3,2
  1677     036F  2B71               	goto	u2251
  1678     0370  2B72               	goto	u2250
  1679     0371                     u2251:
  1680     0371  2B99               	goto	l230
  1681     0372                     u2250:
  1682     0372                     l2489:
  1683                           
  1684                           ;main.c: 523:             {;main.c: 525:                 _delay((unsigned long)((5)*(200
      +                          00000/4000.0)));
  1685     0372  3021               	movlw	33
  1686     0373  1283               	bcf	3,5	;RP0=0, select bank0
  1687     0374  1303               	bcf	3,6	;RP1=0, select bank0
  1688     0375  00E0               	movwf	??_read_NumPad+1
  1689     0376  3075               	movlw	117
  1690     0377  00DF               	movwf	??_read_NumPad
  1691     0378                     u2607:
  1692     0378  0BDF               	decfsz	??_read_NumPad,f
  1693     0379  2B78               	goto	u2607
  1694     037A  0BE0               	decfsz	??_read_NumPad+1,f
  1695     037B  2B78               	goto	u2607
  1696     037C  2B7D               	nop2
  1697     037D                     l2491:
  1698                           
  1699                           ;main.c: 526:                 if(!(PORTD & rowMask[rowScan]))
  1700     037D  0877               	movf	_rowScan,w
  1701     037E  3E0D               	addlw	low ((_rowMask-__stringbase)| (0+32768))
  1702     037F  0084               	movwf	4
  1703     0380  120A  118A  260A  120A  118A  	fcall	stringdir
  1704     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1705     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1706     0387  0508               	andwf	8,w	;volatile
  1707     0388  1D03               	btfss	3,2
  1708     0389  2B8B               	goto	u2261
  1709     038A  2B8C               	goto	u2260
  1710     038B                     u2261:
  1711     038B  2B99               	goto	l230
  1712     038C                     u2260:
  1713     038C                     l2493:
  1714                           
  1715                           ;main.c: 527:                 {;main.c: 531:                     keypressed = rowScan+(4
      +                          *colScan);
  1716     038C  0878               	movf	_colScan,w
  1717     038D  00DF               	movwf	??_read_NumPad
  1718     038E  3002               	movlw	2
  1719     038F                     u2275:
  1720     038F  1003               	clrc
  1721     0390  0DDF               	rlf	??_read_NumPad,f
  1722     0391  3EFF               	addlw	-1
  1723     0392  1D03               	skipz
  1724     0393  2B8F               	goto	u2275
  1725     0394  0877               	movf	_rowScan,w
  1726     0395  075F               	addwf	??_read_NumPad,w
  1727     0396  00F9               	movwf	_keypressed
  1728     0397                     l2495:
  1729                           
  1730                           ;main.c: 533:                     keyf = 1;
  1731     0397  01F6               	clrf	_keyf
  1732     0398  0AF6               	incf	_keyf,f
  1733     0399                     l230:	
  1734                           ;main.c: 535:             }
  1735                           
  1736                           
  1737                           ;main.c: 536:         }
  1738     0399  3001               	movlw	1
  1739     039A  00DF               	movwf	??_read_NumPad
  1740     039B  085F               	movf	??_read_NumPad,w
  1741     039C  07F7               	addwf	_rowScan,f
  1742     039D                     l2497:
  1743     039D  3004               	movlw	4
  1744     039E  0277               	subwf	_rowScan,w
  1745     039F  1C03               	skipc
  1746     03A0  2BA2               	goto	u2281
  1747     03A1  2BA3               	goto	u2280
  1748     03A2                     u2281:
  1749     03A2  2B65               	goto	l2487
  1750     03A3                     u2280:
  1751     03A3                     l2499:
  1752                           
  1753                           ;main.c: 538:         if(keyf)
  1754     03A3  0876               	movf	_keyf,w
  1755     03A4  1903               	btfsc	3,2
  1756     03A5  2BA7               	goto	u2291
  1757     03A6  2BA8               	goto	u2290
  1758     03A7                     u2291:
  1759     03A7  2C41               	goto	l2531
  1760     03A8                     u2290:
  1761     03A8                     l2501:
  1762                           
  1763                           ;main.c: 539:         {;main.c: 540:             keyf = 0;
  1764     03A8  01F6               	clrf	_keyf
  1765     03A9                     l2503:
  1766                           
  1767                           ;main.c: 543:             if(keypressed == 8)
  1768     03A9  3008               	movlw	8
  1769     03AA  0679               	xorwf	_keypressed,w
  1770     03AB  1D03               	btfss	3,2
  1771     03AC  2BAE               	goto	u2301
  1772     03AD  2BAF               	goto	u2300
  1773     03AE                     u2301:
  1774     03AE  2C08               	goto	l2517
  1775     03AF                     u2300:
  1776     03AF                     l2505:
  1777                           
  1778                           ;main.c: 544:             {;main.c: 546:                 if(!compare)
  1779     03AF  1683               	bsf	3,5	;RP0=1, select bank1
  1780     03B0  1303               	bcf	3,6	;RP1=0, select bank1
  1781     03B1  0826               	movf	_compare^(0+128),w
  1782     03B2  1D03               	btfss	3,2
  1783     03B3  2BB5               	goto	u2311
  1784     03B4  2BB6               	goto	u2310
  1785     03B5                     u2311:
  1786     03B5  2BEB               	goto	l2509
  1787     03B6                     u2310:
  1788     03B6                     l2507:
  1789                           
  1790                           ;main.c: 547:                 {;main.c: 549:                     srand(TMR0);
  1791     03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1792     03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1793     03B8  0801               	movf	1,w	;volatile
  1794     03B9  00DF               	movwf	??_read_NumPad
  1795     03BA  01E0               	clrf	??_read_NumPad+1
  1796     03BB  085F               	movf	??_read_NumPad,w
  1797     03BC  00F4               	movwf	srand@x
  1798     03BD  0860               	movf	??_read_NumPad+1,w
  1799     03BE  00F5               	movwf	srand@x+1
  1800     03BF  120A  158A  24F0  120A  118A  	fcall	_srand
  1801                           
  1802                           ;main.c: 551:                     num_rand = ((rand()%8999)+1000);
  1803     03C4  3027               	movlw	39
  1804     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1805     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1806     03C7  00D9               	movwf	___awmod@divisor
  1807     03C8  3023               	movlw	35
  1808     03C9  00DA               	movwf	___awmod@divisor+1
  1809     03CA  120A  158A  2689  120A  118A  	fcall	_rand
  1810     03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1811     03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1812     03D1  0853               	movf	?_rand+1,w
  1813     03D2  00DC               	movwf	___awmod@dividend+1
  1814     03D3  0852               	movf	?_rand,w
  1815     03D4  00DB               	movwf	___awmod@dividend
  1816     03D5  120A  118A  2774  120A  118A  	fcall	___awmod
  1817     03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1818     03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1819     03DC  0859               	movf	?___awmod,w
  1820     03DD  3EE8               	addlw	232
  1821     03DE  1683               	bsf	3,5	;RP0=1, select bank1
  1822     03DF  1303               	bcf	3,6	;RP1=0, select bank1
  1823     03E0  00A2               	movwf	_num_rand^(0+128)
  1824     03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1825     03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1826     03E3  085A               	movf	?___awmod+1,w
  1827     03E4  1803               	skipnc
  1828     03E5  3E01               	addlw	1
  1829     03E6  3E03               	addlw	3
  1830     03E7  1683               	bsf	3,5	;RP0=1, select bank1
  1831     03E8  1303               	bcf	3,6	;RP1=0, select bank1
  1832     03E9  00A3               	movwf	(_num_rand+1)^(0+128)
  1833                           
  1834                           ;main.c: 552:                 }
  1835     03EA  2C33               	goto	l2527
  1836     03EB                     l2509:
  1837     03EB  3024               	movlw	(low (_datoTastierino| 0))& (0+255)
  1838     03EC  1283               	bcf	3,5	;RP0=0, select bank0
  1839     03ED  1303               	bcf	3,6	;RP1=0, select bank0
  1840     03EE  00CB               	movwf	CompareStrings@str2
  1841     03EF  3000               	movlw	0
  1842     03F0  00CC               	movwf	CompareStrings@str2+1
  1843     03F1  3035               	movlw	(low (_datoSeriale| 0))& (0+255)
  1844     03F2  120A  158A  27AA  120A  118A  	fcall	_CompareStrings
  1845     03F7  3A00               	xorlw	0
  1846     03F8  1903               	skipnz
  1847     03F9  2BFB               	goto	u2321
  1848     03FA  2BFC               	goto	u2320
  1849     03FB                     u2321:
  1850     03FB  2C01               	goto	l2513
  1851     03FC                     u2320:
  1852     03FC                     l2511:
  1853                           
  1854                           ;main.c: 555:                 {;main.c: 556:                     success = 1;
  1855     03FC  1683               	bsf	3,5	;RP0=1, select bank1
  1856     03FD  1303               	bcf	3,6	;RP1=0, select bank1
  1857     03FE  01A5               	clrf	_success^(0+128)
  1858     03FF  0AA5               	incf	_success^(0+128),f
  1859                           
  1860                           ;main.c: 557:                 }
  1861     0400  2C33               	goto	l2527
  1862     0401                     l2513:
  1863                           
  1864                           ;main.c: 560:                 {;main.c: 561:                     maxFail--;
  1865     0401  3001               	movlw	1
  1866     0402  1683               	bsf	3,5	;RP0=1, select bank1
  1867     0403  1303               	bcf	3,6	;RP1=0, select bank1
  1868     0404  02B8               	subwf	_maxFail^(0+128),f
  1869     0405                     l2515:
  1870                           
  1871                           ;main.c: 562:                     fail = 1;
  1872     0405  01A4               	clrf	_fail^(0+128)
  1873     0406  0AA4               	incf	_fail^(0+128),f
  1874     0407  2C33               	goto	l2527
  1875     0408                     l2517:
  1876     0408  0879               	movf	_keypressed,w
  1877     0409  1903               	btfsc	3,2
  1878     040A  2C0C               	goto	u2331
  1879     040B  2C0D               	goto	u2330
  1880     040C                     u2331:
  1881     040C  2C33               	goto	l2527
  1882     040D                     u2330:
  1883     040D                     l2519:
  1884     040D  1683               	bsf	3,5	;RP0=1, select bank1
  1885     040E  1303               	bcf	3,6	;RP1=0, select bank1
  1886     040F  0826               	movf	_compare^(0+128),w
  1887     0410  1903               	btfsc	3,2
  1888     0411  2C13               	goto	u2341
  1889     0412  2C14               	goto	u2340
  1890     0413                     u2341:
  1891     0413  2C33               	goto	l2527
  1892     0414                     u2340:
  1893     0414                     l2521:
  1894                           
  1895                           ;main.c: 567:             {;main.c: 569:                 datoTastierino[iT++] = keys[key
      +                          pressed];
  1896     0414  0879               	movf	_keypressed,w
  1897     0415  3E01               	addlw	low ((_keys-__stringbase)| (0+32768))
  1898     0416  0084               	movwf	4
  1899     0417  120A  118A  260A  120A  118A  	fcall	stringdir
  1900     041C  1283               	bcf	3,5	;RP0=0, select bank0
  1901     041D  1303               	bcf	3,6	;RP1=0, select bank0
  1902     041E  00DF               	movwf	??_read_NumPad
  1903     041F  1683               	bsf	3,5	;RP0=1, select bank1
  1904     0420  1303               	bcf	3,6	;RP1=0, select bank1
  1905     0421  0829               	movf	_iT^(0+128),w
  1906     0422  3E24               	addlw	(low (_datoTastierino| 0))& (0+255)
  1907     0423  0084               	movwf	4
  1908     0424  1283               	bcf	3,5	;RP0=0, select bank0
  1909     0425  1303               	bcf	3,6	;RP1=0, select bank0
  1910     0426  085F               	movf	??_read_NumPad,w
  1911     0427  1383               	bcf	3,7	;select IRP bank0
  1912     0428  0080               	movwf	0
  1913     0429                     l2523:
  1914     0429  3001               	movlw	1
  1915     042A  00DF               	movwf	??_read_NumPad
  1916     042B  085F               	movf	??_read_NumPad,w
  1917     042C  1683               	bsf	3,5	;RP0=1, select bank1
  1918     042D  1303               	bcf	3,6	;RP1=0, select bank1
  1919     042E  07A9               	addwf	_iT^(0+128),f
  1920     042F                     l2525:
  1921                           
  1922                           ;main.c: 570:                 datoTastierino[iT] = '\0';
  1923     042F  0829               	movf	_iT^(0+128),w
  1924     0430  3E24               	addlw	(low (_datoTastierino| 0))& (0+255)
  1925     0431  0084               	movwf	4
  1926     0432  0180               	clrf	0
  1927     0433                     l2527:
  1928                           
  1929                           ;main.c: 573:             PORTD |= 0x0F;
  1930     0433  300F               	movlw	15
  1931     0434  1283               	bcf	3,5	;RP0=0, select bank0
  1932     0435  00DF               	movwf	??_read_NumPad
  1933     0436  085F               	movf	??_read_NumPad,w
  1934     0437  0488               	iorwf	8,f	;volatile
  1935     0438                     l2529:	
  1936                           ;main.c: 576:             while(((PORTD & 0x0F) != 0x0F))
  1937                           
  1938                           
  1939                           ;main.c: 576:             while(((PORTD & 0x0F) != 0x0F))
  1940     0438  300F               	movlw	15
  1941     0439  0508               	andwf	8,w	;volatile
  1942     043A  00DF               	movwf	??_read_NumPad
  1943     043B  300F               	movlw	15
  1944     043C  065F               	xorwf	??_read_NumPad,w
  1945     043D  1D03               	btfss	3,2
  1946     043E  2C40               	goto	u2351
  1947     043F  2C41               	goto	u2350
  1948     0440                     u2351:
  1949     0440  2C38               	goto	l2529
  1950     0441                     u2350:
  1951     0441                     l2531:
  1952                           
  1953                           ;main.c: 581:     }
  1954     0441  3001               	movlw	1
  1955     0442  00DF               	movwf	??_read_NumPad
  1956     0443  085F               	movf	??_read_NumPad,w
  1957     0444  07F8               	addwf	_colScan,f
  1958     0445                     l2533:
  1959     0445  3003               	movlw	3
  1960     0446  0278               	subwf	_colScan,w
  1961     0447  1C03               	skipc
  1962     0448  2C4A               	goto	u2361
  1963     0449  2C4B               	goto	u2360
  1964     044A                     u2361:
  1965     044A  2B54               	goto	l2477
  1966     044B                     u2360:
  1967     044B                     l243:
  1968     044B  0008               	return
  1969     044C                     __end_of_read_NumPad:
  1970                           
  1971                           	psect	text2
  1972     0CF0                     __ptext2:	
  1973 ;; *************** function _srand *****************
  1974 ;; Defined at:
  1975 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;  x               2    4[COMMON] unsigned int 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         2       0       0       0       0
  1990 ;;      Locals:         0       0       0       0       0
  1991 ;;      Temps:          0       0       0       0       0
  1992 ;;      Totals:         2       0       0       0       0
  1993 ;;Total ram usage:        2 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 1
  1996 ;; This function calls:
  1997 ;;		Nothing
  1998 ;; This function is called by:
  1999 ;;		_read_NumPad
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003     0CF0                     _srand:	
  2004                           ;psect for function _srand
  2005                           
  2006     0CF0                     l2381:	
  2007                           ;incstack = 0
  2008                           ; Regs used in _srand: [wreg]
  2009                           
  2010     0CF0  0874               	movf	srand@x,w
  2011     0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  2012     0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  2013     0CF3  00EA               	movwf	_randx
  2014     0CF4  0875               	movf	srand@x+1,w
  2015     0CF5  00EB               	movwf	_randx+1
  2016     0CF6  01EC               	clrf	_randx+2
  2017     0CF7  01ED               	clrf	_randx+3
  2018     0CF8                     l804:
  2019     0CF8  0008               	return
  2020     0CF9                     __end_of_srand:
  2021                           
  2022                           	psect	text3
  2023     0E89                     __ptext3:	
  2024 ;; *************** function _rand *****************
  2025 ;; Defined at:
  2026 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\rand.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2   12[BANK0 ] int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       2       0       0       0
  2041 ;;      Locals:         0       0       0       0       0
  2042 ;;      Temps:          0       5       0       0       0
  2043 ;;      Totals:         0       7       0       0       0
  2044 ;;Total ram usage:        7 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 2
  2047 ;; This function calls:
  2048 ;;		___lmul
  2049 ;; This function is called by:
  2050 ;;		_read_NumPad
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054     0E89                     _rand:	
  2055                           ;psect for function _rand
  2056                           
  2057     0E89                     l2383:	
  2058                           ;incstack = 0
  2059                           ; Regs used in _rand: [wreg+status,2+status,0+pclath+cstack]
  2060                           
  2061     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  2062     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  2063     0E8B  086D               	movf	_randx+3,w
  2064     0E8C  00C9               	movwf	___lmul@multiplier+3
  2065     0E8D  086C               	movf	_randx+2,w
  2066     0E8E  00C8               	movwf	___lmul@multiplier+2
  2067     0E8F  086B               	movf	_randx+1,w
  2068     0E90  00C7               	movwf	___lmul@multiplier+1
  2069     0E91  086A               	movf	_randx,w
  2070     0E92  00C6               	movwf	___lmul@multiplier
  2071     0E93  3041               	movlw	65
  2072     0E94  00CD               	movwf	___lmul@multiplicand+3
  2073     0E95  30C6               	movlw	198
  2074     0E96  00CC               	movwf	___lmul@multiplicand+2
  2075     0E97  304E               	movlw	78
  2076     0E98  00CB               	movwf	___lmul@multiplicand+1
  2077     0E99  306D               	movlw	109
  2078     0E9A  00CA               	movwf	___lmul@multiplicand
  2079     0E9B  120A  158A  26D0  120A  158A  	fcall	___lmul
  2080     0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2081     0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2082     0EA2  0849               	movf	?___lmul+3,w
  2083     0EA3  00ED               	movwf	_randx+3
  2084     0EA4  0848               	movf	?___lmul+2,w
  2085     0EA5  00EC               	movwf	_randx+2
  2086     0EA6  0847               	movf	?___lmul+1,w
  2087     0EA7  00EB               	movwf	_randx+1
  2088     0EA8  0846               	movf	?___lmul,w
  2089     0EA9  00EA               	movwf	_randx
  2090     0EAA                     l2385:
  2091     0EAA  3039               	movlw	57
  2092     0EAB  07EA               	addwf	_randx,f
  2093     0EAC  3030               	movlw	48
  2094     0EAD  1803               	skipnc
  2095     0EAE  3031               	movlw	49
  2096     0EAF  07EB               	addwf	_randx+1,f
  2097     0EB0  3000               	movlw	0
  2098     0EB1  1803               	skipnc
  2099     0EB2  3001               	movlw	1
  2100     0EB3  07EC               	addwf	_randx+2,f
  2101     0EB4  3000               	movlw	0
  2102     0EB5  1803               	skipnc
  2103     0EB6  3001               	movlw	1
  2104     0EB7  07ED               	addwf	_randx+3,f
  2105     0EB8                     l2387:
  2106     0EB8  086A               	movf	_randx,w
  2107     0EB9  00D4               	movwf	??_rand
  2108     0EBA  086B               	movf	_randx+1,w
  2109     0EBB  00D5               	movwf	??_rand+1
  2110     0EBC  086C               	movf	_randx+2,w
  2111     0EBD  00D6               	movwf	??_rand+2
  2112     0EBE  086D               	movf	_randx+3,w
  2113     0EBF  00D7               	movwf	??_rand+3
  2114     0EC0  3010               	movlw	16
  2115     0EC1  00D8               	movwf	??_rand+4
  2116     0EC2                     u2055:
  2117     0EC2  0D57               	rlf	??_rand+3,w
  2118     0EC3  0CD7               	rrf	??_rand+3,f
  2119     0EC4  0CD6               	rrf	??_rand+2,f
  2120     0EC5  0CD5               	rrf	??_rand+1,f
  2121     0EC6  0CD4               	rrf	??_rand,f
  2122     0EC7                     u2050:
  2123     0EC7  0BD8               	decfsz	??_rand+4,f
  2124     0EC8  2EC2               	goto	u2055
  2125     0EC9  30FF               	movlw	255
  2126     0ECA  0554               	andwf	??_rand,w
  2127     0ECB  00D2               	movwf	?_rand
  2128     0ECC  307F               	movlw	127
  2129     0ECD  0555               	andwf	??_rand+1,w
  2130     0ECE  00D3               	movwf	?_rand+1
  2131     0ECF                     l807:
  2132     0ECF  0008               	return
  2133     0ED0                     __end_of_rand:
  2134                           
  2135                           	psect	text4
  2136     0774                     __ptext4:	
  2137 ;; *************** function ___awmod *****************
  2138 ;; Defined at:
  2139 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  divisor         2   19[BANK0 ] int 
  2142 ;;  dividend        2   21[BANK0 ] int 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  sign            1   24[BANK0 ] unsigned char 
  2145 ;;  counter         1   23[BANK0 ] unsigned char 
  2146 ;; Return value:  Size  Location     Type
  2147 ;;                  2   19[BANK0 ] int 
  2148 ;; Registers used:
  2149 ;;		wreg, status,2, status,0
  2150 ;; Tracked objects:
  2151 ;;		On entry : 0/0
  2152 ;;		On exit  : 0/0
  2153 ;;		Unchanged: 0/0
  2154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2155 ;;      Params:         0       4       0       0       0
  2156 ;;      Locals:         0       2       0       0       0
  2157 ;;      Temps:          1       0       0       0       0
  2158 ;;      Totals:         1       6       0       0       0
  2159 ;;Total ram usage:        7 bytes
  2160 ;; Hardware stack levels used: 1
  2161 ;; Hardware stack levels required when called: 1
  2162 ;; This function calls:
  2163 ;;		Nothing
  2164 ;; This function is called by:
  2165 ;;		_read_NumPad
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169     0774                     ___awmod:	
  2170                           ;psect for function ___awmod
  2171                           
  2172     0774                     l2429:	
  2173                           ;incstack = 0
  2174                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2175                           
  2176     0774  1283               	bcf	3,5	;RP0=0, select bank0
  2177     0775  1303               	bcf	3,6	;RP1=0, select bank0
  2178     0776  01DE               	clrf	___awmod@sign
  2179     0777                     l2431:
  2180     0777  1FDC               	btfss	___awmod@dividend+1,7
  2181     0778  2F7A               	goto	u2161
  2182     0779  2F7B               	goto	u2160
  2183     077A                     u2161:
  2184     077A  2F82               	goto	l2437
  2185     077B                     u2160:
  2186     077B                     l2433:
  2187     077B  09DB               	comf	___awmod@dividend,f
  2188     077C  09DC               	comf	___awmod@dividend+1,f
  2189     077D  0ADB               	incf	___awmod@dividend,f
  2190     077E  1903               	skipnz
  2191     077F  0ADC               	incf	___awmod@dividend+1,f
  2192     0780                     l2435:
  2193     0780  01DE               	clrf	___awmod@sign
  2194     0781  0ADE               	incf	___awmod@sign,f
  2195     0782                     l2437:
  2196     0782  1FDA               	btfss	___awmod@divisor+1,7
  2197     0783  2F85               	goto	u2171
  2198     0784  2F86               	goto	u2170
  2199     0785                     u2171:
  2200     0785  2F8B               	goto	l2441
  2201     0786                     u2170:
  2202     0786                     l2439:
  2203     0786  09D9               	comf	___awmod@divisor,f
  2204     0787  09DA               	comf	___awmod@divisor+1,f
  2205     0788  0AD9               	incf	___awmod@divisor,f
  2206     0789  1903               	skipnz
  2207     078A  0ADA               	incf	___awmod@divisor+1,f
  2208     078B                     l2441:
  2209     078B  0859               	movf	___awmod@divisor,w
  2210     078C  045A               	iorwf	___awmod@divisor+1,w
  2211     078D  1903               	btfsc	3,2
  2212     078E  2F90               	goto	u2181
  2213     078F  2F91               	goto	u2180
  2214     0790                     u2181:
  2215     0790  2FC0               	goto	l2459
  2216     0791                     u2180:
  2217     0791                     l2443:
  2218     0791  01DD               	clrf	___awmod@counter
  2219     0792  0ADD               	incf	___awmod@counter,f
  2220     0793  2F9F               	goto	l2449
  2221     0794                     l2445:
  2222     0794  3001               	movlw	1
  2223     0795                     u2195:
  2224     0795  1003               	clrc
  2225     0796  0DD9               	rlf	___awmod@divisor,f
  2226     0797  0DDA               	rlf	___awmod@divisor+1,f
  2227     0798  3EFF               	addlw	-1
  2228     0799  1D03               	skipz
  2229     079A  2F95               	goto	u2195
  2230     079B                     l2447:
  2231     079B  3001               	movlw	1
  2232     079C  00F5               	movwf	??___awmod
  2233     079D  0875               	movf	??___awmod,w
  2234     079E  07DD               	addwf	___awmod@counter,f
  2235     079F                     l2449:
  2236     079F  1FDA               	btfss	___awmod@divisor+1,7
  2237     07A0  2FA2               	goto	u2201
  2238     07A1  2FA3               	goto	u2200
  2239     07A2                     u2201:
  2240     07A2  2F94               	goto	l2445
  2241     07A3                     u2200:
  2242     07A3                     l2451:
  2243     07A3  085A               	movf	___awmod@divisor+1,w
  2244     07A4  025C               	subwf	___awmod@dividend+1,w
  2245     07A5  1D03               	skipz
  2246     07A6  2FA9               	goto	u2215
  2247     07A7  0859               	movf	___awmod@divisor,w
  2248     07A8  025B               	subwf	___awmod@dividend,w
  2249     07A9                     u2215:
  2250     07A9  1C03               	skipc
  2251     07AA  2FAC               	goto	u2211
  2252     07AB  2FAD               	goto	u2210
  2253     07AC                     u2211:
  2254     07AC  2FB3               	goto	l2455
  2255     07AD                     u2210:
  2256     07AD                     l2453:
  2257     07AD  0859               	movf	___awmod@divisor,w
  2258     07AE  02DB               	subwf	___awmod@dividend,f
  2259     07AF  085A               	movf	___awmod@divisor+1,w
  2260     07B0  1C03               	skipc
  2261     07B1  03DC               	decf	___awmod@dividend+1,f
  2262     07B2  02DC               	subwf	___awmod@dividend+1,f
  2263     07B3                     l2455:
  2264     07B3  3001               	movlw	1
  2265     07B4                     u2225:
  2266     07B4  1003               	clrc
  2267     07B5  0CDA               	rrf	___awmod@divisor+1,f
  2268     07B6  0CD9               	rrf	___awmod@divisor,f
  2269     07B7  3EFF               	addlw	-1
  2270     07B8  1D03               	skipz
  2271     07B9  2FB4               	goto	u2225
  2272     07BA                     l2457:
  2273     07BA  3001               	movlw	1
  2274     07BB  02DD               	subwf	___awmod@counter,f
  2275     07BC  1D03               	btfss	3,2
  2276     07BD  2FBF               	goto	u2231
  2277     07BE  2FC0               	goto	u2230
  2278     07BF                     u2231:
  2279     07BF  2FA3               	goto	l2451
  2280     07C0                     u2230:
  2281     07C0                     l2459:
  2282     07C0  085E               	movf	___awmod@sign,w
  2283     07C1  1903               	btfsc	3,2
  2284     07C2  2FC4               	goto	u2241
  2285     07C3  2FC5               	goto	u2240
  2286     07C4                     u2241:
  2287     07C4  2FCA               	goto	l2463
  2288     07C5                     u2240:
  2289     07C5                     l2461:
  2290     07C5  09DB               	comf	___awmod@dividend,f
  2291     07C6  09DC               	comf	___awmod@dividend+1,f
  2292     07C7  0ADB               	incf	___awmod@dividend,f
  2293     07C8  1903               	skipnz
  2294     07C9  0ADC               	incf	___awmod@dividend+1,f
  2295     07CA                     l2463:
  2296     07CA  085C               	movf	___awmod@dividend+1,w
  2297     07CB  00DA               	movwf	?___awmod+1
  2298     07CC  085B               	movf	___awmod@dividend,w
  2299     07CD  00D9               	movwf	?___awmod
  2300     07CE                     l517:
  2301     07CE  0008               	return
  2302     07CF                     __end_of___awmod:
  2303                           
  2304                           	psect	text5
  2305     0FAA                     __ptext5:	
  2306 ;; *************** function _CompareStrings *****************
  2307 ;; Defined at:
  2308 ;;		line 478 in file "main.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  str1            1    wreg     PTR unsigned char 
  2311 ;;		 -> datoSeriale(17), id_dest(4), 
  2312 ;;  str2            2    5[BANK0 ] PTR unsigned char 
  2313 ;;		 -> datoTastierino(17), STR_3(5), 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  str1            1    9[BANK0 ] PTR unsigned char 
  2316 ;;		 -> datoSeriale(17), id_dest(4), 
  2317 ;;  i               1   10[BANK0 ] unsigned char 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      unsigned char 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       2       0       0       0
  2328 ;;      Locals:         0       2       0       0       0
  2329 ;;      Temps:          0       2       0       0       0
  2330 ;;      Totals:         0       6       0       0       0
  2331 ;;Total ram usage:        6 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 3
  2334 ;; This function calls:
  2335 ;;		_Length
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;;		_read_NumPad
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342     0FAA                     _CompareStrings:	
  2343                           ;psect for function _CompareStrings
  2344                           
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _CompareStrings: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2348                           ;CompareStrings@str1 stored from wreg
  2349     0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  2350     0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  2351     0FAC  00CF               	movwf	CompareStrings@str1
  2352     0FAD                     l2271:
  2353                           
  2354                           ;main.c: 478: char CompareStrings(char *str1, char *str2);main.c: 479: {;main.c: 481:   
      +                            if(Length(str1) != Length(str2))
  2355     0FAD  084F               	movf	CompareStrings@str1,w
  2356     0FAE  00F4               	movwf	Length@str
  2357     0FAF  3000               	movlw	0
  2358     0FB0  00F5               	movwf	Length@str+1
  2359     0FB1  120A  158A  259E  120A  158A  	fcall	_Length
  2360     0FB6  0874               	movf	?_Length,w
  2361     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  2362     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  2363     0FB9  00CD               	movwf	??_CompareStrings
  2364     0FBA  0875               	movf	?_Length+1,w
  2365     0FBB  00CE               	movwf	??_CompareStrings+1
  2366     0FBC  084B               	movf	CompareStrings@str2,w
  2367     0FBD  00F4               	movwf	Length@str
  2368     0FBE  084C               	movf	CompareStrings@str2+1,w
  2369     0FBF  00F5               	movwf	Length@str+1
  2370     0FC0  120A  158A  259E  120A  158A  	fcall	_Length
  2371     0FC5  0875               	movf	?_Length+1,w
  2372     0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  2373     0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  2374     0FC8  064E               	xorwf	??_CompareStrings+1,w
  2375     0FC9  1D03               	skipz
  2376     0FCA  2FCD               	goto	u1965
  2377     0FCB  0874               	movf	?_Length,w
  2378     0FCC  064D               	xorwf	??_CompareStrings,w
  2379     0FCD                     u1965:
  2380     0FCD  1903               	skipnz
  2381     0FCE  2FD0               	goto	u1961
  2382     0FCF  2FD1               	goto	u1960
  2383     0FD0                     u1961:
  2384     0FD0  2FD3               	goto	l2279
  2385     0FD1                     u1960:
  2386     0FD1                     l2273:
  2387                           
  2388                           ;main.c: 482:         return 0;
  2389     0FD1  3000               	movlw	0
  2390     0FD2  2FFF               	goto	l215
  2391     0FD3                     l2279:
  2392                           
  2393                           ;main.c: 484:     {;main.c: 485:         char i = 0;
  2394     0FD3  01D0               	clrf	CompareStrings@i
  2395                           
  2396                           ;main.c: 488:         while(str1[i] != '\0')
  2397     0FD4  2FF3               	goto	l2289
  2398     0FD5                     l2281:
  2399                           
  2400                           ;main.c: 489:         {;main.c: 490:             if(str1[i] != str2[i])
  2401     0FD5  0850               	movf	CompareStrings@i,w
  2402     0FD6  074B               	addwf	CompareStrings@str2,w
  2403     0FD7  0084               	movwf	4
  2404     0FD8  084C               	movf	CompareStrings@str2+1,w
  2405     0FD9  1803               	skipnc
  2406     0FDA  0A4C               	incf	CompareStrings@str2+1,w
  2407     0FDB  00FF               	movwf	btemp+1
  2408     0FDC  120A  118A  2600  120A  158A  	fcall	stringtab
  2409     0FE1  00CD               	movwf	??_CompareStrings
  2410     0FE2  0850               	movf	CompareStrings@i,w
  2411     0FE3  074F               	addwf	CompareStrings@str1,w
  2412     0FE4  00CE               	movwf	??_CompareStrings+1
  2413     0FE5  084E               	movf	??_CompareStrings+1,w
  2414     0FE6  0084               	movwf	4
  2415     0FE7  1383               	bcf	3,7	;select IRP bank0
  2416     0FE8  0800               	movf	0,w
  2417     0FE9  064D               	xorwf	??_CompareStrings,w
  2418     0FEA  1903               	skipnz
  2419     0FEB  2FED               	goto	u1971
  2420     0FEC  2FEE               	goto	u1970
  2421     0FED                     u1971:
  2422     0FED  2FEF               	goto	l2287
  2423     0FEE                     u1970:
  2424     0FEE  2FD1               	goto	l2273
  2425     0FEF                     l2287:
  2426                           
  2427                           ;main.c: 493:             i++;
  2428     0FEF  3001               	movlw	1
  2429     0FF0  00CD               	movwf	??_CompareStrings
  2430     0FF1  084D               	movf	??_CompareStrings,w
  2431     0FF2  07D0               	addwf	CompareStrings@i,f
  2432     0FF3                     l2289:
  2433                           
  2434                           ;main.c: 488:         while(str1[i] != '\0')
  2435     0FF3  0850               	movf	CompareStrings@i,w
  2436     0FF4  074F               	addwf	CompareStrings@str1,w
  2437     0FF5  00CD               	movwf	??_CompareStrings
  2438     0FF6  084D               	movf	??_CompareStrings,w
  2439     0FF7  0084               	movwf	4
  2440     0FF8  1383               	bcf	3,7	;select IRP bank0
  2441     0FF9  0800               	movf	0,w
  2442     0FFA  1D03               	btfss	3,2
  2443     0FFB  2FFD               	goto	u1981
  2444     0FFC  2FFE               	goto	u1980
  2445     0FFD                     u1981:
  2446     0FFD  2FD5               	goto	l2281
  2447     0FFE                     u1980:
  2448     0FFE                     l2291:
  2449                           
  2450                           ;main.c: 496:         return 1;
  2451     0FFE  3001               	movlw	1
  2452     0FFF                     l215:
  2453     0FFF  0008               	return
  2454     1000                     __end_of_CompareStrings:
  2455                           
  2456                           	psect	text6
  2457     0F18                     __ptext6:	
  2458 ;; *************** function _lcdPrint *****************
  2459 ;; Defined at:
  2460 ;;		line 311 in file "main.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;  str             2    2[BANK0 ] PTR unsigned char 
  2463 ;;		 -> datoTastierino(17), STR_12(17), STR_11(16), STR_10(13), 
  2464 ;;		 -> STR_9(15), STR_6(12), STR_5(13), STR_4(18), 
  2465 ;;		 -> main@num_rand_s(16), 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  n               2    7[BANK0 ] int 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2477 ;;      Params:         0       2       0       0       0
  2478 ;;      Locals:         0       2       0       0       0
  2479 ;;      Temps:          0       3       0       0       0
  2480 ;;      Totals:         0       7       0       0       0
  2481 ;;Total ram usage:        7 bytes
  2482 ;; Hardware stack levels used: 1
  2483 ;; Hardware stack levels required when called: 2
  2484 ;; This function calls:
  2485 ;;		_lcdSend
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491     0F18                     _lcdPrint:	
  2492                           ;psect for function _lcdPrint
  2493                           
  2494     0F18                     l2565:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _lcdPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2497                           
  2498                           
  2499                           ;main.c: 311: void lcdPrint(char *str);main.c: 312: {;main.c: 313:     int n = 0;
  2500     0F18  1283               	bcf	3,5	;RP0=0, select bank0
  2501     0F19  1303               	bcf	3,6	;RP1=0, select bank0
  2502     0F1A  01CD               	clrf	lcdPrint@n
  2503     0F1B  01CE               	clrf	lcdPrint@n+1
  2504                           
  2505                           ;main.c: 315:     while(str[n] != '\0')
  2506     0F1C  2F43               	goto	l2571
  2507     0F1D                     l2567:
  2508                           
  2509                           ;main.c: 316:     {;main.c: 318:         lcdSend(str[n++], 1);
  2510     0F1D  01F4               	clrf	lcdSend@tipo
  2511     0F1E  0AF4               	incf	lcdSend@tipo,f
  2512     0F1F  084D               	movf	lcdPrint@n,w
  2513     0F20  0748               	addwf	lcdPrint@str,w
  2514     0F21  00CB               	movwf	??_lcdPrint+1
  2515     0F22  0849               	movf	lcdPrint@str+1,w
  2516     0F23  00CA               	movwf	??_lcdPrint
  2517     0F24  1803               	skipnc
  2518     0F25  0ACA               	incf	??_lcdPrint,f
  2519     0F26  1FCD               	btfss	lcdPrint@n,7
  2520     0F27  2F29               	goto	u2400
  2521     0F28  03CA               	decf	??_lcdPrint,f
  2522     0F29                     u2400:
  2523     0F29  1283               	bcf	3,5	;RP0=0, select bank0
  2524     0F2A  1303               	bcf	3,6	;RP1=0, select bank0
  2525     0F2B  084A               	movf	??_lcdPrint,w
  2526     0F2C  00CC               	movwf	??_lcdPrint+2
  2527     0F2D  084C               	movf	??_lcdPrint+2,w
  2528     0F2E  00FF               	movwf	btemp+1
  2529     0F2F  084B               	movf	??_lcdPrint+1,w
  2530     0F30  0084               	movwf	4
  2531     0F31  120A  118A  2600  120A  158A  	fcall	stringtab
  2532     0F36  120A  158A  2573  120A  158A  	fcall	_lcdSend
  2533     0F3B                     l2569:
  2534     0F3B  3001               	movlw	1
  2535     0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  2536     0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  2537     0F3E  07CD               	addwf	lcdPrint@n,f
  2538     0F3F  1803               	skipnc
  2539     0F40  0ACE               	incf	lcdPrint@n+1,f
  2540     0F41  3000               	movlw	0
  2541     0F42  07CE               	addwf	lcdPrint@n+1,f
  2542     0F43                     l2571:
  2543                           
  2544                           ;main.c: 315:     while(str[n] != '\0')
  2545     0F43  084D               	movf	lcdPrint@n,w
  2546     0F44  0748               	addwf	lcdPrint@str,w
  2547     0F45  00CB               	movwf	??_lcdPrint+1
  2548     0F46  0849               	movf	lcdPrint@str+1,w
  2549     0F47  00CA               	movwf	??_lcdPrint
  2550     0F48  1803               	skipnc
  2551     0F49  0ACA               	incf	??_lcdPrint,f
  2552     0F4A  1FCD               	btfss	lcdPrint@n,7
  2553     0F4B  2F4D               	goto	u2410
  2554     0F4C  03CA               	decf	??_lcdPrint,f
  2555     0F4D                     u2410:
  2556     0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2557     0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2558     0F4F  084A               	movf	??_lcdPrint,w
  2559     0F50  00CC               	movwf	??_lcdPrint+2
  2560     0F51  084C               	movf	??_lcdPrint+2,w
  2561     0F52  00FF               	movwf	btemp+1
  2562     0F53  084B               	movf	??_lcdPrint+1,w
  2563     0F54  0084               	movwf	4
  2564     0F55  120A  118A  2600  120A  158A  	fcall	stringtab
  2565     0F5A  3A00               	xorlw	0
  2566     0F5B  1D03               	skipz
  2567     0F5C  2F5E               	goto	u2421
  2568     0F5D  2F5F               	goto	u2420
  2569     0F5E                     u2421:
  2570     0F5E  2F1D               	goto	l2567
  2571     0F5F                     u2420:
  2572     0F5F                     l157:
  2573     0F5F  0008               	return
  2574     0F60                     __end_of_lcdPrint:
  2575                           
  2576                           	psect	text7
  2577     05E1                     __ptext7:	
  2578 ;; *************** function _init_PIC *****************
  2579 ;; Defined at:
  2580 ;;		line 254 in file "main.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;		None
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      void 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, pclath, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2594 ;;      Params:         0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0
  2597 ;;      Totals:         0       0       0       0       0
  2598 ;;Total ram usage:        0 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; Hardware stack levels required when called: 3
  2601 ;; This function calls:
  2602 ;;		_UART_init
  2603 ;;		_init_LCD
  2604 ;;		_init_NumPad
  2605 ;;		_init_Timer0
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611     05E1                     _init_PIC:	
  2612                           ;psect for function _init_PIC
  2613                           
  2614     05E1                     l2467:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _init_PIC: [wreg+status,2+status,0+pclath+cstack]
  2617                           
  2618                           
  2619                           ;main.c: 257:     UART_init(115200);
  2620     05E1  3000               	movlw	0
  2621     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2622     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2623     05E4  00E5               	movwf	UART_init@baudrate+3
  2624     05E5  3001               	movlw	1
  2625     05E6  00E4               	movwf	UART_init@baudrate+2
  2626     05E7  30C2               	movlw	194
  2627     05E8  00E3               	movwf	UART_init@baudrate+1
  2628     05E9  3000               	movlw	0
  2629     05EA  00E2               	movwf	UART_init@baudrate
  2630     05EB  120A  158A  2643  120A  118A  	fcall	_UART_init
  2631                           
  2632                           ;main.c: 258:     init_LCD();
  2633     05F0  120A  118A  2588  120A  118A  	fcall	_init_LCD
  2634                           
  2635                           ;main.c: 259:     init_NumPad();
  2636     05F5  120A  158A  24F9  120A  118A  	fcall	_init_NumPad
  2637                           
  2638                           ;main.c: 260:     init_Timer0();
  2639     05FA  120A  158A  2512  120A  118A  	fcall	_init_Timer0
  2640     05FF                     l142:
  2641     05FF  0008               	return
  2642     0600                     __end_of_init_PIC:
  2643                           
  2644                           	psect	text8
  2645     0D12                     __ptext8:	
  2646 ;; *************** function _init_Timer0 *****************
  2647 ;; Defined at:
  2648 ;;		line 263 in file "main.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;		None
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;		None
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  1    wreg      void 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2662 ;;      Params:         0       0       0       0       0
  2663 ;;      Locals:         0       0       0       0       0
  2664 ;;      Temps:          1       0       0       0       0
  2665 ;;      Totals:         1       0       0       0       0
  2666 ;;Total ram usage:        1 bytes
  2667 ;; Hardware stack levels used: 1
  2668 ;; Hardware stack levels required when called: 1
  2669 ;; This function calls:
  2670 ;;		Nothing
  2671 ;; This function is called by:
  2672 ;;		_init_PIC
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676     0D12                     _init_Timer0:	
  2677                           ;psect for function _init_Timer0
  2678                           
  2679     0D12                     l2335:	
  2680                           ;incstack = 0
  2681                           ; Regs used in _init_Timer0: [wreg+status,2+status,0]
  2682                           
  2683                           
  2684                           ;main.c: 266:     INTCON |= 0xA0;
  2685     0D12  30A0               	movlw	160
  2686     0D13  00F4               	movwf	??_init_Timer0
  2687     0D14  0874               	movf	??_init_Timer0,w
  2688     0D15  048B               	iorwf	11,f	;volatile
  2689     0D16                     l2337:
  2690                           
  2691                           ;main.c: 267:     OPTION_REG = 0x06;
  2692     0D16  3006               	movlw	6
  2693     0D17  1683               	bsf	3,5	;RP0=1, select bank1
  2694     0D18  1303               	bcf	3,6	;RP1=0, select bank1
  2695     0D19  0081               	movwf	1	;volatile
  2696     0D1A                     l2339:
  2697                           
  2698                           ;main.c: 268:     TMR0 = 131;
  2699     0D1A  3083               	movlw	131
  2700     0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2701     0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2702     0D1D  0081               	movwf	1	;volatile
  2703     0D1E                     l2341:
  2704                           
  2705                           ;main.c: 270:     milliseconds = 0;
  2706     0D1E  3000               	movlw	0
  2707     0D1F  00A3               	movwf	_milliseconds+3
  2708     0D20  3000               	movlw	0
  2709     0D21  00A2               	movwf	_milliseconds+2
  2710     0D22  3000               	movlw	0
  2711     0D23  00A1               	movwf	_milliseconds+1
  2712     0D24  3000               	movlw	0
  2713     0D25  00A0               	movwf	_milliseconds
  2714     0D26                     l145:
  2715     0D26  0008               	return
  2716     0D27                     __end_of_init_Timer0:
  2717                           
  2718                           	psect	text9
  2719     0CF9                     __ptext9:	
  2720 ;; *************** function _init_NumPad *****************
  2721 ;; Defined at:
  2722 ;;		line 500 in file "main.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;		None
  2725 ;; Auto vars:     Size  Location     Type
  2726 ;;		None
  2727 ;; Return value:  Size  Location     Type
  2728 ;;                  1    wreg      void 
  2729 ;; Registers used:
  2730 ;;		wreg, status,2, status,0
  2731 ;; Tracked objects:
  2732 ;;		On entry : 0/0
  2733 ;;		On exit  : 0/0
  2734 ;;		Unchanged: 0/0
  2735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2736 ;;      Params:         0       0       0       0       0
  2737 ;;      Locals:         0       0       0       0       0
  2738 ;;      Temps:          1       0       0       0       0
  2739 ;;      Totals:         1       0       0       0       0
  2740 ;;Total ram usage:        1 bytes
  2741 ;; Hardware stack levels used: 1
  2742 ;; Hardware stack levels required when called: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_init_PIC
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750     0CF9                     _init_NumPad:	
  2751                           ;psect for function _init_NumPad
  2752                           
  2753     0CF9                     l2333:	
  2754                           ;incstack = 0
  2755                           ; Regs used in _init_NumPad: [wreg+status,2+status,0]
  2756                           
  2757                           
  2758                           ;main.c: 503:     TRISD |= 0x0F;
  2759     0CF9  300F               	movlw	15
  2760     0CFA  00F4               	movwf	??_init_NumPad
  2761     0CFB  0874               	movf	??_init_NumPad,w
  2762     0CFC  1683               	bsf	3,5	;RP0=1, select bank1
  2763     0CFD  1303               	bcf	3,6	;RP1=0, select bank1
  2764     0CFE  0488               	iorwf	8,f	;volatile
  2765                           
  2766                           ;main.c: 504:     TRISB &= 0xF0;
  2767     0CFF  30F0               	movlw	240
  2768     0D00  00F4               	movwf	??_init_NumPad
  2769     0D01  0874               	movf	??_init_NumPad,w
  2770     0D02  0586               	andwf	6,f	;volatile
  2771     0D03                     l223:
  2772     0D03  0008               	return
  2773     0D04                     __end_of_init_NumPad:
  2774                           
  2775                           	psect	text10
  2776     0588                     __ptext10:	
  2777 ;; *************** function _init_LCD *****************
  2778 ;; Defined at:
  2779 ;;		line 273 in file "main.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;		None
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;		None
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0, pclath, cstack
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         0       0       0       0       0
  2795 ;;      Temps:          0       2       0       0       0
  2796 ;;      Totals:         0       2       0       0       0
  2797 ;;Total ram usage:        2 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 2
  2800 ;; This function calls:
  2801 ;;		_lcdSend
  2802 ;; This function is called by:
  2803 ;;		_init_PIC
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     0588                     _init_LCD:	
  2808                           ;psect for function _init_LCD
  2809                           
  2810     0588                     l2311:	
  2811                           ;incstack = 0
  2812                           ; Regs used in _init_LCD: [wreg+status,2+status,0+pclath+cstack]
  2813                           
  2814                           
  2815                           ;main.c: 277:     PORTEbits.RE2 = 0;
  2816     0588  1283               	bcf	3,5	;RP0=0, select bank0
  2817     0589  1303               	bcf	3,6	;RP1=0, select bank0
  2818     058A  1109               	bcf	9,2	;volatile
  2819                           
  2820                           ;main.c: 278:     PORTEbits.RE1 = 0;
  2821     058B  1089               	bcf	9,1	;volatile
  2822     058C                     l2313:
  2823                           
  2824                           ;main.c: 279:     _delay((unsigned long)((20)*(20000000/4000.0)));
  2825     058C  3082               	movlw	130
  2826     058D  1283               	bcf	3,5	;RP0=0, select bank0
  2827     058E  1303               	bcf	3,6	;RP1=0, select bank0
  2828     058F  00C9               	movwf	??_init_LCD+1
  2829     0590  30DD               	movlw	221
  2830     0591  00C8               	movwf	??_init_LCD
  2831     0592                     u2617:
  2832     0592  0BC8               	decfsz	??_init_LCD,f
  2833     0593  2D92               	goto	u2617
  2834     0594  0BC9               	decfsz	??_init_LCD+1,f
  2835     0595  2D92               	goto	u2617
  2836     0596                     l2315:
  2837                           
  2838                           ;main.c: 280:     PORTEbits.RE1 = 1;
  2839     0596  1283               	bcf	3,5	;RP0=0, select bank0
  2840     0597  1303               	bcf	3,6	;RP1=0, select bank0
  2841     0598  1489               	bsf	9,1	;volatile
  2842     0599                     l2317:
  2843                           
  2844                           ;main.c: 282:     lcdSend(0x38, 0);
  2845     0599  01F4               	clrf	lcdSend@tipo
  2846     059A  3038               	movlw	56
  2847     059B  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2848     05A0                     l2319:
  2849                           
  2850                           ;main.c: 283:     _delay((unsigned long)((5)*(20000000/4000.0)));
  2851     05A0  3021               	movlw	33
  2852     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  2853     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  2854     05A3  00C9               	movwf	??_init_LCD+1
  2855     05A4  3075               	movlw	117
  2856     05A5  00C8               	movwf	??_init_LCD
  2857     05A6                     u2627:
  2858     05A6  0BC8               	decfsz	??_init_LCD,f
  2859     05A7  2DA6               	goto	u2627
  2860     05A8  0BC9               	decfsz	??_init_LCD+1,f
  2861     05A9  2DA6               	goto	u2627
  2862     05AA  2DAB               	nop2
  2863                           
  2864                           ;main.c: 284:     lcdSend(0x38, 0);
  2865     05AB  01F4               	clrf	lcdSend@tipo
  2866     05AC  3038               	movlw	56
  2867     05AD  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2868     05B2                     l2321:
  2869                           
  2870                           ;main.c: 285:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2871     05B2  3007               	movlw	7
  2872     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2873     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2874     05B5  00C9               	movwf	??_init_LCD+1
  2875     05B6  307C               	movlw	124
  2876     05B7  00C8               	movwf	??_init_LCD
  2877     05B8                     u2637:
  2878     05B8  0BC8               	decfsz	??_init_LCD,f
  2879     05B9  2DB8               	goto	u2637
  2880     05BA  0BC9               	decfsz	??_init_LCD+1,f
  2881     05BB  2DB8               	goto	u2637
  2882     05BC  0000               	nop
  2883     05BD                     l2323:
  2884                           
  2885                           ;main.c: 286:     lcdSend(0x38, 0);
  2886     05BD  01F4               	clrf	lcdSend@tipo
  2887     05BE  3038               	movlw	56
  2888     05BF  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2889     05C4                     l2325:
  2890                           
  2891                           ;main.c: 287:     lcdSend(0x08, 0);
  2892     05C4  01F4               	clrf	lcdSend@tipo
  2893     05C5  3008               	movlw	8
  2894     05C6  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2895     05CB                     l2327:
  2896                           
  2897                           ;main.c: 288:     lcdSend(0x0F, 0);
  2898     05CB  01F4               	clrf	lcdSend@tipo
  2899     05CC  300F               	movlw	15
  2900     05CD  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2901     05D2                     l2329:
  2902                           
  2903                           ;main.c: 289:     lcdSend(0x01, 0);
  2904     05D2  01F4               	clrf	lcdSend@tipo
  2905     05D3  3001               	movlw	1
  2906     05D4  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2907     05D9                     l2331:
  2908                           
  2909                           ;main.c: 291:     lcdSend(0x0C, 0);
  2910     05D9  01F4               	clrf	lcdSend@tipo
  2911     05DA  300C               	movlw	12
  2912     05DB  120A  158A  2573  120A  118A  	fcall	_lcdSend
  2913     05E0                     l148:
  2914     05E0  0008               	return
  2915     05E1                     __end_of_init_LCD:
  2916                           
  2917                           	psect	text11
  2918     0D73                     __ptext11:	
  2919 ;; *************** function _lcdSend *****************
  2920 ;; Defined at:
  2921 ;;		line 294 in file "main.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dato            1    wreg     unsigned char 
  2924 ;;  tipo            1    4[COMMON] unsigned char 
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  dato            1    5[COMMON] unsigned char 
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2, status,0
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2936 ;;      Params:         1       0       0       0       0
  2937 ;;      Locals:         1       0       0       0       0
  2938 ;;      Temps:          0       2       0       0       0
  2939 ;;      Totals:         2       2       0       0       0
  2940 ;;Total ram usage:        4 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 1
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;;		_init_LCD
  2948 ;;		_lcdPrint
  2949 ;; This function uses a non-reentrant model
  2950 ;;
  2951                           
  2952     0D73                     _lcdSend:	
  2953                           ;psect for function _lcdSend
  2954                           
  2955                           
  2956                           ;incstack = 0
  2957                           ; Regs used in _lcdSend: [wreg+status,2+status,0]
  2958                           ;lcdSend@dato stored from wreg
  2959     0D73  00F5               	movwf	lcdSend@dato
  2960     0D74                     l2173:
  2961                           
  2962                           ;main.c: 294: void lcdSend(char dato, char tipo);main.c: 295: {;main.c: 298:     TRISD =
      +                           0x00;
  2963     0D74  1683               	bsf	3,5	;RP0=1, select bank1
  2964     0D75  1303               	bcf	3,6	;RP1=0, select bank1
  2965     0D76  0188               	clrf	8	;volatile
  2966     0D77                     l2175:
  2967                           
  2968                           ;main.c: 299:     TRISEbits.TRISE1 = 0;
  2969     0D77  1089               	bcf	9,1	;volatile
  2970     0D78                     l2177:
  2971                           
  2972                           ;main.c: 300:     TRISEbits.TRISE2 = 0;
  2973     0D78  1109               	bcf	9,2	;volatile
  2974     0D79                     l2179:
  2975                           
  2976                           ;main.c: 302:     PORTEbits.RE1 = 1;
  2977     0D79  1283               	bcf	3,5	;RP0=0, select bank0
  2978     0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  2979     0D7B  1489               	bsf	9,1	;volatile
  2980     0D7C                     l2181:
  2981                           
  2982                           ;main.c: 303:     PORTD = dato;
  2983     0D7C  0875               	movf	lcdSend@dato,w
  2984     0D7D  0088               	movwf	8	;volatile
  2985     0D7E                     l2183:
  2986                           
  2987                           ;main.c: 304:     PORTEbits.RE2 = tipo;
  2988     0D7E  0C74               	rrf	lcdSend@tipo,w
  2989     0D7F  1C03               	skipc
  2990     0D80  1109               	bcf	9,2	;volatile
  2991     0D81  1803               	skipnc
  2992     0D82  1509               	bsf	9,2	;volatile
  2993     0D83                     l2185:
  2994                           
  2995                           ;main.c: 305:     _delay((unsigned long)((3)*(20000000/4000.0)));
  2996     0D83  3014               	movlw	20
  2997     0D84  1283               	bcf	3,5	;RP0=0, select bank0
  2998     0D85  1303               	bcf	3,6	;RP1=0, select bank0
  2999     0D86  00C7               	movwf	??_lcdSend+1
  3000     0D87  3079               	movlw	121
  3001     0D88  00C6               	movwf	??_lcdSend
  3002     0D89                     u2647:
  3003     0D89  0BC6               	decfsz	??_lcdSend,f
  3004     0D8A  2D89               	goto	u2647
  3005     0D8B  0BC7               	decfsz	??_lcdSend+1,f
  3006     0D8C  2D89               	goto	u2647
  3007     0D8D                     l2187:
  3008                           
  3009                           ;main.c: 306:     PORTEbits.RE1 = 0;
  3010     0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  3011     0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  3012     0D8F  1089               	bcf	9,1	;volatile
  3013     0D90                     l2189:
  3014                           
  3015                           ;main.c: 307:     _delay((unsigned long)((3)*(20000000/4000.0)));
  3016     0D90  3014               	movlw	20
  3017     0D91  1283               	bcf	3,5	;RP0=0, select bank0
  3018     0D92  1303               	bcf	3,6	;RP1=0, select bank0
  3019     0D93  00C7               	movwf	??_lcdSend+1
  3020     0D94  3079               	movlw	121
  3021     0D95  00C6               	movwf	??_lcdSend
  3022     0D96                     u2657:
  3023     0D96  0BC6               	decfsz	??_lcdSend,f
  3024     0D97  2D96               	goto	u2657
  3025     0D98  0BC7               	decfsz	??_lcdSend+1,f
  3026     0D99  2D96               	goto	u2657
  3027     0D9A                     l2191:
  3028                           
  3029                           ;main.c: 308:     PORTEbits.RE1 = 1;
  3030     0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  3031     0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  3032     0D9C  1489               	bsf	9,1	;volatile
  3033     0D9D                     l151:
  3034     0D9D  0008               	return
  3035     0D9E                     __end_of_lcdSend:
  3036                           
  3037                           	psect	text12
  3038     0E43                     __ptext12:	
  3039 ;; *************** function _UART_init *****************
  3040 ;; Defined at:
  3041 ;;		line 584 in file "main.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  baudrate        4   28[BANK0 ] long 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, pclath, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3055 ;;      Params:         0       4       0       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       4       0       0       0
  3058 ;;      Totals:         0       8       0       0       0
  3059 ;;Total ram usage:        8 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; Hardware stack levels required when called: 2
  3062 ;; This function calls:
  3063 ;;		___aldiv
  3064 ;; This function is called by:
  3065 ;;		_init_PIC
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069     0E43                     _UART_init:	
  3070                           ;psect for function _UART_init
  3071                           
  3072     0E43                     l2295:	
  3073                           ;incstack = 0
  3074                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  3075                           
  3076                           
  3077                           ;main.c: 584: void UART_init(long int baudrate);main.c: 585: {;main.c: 587:     TRISC &=
      +                           ~0x40;
  3078     0E43  30BF               	movlw	191
  3079     0E44  1283               	bcf	3,5	;RP0=0, select bank0
  3080     0E45  1303               	bcf	3,6	;RP1=0, select bank0
  3081     0E46  00E6               	movwf	??_UART_init
  3082     0E47  0866               	movf	??_UART_init,w
  3083     0E48  1683               	bsf	3,5	;RP0=1, select bank1
  3084     0E49  1303               	bcf	3,6	;RP1=0, select bank1
  3085     0E4A  0587               	andwf	7,f	;volatile
  3086     0E4B                     l2297:
  3087                           
  3088                           ;main.c: 588:     TRISC |= 0x80;
  3089     0E4B  1787               	bsf	7,7	;volatile
  3090                           
  3091                           ;main.c: 589:     TXSTA |= 0x24;
  3092     0E4C  3024               	movlw	36
  3093     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3094     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3095     0E4F  00E6               	movwf	??_UART_init
  3096     0E50  0866               	movf	??_UART_init,w
  3097     0E51  1683               	bsf	3,5	;RP0=1, select bank1
  3098     0E52  1303               	bcf	3,6	;RP1=0, select bank1
  3099     0E53  0498               	iorwf	24,f	;volatile
  3100     0E54                     l2299:
  3101                           
  3102                           ;main.c: 590:     RCSTA |= 0x80;
  3103     0E54  1283               	bcf	3,5	;RP0=0, select bank0
  3104     0E55  1303               	bcf	3,6	;RP1=0, select bank0
  3105     0E56  1798               	bsf	24,7	;volatile
  3106     0E57                     l2301:
  3107                           
  3108                           ;main.c: 591:     RCSTA |= 0x10;
  3109     0E57  1618               	bsf	24,4	;volatile
  3110     0E58                     l2303:
  3111                           
  3112                           ;main.c: 594:     SPBRG = (char) (20000000 / (long) (64UL * baudrate)) - 1;
  3113     0E58  0862               	movf	UART_init@baudrate,w
  3114     0E59  00E6               	movwf	??_UART_init
  3115     0E5A  0863               	movf	UART_init@baudrate+1,w
  3116     0E5B  00E7               	movwf	??_UART_init+1
  3117     0E5C  0864               	movf	UART_init@baudrate+2,w
  3118     0E5D  00E8               	movwf	??_UART_init+2
  3119     0E5E  0865               	movf	UART_init@baudrate+3,w
  3120     0E5F  00E9               	movwf	??_UART_init+3
  3121     0E60  3006               	movlw	6
  3122     0E61                     u1995:
  3123     0E61  1003               	clrc
  3124     0E62  0DE6               	rlf	??_UART_init,f
  3125     0E63  0DE7               	rlf	??_UART_init+1,f
  3126     0E64  0DE8               	rlf	??_UART_init+2,f
  3127     0E65  0DE9               	rlf	??_UART_init+3,f
  3128     0E66                     u1990:
  3129     0E66  3EFF               	addlw	-1
  3130     0E67  1D03               	skipz
  3131     0E68  2E61               	goto	u1995
  3132     0E69  0869               	movf	??_UART_init+3,w
  3133     0E6A  00D6               	movwf	___aldiv@divisor+3
  3134     0E6B  0868               	movf	??_UART_init+2,w
  3135     0E6C  00D5               	movwf	___aldiv@divisor+2
  3136     0E6D  0867               	movf	??_UART_init+1,w
  3137     0E6E  00D4               	movwf	___aldiv@divisor+1
  3138     0E6F  0866               	movf	??_UART_init,w
  3139     0E70  00D3               	movwf	___aldiv@divisor
  3140     0E71  3001               	movlw	1
  3141     0E72  00DA               	movwf	___aldiv@dividend+3
  3142     0E73  3031               	movlw	49
  3143     0E74  00D9               	movwf	___aldiv@dividend+2
  3144     0E75  302D               	movlw	45
  3145     0E76  00D8               	movwf	___aldiv@dividend+1
  3146     0E77  3000               	movlw	0
  3147     0E78  00D7               	movwf	___aldiv@dividend
  3148     0E79  120A  118A  24EB  120A  158A  	fcall	___aldiv
  3149     0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  3150     0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  3151     0E80  0853               	movf	?___aldiv,w
  3152     0E81  3EFF               	addlw	255
  3153     0E82  1683               	bsf	3,5	;RP0=1, select bank1
  3154     0E83  1303               	bcf	3,6	;RP1=0, select bank1
  3155     0E84  0099               	movwf	25	;volatile
  3156     0E85                     l2305:
  3157                           
  3158                           ;main.c: 597:     INTCON |= 0x80;
  3159     0E85  178B               	bsf	11,7	;volatile
  3160     0E86                     l2307:
  3161                           
  3162                           ;main.c: 599:     INTCON |= 0x40;
  3163     0E86  170B               	bsf	11,6	;volatile
  3164     0E87                     l2309:
  3165                           
  3166                           ;main.c: 601:     PIE1 |= 0x20;
  3167     0E87  168C               	bsf	12,5	;volatile
  3168     0E88                     l246:
  3169     0E88  0008               	return
  3170     0E89                     __end_of_UART_init:
  3171                           
  3172                           	psect	text13
  3173     0D27                     __ptext13:	
  3174 ;; *************** function _UART_TxString *****************
  3175 ;; Defined at:
  3176 ;;		line 614 in file "main.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  str             1    wreg     PTR const unsigned char 
  3179 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  str             1    3[BANK0 ] PTR const unsigned char 
  3182 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  3183 ;;  n               2    1[BANK0 ] unsigned int 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3193 ;;      Params:         0       0       0       0       0
  3194 ;;      Locals:         0       3       0       0       0
  3195 ;;      Temps:          0       1       0       0       0
  3196 ;;      Totals:         0       4       0       0       0
  3197 ;;Total ram usage:        4 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 2
  3200 ;; This function calls:
  3201 ;;		_UART_TxChar
  3202 ;; This function is called by:
  3203 ;;		_main
  3204 ;; This function uses a non-reentrant model
  3205 ;;
  3206                           
  3207     0D27                     _UART_TxString:	
  3208                           ;psect for function _UART_TxString
  3209                           
  3210                           
  3211                           ;incstack = 0
  3212                           ; Regs used in _UART_TxString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3213                           ;UART_TxString@str stored from wreg
  3214     0D27  1283               	bcf	3,5	;RP0=0, select bank0
  3215     0D28  1303               	bcf	3,6	;RP1=0, select bank0
  3216     0D29  00C9               	movwf	UART_TxString@str
  3217     0D2A                     l2589:
  3218                           
  3219                           ;main.c: 614: void UART_TxString(const char *str);main.c: 615: {;main.c: 616:     unsign
      +                          ed int n = 0;
  3220     0D2A  01C7               	clrf	UART_TxString@n
  3221     0D2B  01C8               	clrf	UART_TxString@n+1
  3222                           
  3223                           ;main.c: 618:     while(str[n] != '\0')
  3224     0D2C  2D40               	goto	l2595
  3225     0D2D                     l2591:
  3226                           
  3227                           ;main.c: 619:     {;main.c: 620:         UART_TxChar(str[n]);
  3228     0D2D  0847               	movf	UART_TxString@n,w
  3229     0D2E  0749               	addwf	UART_TxString@str,w
  3230     0D2F  00C6               	movwf	??_UART_TxString
  3231     0D30  0846               	movf	??_UART_TxString,w
  3232     0D31  0084               	movwf	4
  3233     0D32  0800               	movf	0,w
  3234     0D33  120A  158A  2504  120A  158A  	fcall	_UART_TxChar
  3235     0D38                     l2593:
  3236                           
  3237                           ;main.c: 621:         n++;
  3238     0D38  3001               	movlw	1
  3239     0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3240     0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3241     0D3B  07C7               	addwf	UART_TxString@n,f
  3242     0D3C  1803               	skipnc
  3243     0D3D  0AC8               	incf	UART_TxString@n+1,f
  3244     0D3E  3000               	movlw	0
  3245     0D3F  07C8               	addwf	UART_TxString@n+1,f
  3246     0D40                     l2595:
  3247                           
  3248                           ;main.c: 618:     while(str[n] != '\0')
  3249     0D40  0847               	movf	UART_TxString@n,w
  3250     0D41  0749               	addwf	UART_TxString@str,w
  3251     0D42  00C6               	movwf	??_UART_TxString
  3252     0D43  0846               	movf	??_UART_TxString,w
  3253     0D44  0084               	movwf	4
  3254     0D45  1783               	bsf	3,7	;select IRP bank2
  3255     0D46  0800               	movf	0,w
  3256     0D47  1D03               	btfss	3,2
  3257     0D48  2D4A               	goto	u2441
  3258     0D49  2D4B               	goto	u2440
  3259     0D4A                     u2441:
  3260     0D4A  2D2D               	goto	l2591
  3261     0D4B                     u2440:
  3262     0D4B                     l258:
  3263     0D4B  0008               	return
  3264     0D4C                     __end_of_UART_TxString:
  3265                           
  3266                           	psect	text14
  3267     0D04                     __ptext14:	
  3268 ;; *************** function _UART_TxChar *****************
  3269 ;; Defined at:
  3270 ;;		line 604 in file "main.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  ch              1    wreg     unsigned char 
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;  ch              1    5[COMMON] unsigned char 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         1       0       0       0       0
  3286 ;;      Temps:          1       0       0       0       0
  3287 ;;      Totals:         2       0       0       0       0
  3288 ;;Total ram usage:        2 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 1
  3291 ;; This function calls:
  3292 ;;		Nothing
  3293 ;; This function is called by:
  3294 ;;		_UART_TxString
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298     0D04                     _UART_TxChar:	
  3299                           ;psect for function _UART_TxChar
  3300                           
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _UART_TxChar: [wreg+status,2+status,0]
  3304                           ;UART_TxChar@ch stored from wreg
  3305     0D04  00F5               	movwf	UART_TxChar@ch
  3306     0D05                     l2391:
  3307     0D05                     l249:	
  3308                           ;main.c: 604: void UART_TxChar(char ch);main.c: 605: {;main.c: 607:     while(!(PIR1 & 0
      +                          x10));
  3309                           
  3310     0D05  1283               	bcf	3,5	;RP0=0, select bank0
  3311     0D06  1303               	bcf	3,6	;RP1=0, select bank0
  3312     0D07  1E0C               	btfss	12,4	;volatile
  3313     0D08  2D0A               	goto	u2061
  3314     0D09  2D0B               	goto	u2060
  3315     0D0A                     u2061:
  3316     0D0A  2D05               	goto	l249
  3317     0D0B                     u2060:
  3318     0D0B                     l2393:
  3319                           
  3320                           ;main.c: 609:     PIR1 &= ~0x10;
  3321     0D0B  30EF               	movlw	239
  3322     0D0C  00F4               	movwf	??_UART_TxChar
  3323     0D0D  0874               	movf	??_UART_TxChar,w
  3324     0D0E  058C               	andwf	12,f	;volatile
  3325     0D0F                     l2395:
  3326                           
  3327                           ;main.c: 611:     TXREG = ch;
  3328     0D0F  0875               	movf	UART_TxChar@ch,w
  3329     0D10  0099               	movwf	25	;volatile
  3330     0D11                     l252:
  3331     0D11  0008               	return
  3332     0D12                     __end_of_UART_TxChar:
  3333                           
  3334                           	psect	text15
  3335     044C                     __ptext15:	
  3336 ;; *************** function _SplitPacket *****************
  3337 ;; Defined at:
  3338 ;;		line 415 in file "main.c"
  3339 ;; Parameters:    Size  Location     Type
  3340 ;;  pkt             1    wreg     PTR unsigned char 
  3341 ;;		 -> dato(50), 
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;  pkt             1   20[BANK0 ] PTR unsigned char 
  3344 ;;		 -> dato(50), 
  3345 ;;  i               2   21[BANK0 ] int 
  3346 ;;  part            5   11[BANK0 ] unsigned char [5]
  3347 ;;  i_part          2   18[BANK0 ] int 
  3348 ;;  section         2   16[BANK0 ] int 
  3349 ;;  len             2    9[BANK0 ] int 
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3359 ;;      Params:         0       0       0       0       0
  3360 ;;      Locals:         0      14       0       0       0
  3361 ;;      Temps:          0       3       0       0       0
  3362 ;;      Totals:         0      17       0       0       0
  3363 ;;Total ram usage:       17 bytes
  3364 ;; Hardware stack levels used: 1
  3365 ;; Hardware stack levels required when called: 3
  3366 ;; This function calls:
  3367 ;;		_Length
  3368 ;;		_strcopy
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374     044C                     _SplitPacket:	
  3375                           ;psect for function _SplitPacket
  3376                           
  3377                           
  3378                           ;incstack = 0
  3379                           ; Regs used in _SplitPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3380                           ;SplitPacket@pkt stored from wreg
  3381     044C  1283               	bcf	3,5	;RP0=0, select bank0
  3382     044D  1303               	bcf	3,6	;RP1=0, select bank0
  3383     044E  00DA               	movwf	SplitPacket@pkt
  3384     044F                     l2597:
  3385                           
  3386                           ;main.c: 415: void SplitPacket(char* pkt);main.c: 416: {;main.c: 418:     char part[5];;
      +                          main.c: 421:     int i_part = 0, section = 0, len = Length(pkt);
  3387     044F  01D8               	clrf	SplitPacket@i_part
  3388     0450  01D9               	clrf	SplitPacket@i_part+1
  3389     0451  01D6               	clrf	SplitPacket@section
  3390     0452  01D7               	clrf	SplitPacket@section+1
  3391     0453                     l2599:
  3392     0453  085A               	movf	SplitPacket@pkt,w
  3393     0454  00F4               	movwf	Length@str
  3394     0455  3001               	movlw	1
  3395     0456  00F5               	movwf	Length@str+1
  3396     0457  120A  158A  259E  120A  118A  	fcall	_Length
  3397     045C  0875               	movf	?_Length+1,w
  3398     045D  1283               	bcf	3,5	;RP0=0, select bank0
  3399     045E  1303               	bcf	3,6	;RP1=0, select bank0
  3400     045F  00D0               	movwf	SplitPacket@len+1
  3401     0460  0874               	movf	?_Length,w
  3402     0461  00CF               	movwf	SplitPacket@len
  3403     0462                     l2601:
  3404                           
  3405                           ;main.c: 424:     for(int i = 0; i < len + 1; i++)
  3406     0462  01DB               	clrf	SplitPacket@i
  3407     0463  01DC               	clrf	SplitPacket@i+1
  3408     0464  2CD4               	goto	l2631
  3409     0465                     l2603:
  3410                           
  3411                           ;main.c: 425:     {;main.c: 427:         if(pkt[i] != '/' && pkt[i] != '\0')
  3412     0465  1283               	bcf	3,5	;RP0=0, select bank0
  3413     0466  1303               	bcf	3,6	;RP1=0, select bank0
  3414     0467  085B               	movf	SplitPacket@i,w
  3415     0468  075A               	addwf	SplitPacket@pkt,w
  3416     0469  00CC               	movwf	??_SplitPacket
  3417     046A  084C               	movf	??_SplitPacket,w
  3418     046B  0084               	movwf	4
  3419     046C  302F               	movlw	47
  3420     046D  1783               	bsf	3,7	;select IRP bank2
  3421     046E  0600               	xorwf	0,w
  3422     046F  1903               	btfsc	3,2
  3423     0470  2C72               	goto	u2451
  3424     0471  2C73               	goto	u2450
  3425     0472                     u2451:
  3426     0472  2CB1               	goto	l2623
  3427     0473                     u2450:
  3428     0473                     l2605:
  3429     0473  085B               	movf	SplitPacket@i,w
  3430     0474  075A               	addwf	SplitPacket@pkt,w
  3431     0475  00CC               	movwf	??_SplitPacket
  3432     0476  084C               	movf	??_SplitPacket,w
  3433     0477  0084               	movwf	4
  3434     0478  0800               	movf	0,w
  3435     0479  1903               	btfsc	3,2
  3436     047A  2C7C               	goto	u2461
  3437     047B  2C7D               	goto	u2460
  3438     047C                     u2461:
  3439     047C  2CB1               	goto	l2623
  3440     047D                     u2460:
  3441     047D                     l2607:
  3442                           
  3443                           ;main.c: 428:         {;main.c: 430:             part[i_part] = pkt[i];
  3444     047D  085B               	movf	SplitPacket@i,w
  3445     047E  075A               	addwf	SplitPacket@pkt,w
  3446     047F  00CC               	movwf	??_SplitPacket
  3447     0480  084C               	movf	??_SplitPacket,w
  3448     0481  0084               	movwf	4
  3449     0482  0800               	movf	0,w
  3450     0483  00CD               	movwf	??_SplitPacket+1
  3451     0484  0858               	movf	SplitPacket@i_part,w
  3452     0485  3E51               	addlw	(low (SplitPacket@part| 0))& (0+255)
  3453     0486  0084               	movwf	4
  3454     0487  084D               	movf	??_SplitPacket+1,w
  3455     0488  1383               	bcf	3,7	;select IRP bank0
  3456     0489  0080               	movwf	0
  3457     048A                     l2609:
  3458                           
  3459                           ;main.c: 431:             i_part++;
  3460     048A  3001               	movlw	1
  3461     048B  07D8               	addwf	SplitPacket@i_part,f
  3462     048C  1803               	skipnc
  3463     048D  0AD9               	incf	SplitPacket@i_part+1,f
  3464     048E  3000               	movlw	0
  3465     048F  07D9               	addwf	SplitPacket@i_part+1,f
  3466     0490                     l2611:
  3467                           
  3468                           ;main.c: 432:             part[i_part] = '\0';
  3469     0490  0858               	movf	SplitPacket@i_part,w
  3470     0491  3E51               	addlw	(low (SplitPacket@part| 0))& (0+255)
  3471     0492  0084               	movwf	4
  3472     0493  0180               	clrf	0
  3473                           
  3474                           ;main.c: 433:         }
  3475     0494  2CCE               	goto	l2629
  3476     0495                     l2613:
  3477                           
  3478                           ;main.c: 441:                     source = part[0];
  3479     0495  0851               	movf	SplitPacket@part,w
  3480     0496  1683               	bsf	3,5	;RP0=1, select bank1
  3481     0497  1303               	bcf	3,6	;RP1=0, select bank1
  3482     0498  00AC               	movwf	_source^(0+128)
  3483                           
  3484                           ;main.c: 442:                     break;
  3485     0499  2CC4               	goto	l2625
  3486     049A                     l2615:
  3487                           
  3488                           ;main.c: 444:                     strcopy(id_dest, part);
  3489     049A  3051               	movlw	(low (SplitPacket@part| 0))& (0+255)
  3490     049B  00F4               	movwf	strcopy@source
  3491     049C  30AD               	movlw	(low (_id_dest| 0))& (0+255)
  3492     049D  120A  118A  27CF  120A  118A  	fcall	_strcopy
  3493                           
  3494                           ;main.c: 445:                     break;
  3495     04A2  2CC4               	goto	l2625
  3496     04A3                     l2617:
  3497                           
  3498                           ;main.c: 447:                     type = part[0];
  3499     04A3  0851               	movf	SplitPacket@part,w
  3500     04A4  1683               	bsf	3,5	;RP0=1, select bank1
  3501     04A5  1303               	bcf	3,6	;RP1=0, select bank1
  3502     04A6  00AB               	movwf	_type^(0+128)
  3503                           
  3504                           ;main.c: 448:                     break;
  3505     04A7  2CC4               	goto	l2625
  3506     04A8                     l2619:
  3507                           
  3508                           ;main.c: 450:                     strcopy(datoSeriale, part);
  3509     04A8  3051               	movlw	(low (SplitPacket@part| 0))& (0+255)
  3510     04A9  00F4               	movwf	strcopy@source
  3511     04AA  3035               	movlw	(low (_datoSeriale| 0))& (0+255)
  3512     04AB  120A  118A  27CF  120A  118A  	fcall	_strcopy
  3513                           
  3514                           ;main.c: 451:                     break;
  3515     04B0  2CC4               	goto	l2625
  3516     04B1                     l2623:
  3517                           
  3518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3519                           ; Switch size 1, requested type "simple"
  3520                           ; Number of cases is 1, Range of values is 0 to 0
  3521                           ; switch strategies available:
  3522                           ; Name         Instructions Cycles
  3523                           ; simple_byte            4     3 (average)
  3524                           ; direct_byte           11     8 (fixed)
  3525                           ; jumptable            260     6 (fixed)
  3526                           ;	Chosen strategy is simple_byte
  3527     04B1  0857               	movf	SplitPacket@section+1,w
  3528     04B2  3A00               	xorlw	0	; case 0
  3529     04B3  1903               	skipnz
  3530     04B4  2CB6               	goto	l2809
  3531     04B5  2CC4               	goto	l2625
  3532     04B6                     l2809:
  3533                           
  3534                           ; Switch size 1, requested type "simple"
  3535                           ; Number of cases is 4, Range of values is 0 to 3
  3536                           ; switch strategies available:
  3537                           ; Name         Instructions Cycles
  3538                           ; simple_byte           13     7 (average)
  3539                           ; direct_byte           20     8 (fixed)
  3540                           ; jumptable            260     6 (fixed)
  3541                           ;	Chosen strategy is simple_byte
  3542     04B6  0856               	movf	SplitPacket@section,w
  3543     04B7  3A00               	xorlw	0	; case 0
  3544     04B8  1903               	skipnz
  3545     04B9  2C95               	goto	l2613
  3546     04BA  3A01               	xorlw	1	; case 1
  3547     04BB  1903               	skipnz
  3548     04BC  2C9A               	goto	l2615
  3549     04BD  3A03               	xorlw	3	; case 2
  3550     04BE  1903               	skipnz
  3551     04BF  2CA3               	goto	l2617
  3552     04C0  3A01               	xorlw	1	; case 3
  3553     04C1  1903               	skipnz
  3554     04C2  2CA8               	goto	l2619
  3555     04C3  2CC4               	goto	l2625
  3556     04C4                     l2625:
  3557                           
  3558                           ;main.c: 456:             section++;
  3559     04C4  3001               	movlw	1
  3560     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  3561     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  3562     04C7  07D6               	addwf	SplitPacket@section,f
  3563     04C8  1803               	skipnc
  3564     04C9  0AD7               	incf	SplitPacket@section+1,f
  3565     04CA  3000               	movlw	0
  3566     04CB  07D7               	addwf	SplitPacket@section+1,f
  3567     04CC                     l2627:
  3568                           
  3569                           ;main.c: 458:             i_part = 0;
  3570     04CC  01D8               	clrf	SplitPacket@i_part
  3571     04CD  01D9               	clrf	SplitPacket@i_part+1
  3572     04CE                     l2629:
  3573                           
  3574                           ;main.c: 460:     }
  3575     04CE  3001               	movlw	1
  3576     04CF  07DB               	addwf	SplitPacket@i,f
  3577     04D0  1803               	skipnc
  3578     04D1  0ADC               	incf	SplitPacket@i+1,f
  3579     04D2  3000               	movlw	0
  3580     04D3  07DC               	addwf	SplitPacket@i+1,f
  3581     04D4                     l2631:
  3582     04D4  084F               	movf	SplitPacket@len,w
  3583     04D5  3E01               	addlw	1
  3584     04D6  00CC               	movwf	??_SplitPacket
  3585     04D7  0850               	movf	SplitPacket@len+1,w
  3586     04D8  1803               	skipnc
  3587     04D9  3E01               	addlw	1
  3588     04DA  3E00               	addlw	0
  3589     04DB  00CD               	movwf	??_SplitPacket+1
  3590     04DC  085C               	movf	SplitPacket@i+1,w
  3591     04DD  3A80               	xorlw	128
  3592     04DE  00CE               	movwf	??_SplitPacket+2
  3593     04DF  084D               	movf	??_SplitPacket+1,w
  3594     04E0  3A80               	xorlw	128
  3595     04E1  024E               	subwf	??_SplitPacket+2,w
  3596     04E2  1D03               	skipz
  3597     04E3  2CE6               	goto	u2475
  3598     04E4  084C               	movf	??_SplitPacket,w
  3599     04E5  025B               	subwf	SplitPacket@i,w
  3600     04E6                     u2475:
  3601     04E6  1C03               	skipc
  3602     04E7  2CE9               	goto	u2471
  3603     04E8  2CEA               	goto	u2470
  3604     04E9                     u2471:
  3605     04E9  2C65               	goto	l2603
  3606     04EA                     u2470:
  3607     04EA                     l205:
  3608     04EA  0008               	return
  3609     04EB                     __end_of_SplitPacket:
  3610                           
  3611                           	psect	text16
  3612     07CF                     __ptext16:	
  3613 ;; *************** function _strcopy *****************
  3614 ;; Defined at:
  3615 ;;		line 463 in file "main.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  dest            1    wreg     PTR unsigned char 
  3618 ;;		 -> datoSeriale(17), id_dest(4), 
  3619 ;;  source          1    4[COMMON] PTR unsigned char 
  3620 ;;		 -> SplitPacket@part(5), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  dest            1    3[BANK0 ] PTR unsigned char 
  3623 ;;		 -> datoSeriale(17), id_dest(4), 
  3624 ;;  n               2    4[BANK0 ] int 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         1       0       0       0       0
  3635 ;;      Locals:         0       3       0       0       0
  3636 ;;      Temps:          0       3       0       0       0
  3637 ;;      Totals:         1       6       0       0       0
  3638 ;;Total ram usage:        7 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_SplitPacket
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648     07CF                     _strcopy:	
  3649                           ;psect for function _strcopy
  3650                           
  3651                           
  3652                           ;incstack = 0
  3653                           ; Regs used in _strcopy: [wreg-fsr0h+status,2+status,0]
  3654                           ;strcopy@dest stored from wreg
  3655     07CF  1283               	bcf	3,5	;RP0=0, select bank0
  3656     07D0  1303               	bcf	3,6	;RP1=0, select bank0
  3657     07D1  00C9               	movwf	strcopy@dest
  3658     07D2                     l2371:
  3659                           
  3660                           ;main.c: 463: void strcopy(char* dest, char* source);main.c: 464: {;main.c: 465:     int
      +                           n = 0;
  3661     07D2  01CA               	clrf	strcopy@n
  3662     07D3  01CB               	clrf	strcopy@n+1
  3663                           
  3664                           ;main.c: 468:     while(source[n] != '\0')
  3665     07D4  2FE9               	goto	l2377
  3666     07D5                     l2373:
  3667                           
  3668                           ;main.c: 469:     {;main.c: 470:         dest[n] = source[n];
  3669     07D5  084A               	movf	strcopy@n,w
  3670     07D6  0774               	addwf	strcopy@source,w
  3671     07D7  00C6               	movwf	??_strcopy
  3672     07D8  0846               	movf	??_strcopy,w
  3673     07D9  0084               	movwf	4
  3674     07DA  0800               	movf	0,w
  3675     07DB  00C7               	movwf	??_strcopy+1
  3676     07DC  084A               	movf	strcopy@n,w
  3677     07DD  0749               	addwf	strcopy@dest,w
  3678     07DE  00C8               	movwf	??_strcopy+2
  3679     07DF  0848               	movf	??_strcopy+2,w
  3680     07E0  0084               	movwf	4
  3681     07E1  0847               	movf	??_strcopy+1,w
  3682     07E2  0080               	movwf	0
  3683     07E3                     l2375:
  3684                           
  3685                           ;main.c: 471:         n++;
  3686     07E3  3001               	movlw	1
  3687     07E4  07CA               	addwf	strcopy@n,f
  3688     07E5  1803               	skipnc
  3689     07E6  0ACB               	incf	strcopy@n+1,f
  3690     07E7  3000               	movlw	0
  3691     07E8  07CB               	addwf	strcopy@n+1,f
  3692     07E9                     l2377:
  3693                           
  3694                           ;main.c: 468:     while(source[n] != '\0')
  3695     07E9  084A               	movf	strcopy@n,w
  3696     07EA  0774               	addwf	strcopy@source,w
  3697     07EB  00C6               	movwf	??_strcopy
  3698     07EC  0846               	movf	??_strcopy,w
  3699     07ED  0084               	movwf	4
  3700     07EE  1383               	bcf	3,7	;select IRP bank0
  3701     07EF  0800               	movf	0,w
  3702     07F0  1D03               	btfss	3,2
  3703     07F1  2FF3               	goto	u2041
  3704     07F2  2FF4               	goto	u2040
  3705     07F3                     u2041:
  3706     07F3  2FD5               	goto	l2373
  3707     07F4                     u2040:
  3708     07F4                     l2379:
  3709                           
  3710                           ;main.c: 475:     dest[n] = '\0';
  3711     07F4  084A               	movf	strcopy@n,w
  3712     07F5  0749               	addwf	strcopy@dest,w
  3713     07F6  00C6               	movwf	??_strcopy
  3714     07F7  0846               	movf	??_strcopy,w
  3715     07F8  0084               	movwf	4
  3716     07F9  0180               	clrf	0
  3717     07FA                     l211:
  3718     07FA  0008               	return
  3719     07FB                     __end_of_strcopy:
  3720                           
  3721                           	psect	text17
  3722     0241                     __ptext17:	
  3723 ;; *************** function _ConvertToString *****************
  3724 ;; Defined at:
  3725 ;;		line 333 in file "main.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  n               4   28[BANK0 ] long 
  3728 ;;  str             1   32[BANK0 ] PTR unsigned char 
  3729 ;;		 -> main@num_rand_s(16), 
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  temp            2    0[BANK1 ] int 
  3732 ;;  i               2    4[BANK1 ] int 
  3733 ;;  j               2    2[BANK1 ] int 
  3734 ;;  n_cifre         1    6[BANK1 ] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3744 ;;      Params:         0       5       0       0       0
  3745 ;;      Locals:         0       0       7       0       0
  3746 ;;      Temps:          0       1       0       0       0
  3747 ;;      Totals:         0       6       7       0       0
  3748 ;;Total ram usage:       13 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 3
  3751 ;; This function calls:
  3752 ;;		___aldiv
  3753 ;;		___almod
  3754 ;;		___lmul
  3755 ;;		_pow
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761     0241                     _ConvertToString:	
  3762                           ;psect for function _ConvertToString
  3763                           
  3764     0241                     l2535:	
  3765                           ;incstack = 0
  3766                           ; Regs used in _ConvertToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3767                           
  3768                           
  3769                           ;main.c: 333: void ConvertToString(long n, char* str);main.c: 334: {;main.c: 337:     in
      +                          t i = 0, j = 0;
  3770     0241  1683               	bsf	3,5	;RP0=1, select bank1
  3771     0242  1303               	bcf	3,6	;RP1=0, select bank1
  3772     0243  01B5               	clrf	ConvertToString@i^(0+128)
  3773     0244  01B6               	clrf	(ConvertToString@i+1)^(0+128)
  3774     0245  01B3               	clrf	ConvertToString@j^(0+128)
  3775     0246  01B4               	clrf	(ConvertToString@j+1)^(0+128)
  3776     0247                     l2537:
  3777                           
  3778                           ;main.c: 338:     if(n < 0)
  3779     0247  1283               	bcf	3,5	;RP0=0, select bank0
  3780     0248  1303               	bcf	3,6	;RP1=0, select bank0
  3781     0249  1FE5               	btfss	ConvertToString@n+3,7
  3782     024A  2A4C               	goto	u2371
  3783     024B  2A4D               	goto	u2370
  3784     024C                     u2371:
  3785     024C  2A79               	goto	l2545
  3786     024D                     u2370:
  3787     024D                     l2539:
  3788                           
  3789                           ;main.c: 339:     {;main.c: 340:         i = 1;
  3790     024D  3001               	movlw	1
  3791     024E  1683               	bsf	3,5	;RP0=1, select bank1
  3792     024F  1303               	bcf	3,6	;RP1=0, select bank1
  3793     0250  00B5               	movwf	ConvertToString@i^(0+128)
  3794     0251  3000               	movlw	0
  3795     0252  00B6               	movwf	(ConvertToString@i^(0+128)+1)
  3796     0253                     l2541:
  3797                           
  3798                           ;main.c: 341:         str[0] = '-';
  3799     0253  1283               	bcf	3,5	;RP0=0, select bank0
  3800     0254  1303               	bcf	3,6	;RP1=0, select bank0
  3801     0255  0866               	movf	ConvertToString@str,w
  3802     0256  0084               	movwf	4
  3803     0257  302D               	movlw	45
  3804     0258  1783               	bsf	3,7	;select IRP bank2
  3805     0259  0080               	movwf	0
  3806     025A                     l2543:
  3807                           
  3808                           ;main.c: 342:         n *= -1;
  3809     025A  30FF               	movlw	255
  3810     025B  00C9               	movwf	___lmul@multiplier+3
  3811     025C  30FF               	movlw	255
  3812     025D  00C8               	movwf	___lmul@multiplier+2
  3813     025E  30FF               	movlw	255
  3814     025F  00C7               	movwf	___lmul@multiplier+1
  3815     0260  30FF               	movlw	255
  3816     0261  00C6               	movwf	___lmul@multiplier
  3817     0262  0865               	movf	ConvertToString@n+3,w
  3818     0263  00CD               	movwf	___lmul@multiplicand+3
  3819     0264  0864               	movf	ConvertToString@n+2,w
  3820     0265  00CC               	movwf	___lmul@multiplicand+2
  3821     0266  0863               	movf	ConvertToString@n+1,w
  3822     0267  00CB               	movwf	___lmul@multiplicand+1
  3823     0268  0862               	movf	ConvertToString@n,w
  3824     0269  00CA               	movwf	___lmul@multiplicand
  3825     026A  120A  158A  26D0  120A  118A  	fcall	___lmul
  3826     026F  1283               	bcf	3,5	;RP0=0, select bank0
  3827     0270  1303               	bcf	3,6	;RP1=0, select bank0
  3828     0271  0849               	movf	?___lmul+3,w
  3829     0272  00E5               	movwf	ConvertToString@n+3
  3830     0273  0848               	movf	?___lmul+2,w
  3831     0274  00E4               	movwf	ConvertToString@n+2
  3832     0275  0847               	movf	?___lmul+1,w
  3833     0276  00E3               	movwf	ConvertToString@n+1
  3834     0277  0846               	movf	?___lmul,w
  3835     0278  00E2               	movwf	ConvertToString@n
  3836     0279                     l2545:
  3837                           
  3838                           ;main.c: 345:     char n_cifre = 1;
  3839     0279  1683               	bsf	3,5	;RP0=1, select bank1
  3840     027A  1303               	bcf	3,6	;RP1=0, select bank1
  3841     027B  01B7               	clrf	ConvertToString@n_cifre^(0+128)
  3842     027C  0AB7               	incf	ConvertToString@n_cifre^(0+128),f
  3843                           
  3844                           ;main.c: 347:     while(n / pow(10, n_cifre))
  3845     027D  2A84               	goto	l2549
  3846     027E                     l2547:
  3847                           
  3848                           ;main.c: 348:         n_cifre++;
  3849     027E  3001               	movlw	1
  3850     027F  00E7               	movwf	??_ConvertToString
  3851     0280  0867               	movf	??_ConvertToString,w
  3852     0281  1683               	bsf	3,5	;RP0=1, select bank1
  3853     0282  1303               	bcf	3,6	;RP1=0, select bank1
  3854     0283  07B7               	addwf	ConvertToString@n_cifre^(0+128),f
  3855     0284                     l2549:
  3856                           
  3857                           ;main.c: 347:     while(n / pow(10, n_cifre))
  3858     0284  0837               	movf	ConvertToString@n_cifre^(0+128),w
  3859     0285  1283               	bcf	3,5	;RP0=0, select bank0
  3860     0286  1303               	bcf	3,6	;RP1=0, select bank0
  3861     0287  00CA               	movwf	pow@exp
  3862     0288  300A               	movlw	10
  3863     0289  120A  158A  25CA  120A  118A  	fcall	_pow
  3864     028E  1283               	bcf	3,5	;RP0=0, select bank0
  3865     028F  1303               	bcf	3,6	;RP1=0, select bank0
  3866     0290  084A               	movf	?_pow,w
  3867     0291  00D3               	movwf	___aldiv@divisor
  3868     0292  084B               	movf	?_pow+1,w
  3869     0293  00D4               	movwf	___aldiv@divisor+1
  3870     0294  3000               	movlw	0
  3871     0295  1BD4               	btfsc	___aldiv@divisor+1,7
  3872     0296  30FF               	movlw	255
  3873     0297  00D5               	movwf	___aldiv@divisor+2
  3874     0298  00D6               	movwf	___aldiv@divisor+3
  3875     0299  0865               	movf	ConvertToString@n+3,w
  3876     029A  00DA               	movwf	___aldiv@dividend+3
  3877     029B  0864               	movf	ConvertToString@n+2,w
  3878     029C  00D9               	movwf	___aldiv@dividend+2
  3879     029D  0863               	movf	ConvertToString@n+1,w
  3880     029E  00D8               	movwf	___aldiv@dividend+1
  3881     029F  0862               	movf	ConvertToString@n,w
  3882     02A0  00D7               	movwf	___aldiv@dividend
  3883     02A1  120A  118A  24EB  120A  118A  	fcall	___aldiv
  3884     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3885     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3886     02A8  0856               	movf	?___aldiv+3,w
  3887     02A9  0455               	iorwf	?___aldiv+2,w
  3888     02AA  0454               	iorwf	?___aldiv+1,w
  3889     02AB  0453               	iorwf	?___aldiv,w
  3890     02AC  1D03               	skipz
  3891     02AD  2AAF               	goto	u2381
  3892     02AE  2AB0               	goto	u2380
  3893     02AF                     u2381:
  3894     02AF  2A7E               	goto	l2547
  3895     02B0                     u2380:
  3896     02B0  2B2C               	goto	l2561
  3897     02B1                     l2551:
  3898                           
  3899                           ;main.c: 351:     {;main.c: 352:         int temp = pow(10, (char)(n_cifre - 1 - j));
  3900     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  3901     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  3902     02B3  0833               	movf	ConvertToString@j^(0+128),w
  3903     02B4  0237               	subwf	ConvertToString@n_cifre^(0+128),w
  3904     02B5  3EFF               	addlw	255
  3905     02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3906     02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3907     02B8  00CA               	movwf	pow@exp
  3908     02B9  300A               	movlw	10
  3909     02BA  120A  158A  25CA  120A  118A  	fcall	_pow
  3910     02BF  1283               	bcf	3,5	;RP0=0, select bank0
  3911     02C0  1303               	bcf	3,6	;RP1=0, select bank0
  3912     02C1  084B               	movf	?_pow+1,w
  3913     02C2  1683               	bsf	3,5	;RP0=1, select bank1
  3914     02C3  1303               	bcf	3,6	;RP1=0, select bank1
  3915     02C4  00B2               	movwf	(ConvertToString@temp+1)^(0+128)
  3916     02C5  1283               	bcf	3,5	;RP0=0, select bank0
  3917     02C6  1303               	bcf	3,6	;RP1=0, select bank0
  3918     02C7  084A               	movf	?_pow,w
  3919     02C8  1683               	bsf	3,5	;RP0=1, select bank1
  3920     02C9  1303               	bcf	3,6	;RP1=0, select bank1
  3921     02CA  00B1               	movwf	ConvertToString@temp^(0+128)
  3922     02CB                     l2553:
  3923                           
  3924                           ;main.c: 354:         str[i] = (char)(n/temp) + '0';
  3925     02CB  0835               	movf	ConvertToString@i^(0+128),w
  3926     02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3927     02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3928     02CE  0766               	addwf	ConvertToString@str,w
  3929     02CF  00E7               	movwf	??_ConvertToString
  3930     02D0  0867               	movf	??_ConvertToString,w
  3931     02D1  0084               	movwf	4
  3932     02D2  1683               	bsf	3,5	;RP0=1, select bank1
  3933     02D3  1303               	bcf	3,6	;RP1=0, select bank1
  3934     02D4  0831               	movf	ConvertToString@temp^(0+128),w
  3935     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3936     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3937     02D7  00D3               	movwf	___aldiv@divisor
  3938     02D8  1683               	bsf	3,5	;RP0=1, select bank1
  3939     02D9  1303               	bcf	3,6	;RP1=0, select bank1
  3940     02DA  0832               	movf	(ConvertToString@temp+1)^(0+128),w
  3941     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3942     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  3943     02DD  00D4               	movwf	___aldiv@divisor+1
  3944     02DE  3000               	movlw	0
  3945     02DF  1BD4               	btfsc	___aldiv@divisor+1,7
  3946     02E0  30FF               	movlw	255
  3947     02E1  00D5               	movwf	___aldiv@divisor+2
  3948     02E2  00D6               	movwf	___aldiv@divisor+3
  3949     02E3  0865               	movf	ConvertToString@n+3,w
  3950     02E4  00DA               	movwf	___aldiv@dividend+3
  3951     02E5  0864               	movf	ConvertToString@n+2,w
  3952     02E6  00D9               	movwf	___aldiv@dividend+2
  3953     02E7  0863               	movf	ConvertToString@n+1,w
  3954     02E8  00D8               	movwf	___aldiv@dividend+1
  3955     02E9  0862               	movf	ConvertToString@n,w
  3956     02EA  00D7               	movwf	___aldiv@dividend
  3957     02EB  120A  118A  24EB  120A  118A  	fcall	___aldiv
  3958     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  3959     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  3960     02F2  0853               	movf	?___aldiv,w
  3961     02F3  3E30               	addlw	48
  3962     02F4  1783               	bsf	3,7	;select IRP bank2
  3963     02F5  0080               	movwf	0
  3964     02F6                     l2555:
  3965                           
  3966                           ;main.c: 356:         n = n % temp;
  3967     02F6  1683               	bsf	3,5	;RP0=1, select bank1
  3968     02F7  1303               	bcf	3,6	;RP1=0, select bank1
  3969     02F8  0831               	movf	ConvertToString@temp^(0+128),w
  3970     02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3971     02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3972     02FB  00C6               	movwf	___almod@divisor
  3973     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3974     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3975     02FE  0832               	movf	(ConvertToString@temp+1)^(0+128),w
  3976     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  3977     0300  1303               	bcf	3,6	;RP1=0, select bank0
  3978     0301  00C7               	movwf	___almod@divisor+1
  3979     0302  3000               	movlw	0
  3980     0303  1BC7               	btfsc	___almod@divisor+1,7
  3981     0304  30FF               	movlw	255
  3982     0305  00C8               	movwf	___almod@divisor+2
  3983     0306  00C9               	movwf	___almod@divisor+3
  3984     0307  0865               	movf	ConvertToString@n+3,w
  3985     0308  00CD               	movwf	___almod@dividend+3
  3986     0309  0864               	movf	ConvertToString@n+2,w
  3987     030A  00CC               	movwf	___almod@dividend+2
  3988     030B  0863               	movf	ConvertToString@n+1,w
  3989     030C  00CB               	movwf	___almod@dividend+1
  3990     030D  0862               	movf	ConvertToString@n,w
  3991     030E  00CA               	movwf	___almod@dividend
  3992     030F  120A  118A  268B  120A  118A  	fcall	___almod
  3993     0314  1283               	bcf	3,5	;RP0=0, select bank0
  3994     0315  1303               	bcf	3,6	;RP1=0, select bank0
  3995     0316  0849               	movf	?___almod+3,w
  3996     0317  00E5               	movwf	ConvertToString@n+3
  3997     0318  0848               	movf	?___almod+2,w
  3998     0319  00E4               	movwf	ConvertToString@n+2
  3999     031A  0847               	movf	?___almod+1,w
  4000     031B  00E3               	movwf	ConvertToString@n+1
  4001     031C  0846               	movf	?___almod,w
  4002     031D  00E2               	movwf	ConvertToString@n
  4003     031E                     l2557:
  4004                           
  4005                           ;main.c: 357:         i++;
  4006     031E  3001               	movlw	1
  4007     031F  1683               	bsf	3,5	;RP0=1, select bank1
  4008     0320  1303               	bcf	3,6	;RP1=0, select bank1
  4009     0321  07B5               	addwf	ConvertToString@i^(0+128),f
  4010     0322  1803               	skipnc
  4011     0323  0AB6               	incf	(ConvertToString@i+1)^(0+128),f
  4012     0324  3000               	movlw	0
  4013     0325  07B6               	addwf	(ConvertToString@i+1)^(0+128),f
  4014     0326                     l2559:
  4015                           
  4016                           ;main.c: 358:         j++;
  4017     0326  3001               	movlw	1
  4018     0327  07B3               	addwf	ConvertToString@j^(0+128),f
  4019     0328  1803               	skipnc
  4020     0329  0AB4               	incf	(ConvertToString@j+1)^(0+128),f
  4021     032A  3000               	movlw	0
  4022     032B  07B4               	addwf	(ConvertToString@j+1)^(0+128),f
  4023     032C                     l2561:
  4024                           
  4025                           ;main.c: 350:     while(j < n_cifre)
  4026     032C  1683               	bsf	3,5	;RP0=1, select bank1
  4027     032D  1303               	bcf	3,6	;RP1=0, select bank1
  4028     032E  0834               	movf	(ConvertToString@j+1)^(0+128),w
  4029     032F  3A80               	xorlw	128
  4030     0330  1283               	bcf	3,5	;RP0=0, select bank0
  4031     0331  1303               	bcf	3,6	;RP1=0, select bank0
  4032     0332  00E7               	movwf	??_ConvertToString
  4033     0333  3080               	movlw	128
  4034     0334  0267               	subwf	??_ConvertToString,w
  4035     0335  1D03               	skipz
  4036     0336  2B3B               	goto	u2395
  4037     0337  1683               	bsf	3,5	;RP0=1, select bank1
  4038     0338  1303               	bcf	3,6	;RP1=0, select bank1
  4039     0339  0837               	movf	ConvertToString@n_cifre^(0+128),w
  4040     033A  0233               	subwf	ConvertToString@j^(0+128),w
  4041     033B                     u2395:
  4042     033B  1C03               	skipc
  4043     033C  2B3E               	goto	u2391
  4044     033D  2B3F               	goto	u2390
  4045     033E                     u2391:
  4046     033E  2AB1               	goto	l2551
  4047     033F                     u2390:
  4048     033F                     l2563:
  4049                           
  4050                           ;main.c: 361:     str[i] = '\0';
  4051     033F  1683               	bsf	3,5	;RP0=1, select bank1
  4052     0340  1303               	bcf	3,6	;RP1=0, select bank1
  4053     0341  0835               	movf	ConvertToString@i^(0+128),w
  4054     0342  1283               	bcf	3,5	;RP0=0, select bank0
  4055     0343  1303               	bcf	3,6	;RP1=0, select bank0
  4056     0344  0766               	addwf	ConvertToString@str,w
  4057     0345  00E7               	movwf	??_ConvertToString
  4058     0346  0867               	movf	??_ConvertToString,w
  4059     0347  0084               	movwf	4
  4060     0348  1783               	bsf	3,7	;select IRP bank2
  4061     0349  0180               	clrf	0
  4062     034A                     l173:
  4063     034A  0008               	return
  4064     034B                     __end_of_ConvertToString:
  4065                           
  4066                           	psect	text18
  4067     0DCA                     __ptext18:	
  4068 ;; *************** function _pow *****************
  4069 ;; Defined at:
  4070 ;;		line 322 in file "main.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  b               1    wreg     unsigned char 
  4073 ;;  exp             1    4[BANK0 ] unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  b               1    8[BANK0 ] unsigned char 
  4076 ;;  i               2    9[BANK0 ] int 
  4077 ;;  n               2   11[BANK0 ] int 
  4078 ;; Return value:  Size  Location     Type
  4079 ;;                  2    4[BANK0 ] int 
  4080 ;; Registers used:
  4081 ;;		wreg, status,2, status,0, pclath, cstack
  4082 ;; Tracked objects:
  4083 ;;		On entry : 0/0
  4084 ;;		On exit  : 0/0
  4085 ;;		Unchanged: 0/0
  4086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4087 ;;      Params:         0       2       0       0       0
  4088 ;;      Locals:         0       5       0       0       0
  4089 ;;      Temps:          0       2       0       0       0
  4090 ;;      Totals:         0       9       0       0       0
  4091 ;;Total ram usage:        9 bytes
  4092 ;; Hardware stack levels used: 1
  4093 ;; Hardware stack levels required when called: 2
  4094 ;; This function calls:
  4095 ;;		___wmul
  4096 ;; This function is called by:
  4097 ;;		_ConvertToString
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101     0DCA                     _pow:	
  4102                           ;psect for function _pow
  4103                           
  4104                           
  4105                           ;incstack = 0
  4106                           ; Regs used in _pow: [wreg+status,2+status,0+pclath+cstack]
  4107                           ;pow@b stored from wreg
  4108     0DCA  1283               	bcf	3,5	;RP0=0, select bank0
  4109     0DCB  1303               	bcf	3,6	;RP1=0, select bank0
  4110     0DCC  00CE               	movwf	pow@b
  4111     0DCD                     l2343:
  4112                           
  4113                           ;main.c: 322: int pow(char b, char exp);main.c: 323: {;main.c: 324:     int n = 1;
  4114     0DCD  3001               	movlw	1
  4115     0DCE  00D1               	movwf	pow@n
  4116     0DCF  3000               	movlw	0
  4117     0DD0  00D2               	movwf	pow@n+1
  4118     0DD1                     l2345:
  4119                           
  4120                           ;main.c: 325:     for(int i = 0; i < exp; i++)
  4121     0DD1  01CF               	clrf	pow@i
  4122     0DD2  01D0               	clrf	pow@i+1
  4123     0DD3  2DF2               	goto	l2351
  4124     0DD4                     l2347:
  4125                           
  4126                           ;main.c: 326:     {;main.c: 327:         n *= b;
  4127     0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  4128     0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  4129     0DD6  084E               	movf	pow@b,w
  4130     0DD7  00CC               	movwf	??_pow
  4131     0DD8  01CD               	clrf	??_pow+1
  4132     0DD9  084C               	movf	??_pow,w
  4133     0DDA  00C6               	movwf	___wmul@multiplier
  4134     0DDB  084D               	movf	??_pow+1,w
  4135     0DDC  00C7               	movwf	___wmul@multiplier+1
  4136     0DDD  0852               	movf	pow@n+1,w
  4137     0DDE  00C9               	movwf	___wmul@multiplicand+1
  4138     0DDF  0851               	movf	pow@n,w
  4139     0DE0  00C8               	movwf	___wmul@multiplicand
  4140     0DE1  120A  158A  254C  120A  158A  	fcall	___wmul
  4141     0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  4142     0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  4143     0DE8  0847               	movf	?___wmul+1,w
  4144     0DE9  00D2               	movwf	pow@n+1
  4145     0DEA  0846               	movf	?___wmul,w
  4146     0DEB  00D1               	movwf	pow@n
  4147     0DEC                     l2349:
  4148                           
  4149                           ;main.c: 328:     }
  4150     0DEC  3001               	movlw	1
  4151     0DED  07CF               	addwf	pow@i,f
  4152     0DEE  1803               	skipnc
  4153     0DEF  0AD0               	incf	pow@i+1,f
  4154     0DF0  3000               	movlw	0
  4155     0DF1  07D0               	addwf	pow@i+1,f
  4156     0DF2                     l2351:
  4157     0DF2  0850               	movf	pow@i+1,w
  4158     0DF3  3A80               	xorlw	128
  4159     0DF4  00CC               	movwf	??_pow
  4160     0DF5  3080               	movlw	128
  4161     0DF6  024C               	subwf	??_pow,w
  4162     0DF7  1D03               	skipz
  4163     0DF8  2DFB               	goto	u2005
  4164     0DF9  084A               	movf	pow@exp,w
  4165     0DFA  024F               	subwf	pow@i,w
  4166     0DFB                     u2005:
  4167     0DFB  1C03               	skipc
  4168     0DFC  2DFE               	goto	u2001
  4169     0DFD  2DFF               	goto	u2000
  4170     0DFE                     u2001:
  4171     0DFE  2DD4               	goto	l2347
  4172     0DFF                     u2000:
  4173     0DFF                     l2353:
  4174                           
  4175                           ;main.c: 329:     return n;
  4176     0DFF  1283               	bcf	3,5	;RP0=0, select bank0
  4177     0E00  1303               	bcf	3,6	;RP1=0, select bank0
  4178     0E01  0852               	movf	pow@n+1,w
  4179     0E02  00CB               	movwf	?_pow+1
  4180     0E03  0851               	movf	pow@n,w
  4181     0E04  00CA               	movwf	?_pow
  4182     0E05                     l163:
  4183     0E05  0008               	return
  4184     0E06                     __end_of_pow:
  4185                           
  4186                           	psect	text19
  4187     0D4C                     __ptext19:	
  4188 ;; *************** function ___wmul *****************
  4189 ;; Defined at:
  4190 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4193 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4194 ;; Auto vars:     Size  Location     Type
  4195 ;;  product         2    4[COMMON] unsigned int 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  2    0[BANK0 ] unsigned int 
  4198 ;; Registers used:
  4199 ;;		wreg, status,2, status,0
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4205 ;;      Params:         0       4       0       0       0
  4206 ;;      Locals:         2       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0
  4208 ;;      Totals:         2       4       0       0       0
  4209 ;;Total ram usage:        6 bytes
  4210 ;; Hardware stack levels used: 1
  4211 ;; Hardware stack levels required when called: 1
  4212 ;; This function calls:
  4213 ;;		Nothing
  4214 ;; This function is called by:
  4215 ;;		_pow
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219     0D4C                     ___wmul:	
  4220                           ;psect for function ___wmul
  4221                           
  4222     0D4C                     l2203:	
  4223                           ;incstack = 0
  4224                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4225                           
  4226     0D4C  01F4               	clrf	___wmul@product
  4227     0D4D  01F5               	clrf	___wmul@product+1
  4228     0D4E                     l2205:
  4229     0D4E  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0D4F  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0D50  1C46               	btfss	___wmul@multiplier,0
  4232     0D51  2D53               	goto	u1771
  4233     0D52  2D54               	goto	u1770
  4234     0D53                     u1771:
  4235     0D53  2D5A               	goto	l351
  4236     0D54                     u1770:
  4237     0D54                     l2207:
  4238     0D54  0848               	movf	___wmul@multiplicand,w
  4239     0D55  07F4               	addwf	___wmul@product,f
  4240     0D56  1803               	skipnc
  4241     0D57  0AF5               	incf	___wmul@product+1,f
  4242     0D58  0849               	movf	___wmul@multiplicand+1,w
  4243     0D59  07F5               	addwf	___wmul@product+1,f
  4244     0D5A                     l351:
  4245     0D5A  3001               	movlw	1
  4246     0D5B                     u1785:
  4247     0D5B  1003               	clrc
  4248     0D5C  0DC8               	rlf	___wmul@multiplicand,f
  4249     0D5D  0DC9               	rlf	___wmul@multiplicand+1,f
  4250     0D5E  3EFF               	addlw	-1
  4251     0D5F  1D03               	skipz
  4252     0D60  2D5B               	goto	u1785
  4253     0D61                     l2209:
  4254     0D61  3001               	movlw	1
  4255     0D62                     u1795:
  4256     0D62  1003               	clrc
  4257     0D63  0CC7               	rrf	___wmul@multiplier+1,f
  4258     0D64  0CC6               	rrf	___wmul@multiplier,f
  4259     0D65  3EFF               	addlw	-1
  4260     0D66  1D03               	skipz
  4261     0D67  2D62               	goto	u1795
  4262     0D68                     l2211:
  4263     0D68  0846               	movf	___wmul@multiplier,w
  4264     0D69  0447               	iorwf	___wmul@multiplier+1,w
  4265     0D6A  1D03               	btfss	3,2
  4266     0D6B  2D6D               	goto	u1801
  4267     0D6C  2D6E               	goto	u1800
  4268     0D6D                     u1801:
  4269     0D6D  2D4E               	goto	l2205
  4270     0D6E                     u1800:
  4271     0D6E                     l2213:
  4272     0D6E  0875               	movf	___wmul@product+1,w
  4273     0D6F  00C7               	movwf	?___wmul+1
  4274     0D70  0874               	movf	___wmul@product,w
  4275     0D71  00C6               	movwf	?___wmul
  4276     0D72                     l353:
  4277     0D72  0008               	return
  4278     0D73                     __end_of___wmul:
  4279                           
  4280                           	psect	text20
  4281     0ED0                     __ptext20:	
  4282 ;; *************** function ___lmul *****************
  4283 ;; Defined at:
  4284 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  multiplier      4    0[BANK0 ] unsigned long 
  4287 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;  product         4    8[BANK0 ] unsigned long 
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  4    0[BANK0 ] unsigned long 
  4292 ;; Registers used:
  4293 ;;		wreg, status,2, status,0
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4299 ;;      Params:         0       8       0       0       0
  4300 ;;      Locals:         0       4       0       0       0
  4301 ;;      Temps:          1       0       0       0       0
  4302 ;;      Totals:         1      12       0       0       0
  4303 ;;Total ram usage:       13 bytes
  4304 ;; Hardware stack levels used: 1
  4305 ;; Hardware stack levels required when called: 1
  4306 ;; This function calls:
  4307 ;;		Nothing
  4308 ;; This function is called by:
  4309 ;;		_ConvertToString
  4310 ;;		_rand
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314     0ED0                     ___lmul:	
  4315                           ;psect for function ___lmul
  4316                           
  4317     0ED0                     l2217:	
  4318                           ;incstack = 0
  4319                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4320                           
  4321     0ED0  3000               	movlw	0
  4322     0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  4323     0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  4324     0ED3  00D1               	movwf	___lmul@product+3
  4325     0ED4  3000               	movlw	0
  4326     0ED5  00D0               	movwf	___lmul@product+2
  4327     0ED6  3000               	movlw	0
  4328     0ED7  00CF               	movwf	___lmul@product+1
  4329     0ED8  3000               	movlw	0
  4330     0ED9  00CE               	movwf	___lmul@product
  4331     0EDA                     l2219:
  4332     0EDA  1C46               	btfss	___lmul@multiplier,0
  4333     0EDB  2EDD               	goto	u1811
  4334     0EDC  2EDE               	goto	u1810
  4335     0EDD                     u1811:
  4336     0EDD  2EF5               	goto	l2223
  4337     0EDE                     u1810:
  4338     0EDE                     l2221:
  4339     0EDE  084A               	movf	___lmul@multiplicand,w
  4340     0EDF  07CE               	addwf	___lmul@product,f
  4341     0EE0  084B               	movf	___lmul@multiplicand+1,w
  4342     0EE1  1103               	clrz
  4343     0EE2  1803               	skipnc
  4344     0EE3  3E01               	addlw	1
  4345     0EE4  1903               	skipnz
  4346     0EE5  2EE7               	goto	u1821
  4347     0EE6  07CF               	addwf	___lmul@product+1,f
  4348     0EE7                     u1821:
  4349     0EE7  084C               	movf	___lmul@multiplicand+2,w
  4350     0EE8  1103               	clrz
  4351     0EE9  1803               	skipnc
  4352     0EEA  3E01               	addlw	1
  4353     0EEB  1903               	skipnz
  4354     0EEC  2EEE               	goto	u1822
  4355     0EED  07D0               	addwf	___lmul@product+2,f
  4356     0EEE                     u1822:
  4357     0EEE  084D               	movf	___lmul@multiplicand+3,w
  4358     0EEF  1103               	clrz
  4359     0EF0  1803               	skipnc
  4360     0EF1  3E01               	addlw	1
  4361     0EF2  1903               	skipnz
  4362     0EF3  2EF5               	goto	u1823
  4363     0EF4  07D1               	addwf	___lmul@product+3,f
  4364     0EF5                     u1823:
  4365     0EF5                     l2223:
  4366     0EF5  3001               	movlw	1
  4367     0EF6  00F4               	movwf	??___lmul
  4368     0EF7                     u1835:
  4369     0EF7  1003               	clrc
  4370     0EF8  0DCA               	rlf	___lmul@multiplicand,f
  4371     0EF9  0DCB               	rlf	___lmul@multiplicand+1,f
  4372     0EFA  0DCC               	rlf	___lmul@multiplicand+2,f
  4373     0EFB  0DCD               	rlf	___lmul@multiplicand+3,f
  4374     0EFC  0BF4               	decfsz	??___lmul,f
  4375     0EFD  2EF7               	goto	u1835
  4376     0EFE                     l2225:
  4377     0EFE  3001               	movlw	1
  4378     0EFF                     u1845:
  4379     0EFF  1003               	clrc
  4380     0F00  0CC9               	rrf	___lmul@multiplier+3,f
  4381     0F01  0CC8               	rrf	___lmul@multiplier+2,f
  4382     0F02  0CC7               	rrf	___lmul@multiplier+1,f
  4383     0F03  0CC6               	rrf	___lmul@multiplier,f
  4384     0F04  3EFF               	addlw	-1
  4385     0F05  1D03               	skipz
  4386     0F06  2EFF               	goto	u1845
  4387     0F07  0849               	movf	___lmul@multiplier+3,w
  4388     0F08  0448               	iorwf	___lmul@multiplier+2,w
  4389     0F09  0447               	iorwf	___lmul@multiplier+1,w
  4390     0F0A  0446               	iorwf	___lmul@multiplier,w
  4391     0F0B  1D03               	skipz
  4392     0F0C  2F0E               	goto	u1851
  4393     0F0D  2F0F               	goto	u1850
  4394     0F0E                     u1851:
  4395     0F0E  2EDA               	goto	l2219
  4396     0F0F                     u1850:
  4397     0F0F                     l2227:
  4398     0F0F  0851               	movf	___lmul@product+3,w
  4399     0F10  00C9               	movwf	?___lmul+3
  4400     0F11  0850               	movf	___lmul@product+2,w
  4401     0F12  00C8               	movwf	?___lmul+2
  4402     0F13  084F               	movf	___lmul@product+1,w
  4403     0F14  00C7               	movwf	?___lmul+1
  4404     0F15  084E               	movf	___lmul@product,w
  4405     0F16  00C6               	movwf	?___lmul
  4406     0F17                     l365:
  4407     0F17  0008               	return
  4408     0F18                     __end_of___lmul:
  4409                           
  4410                           	psect	text21
  4411     068B                     __ptext21:	
  4412 ;; *************** function ___almod *****************
  4413 ;; Defined at:
  4414 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\almod.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  divisor         4    0[BANK0 ] long 
  4417 ;;  dividend        4    4[BANK0 ] long 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  sign            1    9[BANK0 ] unsigned char 
  4420 ;;  counter         1    8[BANK0 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  4    0[BANK0 ] long 
  4423 ;; Registers used:
  4424 ;;		wreg, status,2, status,0
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4430 ;;      Params:         0       8       0       0       0
  4431 ;;      Locals:         0       2       0       0       0
  4432 ;;      Temps:          1       0       0       0       0
  4433 ;;      Totals:         1      10       0       0       0
  4434 ;;Total ram usage:       11 bytes
  4435 ;; Hardware stack levels used: 1
  4436 ;; Hardware stack levels required when called: 1
  4437 ;; This function calls:
  4438 ;;		Nothing
  4439 ;; This function is called by:
  4440 ;;		_ConvertToString
  4441 ;; This function uses a non-reentrant model
  4442 ;;
  4443                           
  4444     068B                     ___almod:	
  4445                           ;psect for function ___almod
  4446                           
  4447     068B                     l2397:	
  4448                           ;incstack = 0
  4449                           ; Regs used in ___almod: [wreg+status,2+status,0]
  4450                           
  4451     068B  1283               	bcf	3,5	;RP0=0, select bank0
  4452     068C  1303               	bcf	3,6	;RP1=0, select bank0
  4453     068D  01CF               	clrf	___almod@sign
  4454     068E                     l2399:
  4455     068E  1FCD               	btfss	___almod@dividend+3,7
  4456     068F  2E91               	goto	u2071
  4457     0690  2E92               	goto	u2070
  4458     0691                     u2071:
  4459     0691  2E9F               	goto	l429
  4460     0692                     u2070:
  4461     0692                     l2401:
  4462     0692  09CA               	comf	___almod@dividend,f
  4463     0693  09CB               	comf	___almod@dividend+1,f
  4464     0694  09CC               	comf	___almod@dividend+2,f
  4465     0695  09CD               	comf	___almod@dividend+3,f
  4466     0696  0ACA               	incf	___almod@dividend,f
  4467     0697  1903               	skipnz
  4468     0698  0ACB               	incf	___almod@dividend+1,f
  4469     0699  1903               	skipnz
  4470     069A  0ACC               	incf	___almod@dividend+2,f
  4471     069B  1903               	skipnz
  4472     069C  0ACD               	incf	___almod@dividend+3,f
  4473     069D  01CF               	clrf	___almod@sign
  4474     069E  0ACF               	incf	___almod@sign,f
  4475     069F                     l429:
  4476     069F  1FC9               	btfss	___almod@divisor+3,7
  4477     06A0  2EA2               	goto	u2081
  4478     06A1  2EA3               	goto	u2080
  4479     06A2                     u2081:
  4480     06A2  2EAE               	goto	l2405
  4481     06A3                     u2080:
  4482     06A3                     l2403:
  4483     06A3  09C6               	comf	___almod@divisor,f
  4484     06A4  09C7               	comf	___almod@divisor+1,f
  4485     06A5  09C8               	comf	___almod@divisor+2,f
  4486     06A6  09C9               	comf	___almod@divisor+3,f
  4487     06A7  0AC6               	incf	___almod@divisor,f
  4488     06A8  1903               	skipnz
  4489     06A9  0AC7               	incf	___almod@divisor+1,f
  4490     06AA  1903               	skipnz
  4491     06AB  0AC8               	incf	___almod@divisor+2,f
  4492     06AC  1903               	skipnz
  4493     06AD  0AC9               	incf	___almod@divisor+3,f
  4494     06AE                     l2405:
  4495     06AE  0849               	movf	___almod@divisor+3,w
  4496     06AF  0448               	iorwf	___almod@divisor+2,w
  4497     06B0  0447               	iorwf	___almod@divisor+1,w
  4498     06B1  0446               	iorwf	___almod@divisor,w
  4499     06B2  1903               	skipnz
  4500     06B3  2EB5               	goto	u2091
  4501     06B4  2EB6               	goto	u2090
  4502     06B5                     u2091:
  4503     06B5  2EF9               	goto	l2421
  4504     06B6                     u2090:
  4505     06B6                     l2407:
  4506     06B6  01CE               	clrf	___almod@counter
  4507     06B7  0ACE               	incf	___almod@counter,f
  4508     06B8  2EC6               	goto	l2411
  4509     06B9                     l2409:
  4510     06B9  3001               	movlw	1
  4511     06BA  00F4               	movwf	??___almod
  4512     06BB                     u2105:
  4513     06BB  1003               	clrc
  4514     06BC  0DC6               	rlf	___almod@divisor,f
  4515     06BD  0DC7               	rlf	___almod@divisor+1,f
  4516     06BE  0DC8               	rlf	___almod@divisor+2,f
  4517     06BF  0DC9               	rlf	___almod@divisor+3,f
  4518     06C0  0BF4               	decfsz	??___almod,f
  4519     06C1  2EBB               	goto	u2105
  4520     06C2  3001               	movlw	1
  4521     06C3  00F4               	movwf	??___almod
  4522     06C4  0874               	movf	??___almod,w
  4523     06C5  07CE               	addwf	___almod@counter,f
  4524     06C6                     l2411:
  4525     06C6  1FC9               	btfss	___almod@divisor+3,7
  4526     06C7  2EC9               	goto	u2111
  4527     06C8  2ECA               	goto	u2110
  4528     06C9                     u2111:
  4529     06C9  2EB9               	goto	l2409
  4530     06CA                     u2110:
  4531     06CA                     l2413:
  4532     06CA  0849               	movf	___almod@divisor+3,w
  4533     06CB  024D               	subwf	___almod@dividend+3,w
  4534     06CC  1D03               	skipz
  4535     06CD  2ED8               	goto	u2125
  4536     06CE  0848               	movf	___almod@divisor+2,w
  4537     06CF  024C               	subwf	___almod@dividend+2,w
  4538     06D0  1D03               	skipz
  4539     06D1  2ED8               	goto	u2125
  4540     06D2  0847               	movf	___almod@divisor+1,w
  4541     06D3  024B               	subwf	___almod@dividend+1,w
  4542     06D4  1D03               	skipz
  4543     06D5  2ED8               	goto	u2125
  4544     06D6  0846               	movf	___almod@divisor,w
  4545     06D7  024A               	subwf	___almod@dividend,w
  4546     06D8                     u2125:
  4547     06D8  1C03               	skipc
  4548     06D9  2EDB               	goto	u2121
  4549     06DA  2EDC               	goto	u2120
  4550     06DB                     u2121:
  4551     06DB  2EEA               	goto	l2417
  4552     06DC                     u2120:
  4553     06DC                     l2415:
  4554     06DC  0846               	movf	___almod@divisor,w
  4555     06DD  02CA               	subwf	___almod@dividend,f
  4556     06DE  0847               	movf	___almod@divisor+1,w
  4557     06DF  1C03               	skipc
  4558     06E0  0F47               	incfsz	___almod@divisor+1,w
  4559     06E1  02CB               	subwf	___almod@dividend+1,f
  4560     06E2  0848               	movf	___almod@divisor+2,w
  4561     06E3  1C03               	skipc
  4562     06E4  0F48               	incfsz	___almod@divisor+2,w
  4563     06E5  02CC               	subwf	___almod@dividend+2,f
  4564     06E6  0849               	movf	___almod@divisor+3,w
  4565     06E7  1C03               	skipc
  4566     06E8  0F49               	incfsz	___almod@divisor+3,w
  4567     06E9  02CD               	subwf	___almod@dividend+3,f
  4568     06EA                     l2417:
  4569     06EA  3001               	movlw	1
  4570     06EB                     u2135:
  4571     06EB  1003               	clrc
  4572     06EC  0CC9               	rrf	___almod@divisor+3,f
  4573     06ED  0CC8               	rrf	___almod@divisor+2,f
  4574     06EE  0CC7               	rrf	___almod@divisor+1,f
  4575     06EF  0CC6               	rrf	___almod@divisor,f
  4576     06F0  3EFF               	addlw	-1
  4577     06F1  1D03               	skipz
  4578     06F2  2EEB               	goto	u2135
  4579     06F3                     l2419:
  4580     06F3  3001               	movlw	1
  4581     06F4  02CE               	subwf	___almod@counter,f
  4582     06F5  1D03               	btfss	3,2
  4583     06F6  2EF8               	goto	u2141
  4584     06F7  2EF9               	goto	u2140
  4585     06F8                     u2141:
  4586     06F8  2ECA               	goto	l2413
  4587     06F9                     u2140:
  4588     06F9                     l2421:
  4589     06F9  084F               	movf	___almod@sign,w
  4590     06FA  1903               	btfsc	3,2
  4591     06FB  2EFD               	goto	u2151
  4592     06FC  2EFE               	goto	u2150
  4593     06FD                     u2151:
  4594     06FD  2F09               	goto	l2425
  4595     06FE                     u2150:
  4596     06FE                     l2423:
  4597     06FE  09CA               	comf	___almod@dividend,f
  4598     06FF  09CB               	comf	___almod@dividend+1,f
  4599     0700  09CC               	comf	___almod@dividend+2,f
  4600     0701  09CD               	comf	___almod@dividend+3,f
  4601     0702  0ACA               	incf	___almod@dividend,f
  4602     0703  1903               	skipnz
  4603     0704  0ACB               	incf	___almod@dividend+1,f
  4604     0705  1903               	skipnz
  4605     0706  0ACC               	incf	___almod@dividend+2,f
  4606     0707  1903               	skipnz
  4607     0708  0ACD               	incf	___almod@dividend+3,f
  4608     0709                     l2425:
  4609     0709  084D               	movf	___almod@dividend+3,w
  4610     070A  00C9               	movwf	?___almod+3
  4611     070B  084C               	movf	___almod@dividend+2,w
  4612     070C  00C8               	movwf	?___almod+2
  4613     070D  084B               	movf	___almod@dividend+1,w
  4614     070E  00C7               	movwf	?___almod+1
  4615     070F  084A               	movf	___almod@dividend,w
  4616     0710  00C6               	movwf	?___almod
  4617     0711                     l439:
  4618     0711  0008               	return
  4619     0712                     __end_of___almod:
  4620                           
  4621                           	psect	text22
  4622     04EB                     __ptext22:	
  4623 ;; *************** function ___aldiv *****************
  4624 ;; Defined at:
  4625 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  divisor         4   13[BANK0 ] long 
  4628 ;;  dividend        4   17[BANK0 ] long 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  quotient        4   24[BANK0 ] long 
  4631 ;;  sign            1   23[BANK0 ] unsigned char 
  4632 ;;  counter         1   22[BANK0 ] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  4   13[BANK0 ] long 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4642 ;;      Params:         0       8       0       0       0
  4643 ;;      Locals:         0       6       0       0       0
  4644 ;;      Temps:          0       1       0       0       0
  4645 ;;      Totals:         0      15       0       0       0
  4646 ;;Total ram usage:       15 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_ConvertToString
  4653 ;;		_UART_init
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657     04EB                     ___aldiv:	
  4658                           ;psect for function ___aldiv
  4659                           
  4660     04EB                     l2231:	
  4661                           ;incstack = 0
  4662                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4663                           
  4664     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  4665     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  4666     04ED  01DD               	clrf	___aldiv@sign
  4667     04EE                     l2233:
  4668     04EE  1FD6               	btfss	___aldiv@divisor+3,7
  4669     04EF  2CF1               	goto	u1861
  4670     04F0  2CF2               	goto	u1860
  4671     04F1                     u1861:
  4672     04F1  2CFF               	goto	l416
  4673     04F2                     u1860:
  4674     04F2                     l2235:
  4675     04F2  09D3               	comf	___aldiv@divisor,f
  4676     04F3  09D4               	comf	___aldiv@divisor+1,f
  4677     04F4  09D5               	comf	___aldiv@divisor+2,f
  4678     04F5  09D6               	comf	___aldiv@divisor+3,f
  4679     04F6  0AD3               	incf	___aldiv@divisor,f
  4680     04F7  1903               	skipnz
  4681     04F8  0AD4               	incf	___aldiv@divisor+1,f
  4682     04F9  1903               	skipnz
  4683     04FA  0AD5               	incf	___aldiv@divisor+2,f
  4684     04FB  1903               	skipnz
  4685     04FC  0AD6               	incf	___aldiv@divisor+3,f
  4686     04FD  01DD               	clrf	___aldiv@sign
  4687     04FE  0ADD               	incf	___aldiv@sign,f
  4688     04FF                     l416:
  4689     04FF  1FDA               	btfss	___aldiv@dividend+3,7
  4690     0500  2D02               	goto	u1871
  4691     0501  2D03               	goto	u1870
  4692     0502                     u1871:
  4693     0502  2D12               	goto	l2241
  4694     0503                     u1870:
  4695     0503                     l2237:
  4696     0503  09D7               	comf	___aldiv@dividend,f
  4697     0504  09D8               	comf	___aldiv@dividend+1,f
  4698     0505  09D9               	comf	___aldiv@dividend+2,f
  4699     0506  09DA               	comf	___aldiv@dividend+3,f
  4700     0507  0AD7               	incf	___aldiv@dividend,f
  4701     0508  1903               	skipnz
  4702     0509  0AD8               	incf	___aldiv@dividend+1,f
  4703     050A  1903               	skipnz
  4704     050B  0AD9               	incf	___aldiv@dividend+2,f
  4705     050C  1903               	skipnz
  4706     050D  0ADA               	incf	___aldiv@dividend+3,f
  4707     050E                     l2239:
  4708     050E  3001               	movlw	1
  4709     050F  00DB               	movwf	??___aldiv
  4710     0510  085B               	movf	??___aldiv,w
  4711     0511  06DD               	xorwf	___aldiv@sign,f
  4712     0512                     l2241:
  4713     0512  3000               	movlw	0
  4714     0513  00E1               	movwf	___aldiv@quotient+3
  4715     0514  3000               	movlw	0
  4716     0515  00E0               	movwf	___aldiv@quotient+2
  4717     0516  3000               	movlw	0
  4718     0517  00DF               	movwf	___aldiv@quotient+1
  4719     0518  3000               	movlw	0
  4720     0519  00DE               	movwf	___aldiv@quotient
  4721     051A                     l2243:
  4722     051A  0856               	movf	___aldiv@divisor+3,w
  4723     051B  0455               	iorwf	___aldiv@divisor+2,w
  4724     051C  0454               	iorwf	___aldiv@divisor+1,w
  4725     051D  0453               	iorwf	___aldiv@divisor,w
  4726     051E  1903               	skipnz
  4727     051F  2D21               	goto	u1881
  4728     0520  2D22               	goto	u1880
  4729     0521                     u1881:
  4730     0521  2D6F               	goto	l2263
  4731     0522                     u1880:
  4732     0522                     l2245:
  4733     0522  01DC               	clrf	___aldiv@counter
  4734     0523  0ADC               	incf	___aldiv@counter,f
  4735     0524  2D32               	goto	l2249
  4736     0525                     l2247:
  4737     0525  3001               	movlw	1
  4738     0526  00DB               	movwf	??___aldiv
  4739     0527                     u1895:
  4740     0527  1003               	clrc
  4741     0528  0DD3               	rlf	___aldiv@divisor,f
  4742     0529  0DD4               	rlf	___aldiv@divisor+1,f
  4743     052A  0DD5               	rlf	___aldiv@divisor+2,f
  4744     052B  0DD6               	rlf	___aldiv@divisor+3,f
  4745     052C  0BDB               	decfsz	??___aldiv,f
  4746     052D  2D27               	goto	u1895
  4747     052E  3001               	movlw	1
  4748     052F  00DB               	movwf	??___aldiv
  4749     0530  085B               	movf	??___aldiv,w
  4750     0531  07DC               	addwf	___aldiv@counter,f
  4751     0532                     l2249:
  4752     0532  1FD6               	btfss	___aldiv@divisor+3,7
  4753     0533  2D35               	goto	u1901
  4754     0534  2D36               	goto	u1900
  4755     0535                     u1901:
  4756     0535  2D25               	goto	l2247
  4757     0536                     u1900:
  4758     0536                     l2251:
  4759     0536  3001               	movlw	1
  4760     0537  00DB               	movwf	??___aldiv
  4761     0538                     u1915:
  4762     0538  1003               	clrc
  4763     0539  0DDE               	rlf	___aldiv@quotient,f
  4764     053A  0DDF               	rlf	___aldiv@quotient+1,f
  4765     053B  0DE0               	rlf	___aldiv@quotient+2,f
  4766     053C  0DE1               	rlf	___aldiv@quotient+3,f
  4767     053D  0BDB               	decfsz	??___aldiv,f
  4768     053E  2D38               	goto	u1915
  4769     053F                     l2253:
  4770     053F  0856               	movf	___aldiv@divisor+3,w
  4771     0540  025A               	subwf	___aldiv@dividend+3,w
  4772     0541  1D03               	skipz
  4773     0542  2D4D               	goto	u1925
  4774     0543  0855               	movf	___aldiv@divisor+2,w
  4775     0544  0259               	subwf	___aldiv@dividend+2,w
  4776     0545  1D03               	skipz
  4777     0546  2D4D               	goto	u1925
  4778     0547  0854               	movf	___aldiv@divisor+1,w
  4779     0548  0258               	subwf	___aldiv@dividend+1,w
  4780     0549  1D03               	skipz
  4781     054A  2D4D               	goto	u1925
  4782     054B  0853               	movf	___aldiv@divisor,w
  4783     054C  0257               	subwf	___aldiv@dividend,w
  4784     054D                     u1925:
  4785     054D  1C03               	skipc
  4786     054E  2D50               	goto	u1921
  4787     054F  2D51               	goto	u1920
  4788     0550                     u1921:
  4789     0550  2D60               	goto	l2259
  4790     0551                     u1920:
  4791     0551                     l2255:
  4792     0551  0853               	movf	___aldiv@divisor,w
  4793     0552  02D7               	subwf	___aldiv@dividend,f
  4794     0553  0854               	movf	___aldiv@divisor+1,w
  4795     0554  1C03               	skipc
  4796     0555  0F54               	incfsz	___aldiv@divisor+1,w
  4797     0556  02D8               	subwf	___aldiv@dividend+1,f
  4798     0557  0855               	movf	___aldiv@divisor+2,w
  4799     0558  1C03               	skipc
  4800     0559  0F55               	incfsz	___aldiv@divisor+2,w
  4801     055A  02D9               	subwf	___aldiv@dividend+2,f
  4802     055B  0856               	movf	___aldiv@divisor+3,w
  4803     055C  1C03               	skipc
  4804     055D  0F56               	incfsz	___aldiv@divisor+3,w
  4805     055E  02DA               	subwf	___aldiv@dividend+3,f
  4806     055F                     l2257:
  4807     055F  145E               	bsf	___aldiv@quotient,0
  4808     0560                     l2259:
  4809     0560  3001               	movlw	1
  4810     0561                     u1935:
  4811     0561  1003               	clrc
  4812     0562  0CD6               	rrf	___aldiv@divisor+3,f
  4813     0563  0CD5               	rrf	___aldiv@divisor+2,f
  4814     0564  0CD4               	rrf	___aldiv@divisor+1,f
  4815     0565  0CD3               	rrf	___aldiv@divisor,f
  4816     0566  3EFF               	addlw	-1
  4817     0567  1D03               	skipz
  4818     0568  2D61               	goto	u1935
  4819     0569                     l2261:
  4820     0569  3001               	movlw	1
  4821     056A  02DC               	subwf	___aldiv@counter,f
  4822     056B  1D03               	btfss	3,2
  4823     056C  2D6E               	goto	u1941
  4824     056D  2D6F               	goto	u1940
  4825     056E                     u1941:
  4826     056E  2D36               	goto	l2251
  4827     056F                     u1940:
  4828     056F                     l2263:
  4829     056F  085D               	movf	___aldiv@sign,w
  4830     0570  1903               	btfsc	3,2
  4831     0571  2D73               	goto	u1951
  4832     0572  2D74               	goto	u1950
  4833     0573                     u1951:
  4834     0573  2D7F               	goto	l2267
  4835     0574                     u1950:
  4836     0574                     l2265:
  4837     0574  09DE               	comf	___aldiv@quotient,f
  4838     0575  09DF               	comf	___aldiv@quotient+1,f
  4839     0576  09E0               	comf	___aldiv@quotient+2,f
  4840     0577  09E1               	comf	___aldiv@quotient+3,f
  4841     0578  0ADE               	incf	___aldiv@quotient,f
  4842     0579  1903               	skipnz
  4843     057A  0ADF               	incf	___aldiv@quotient+1,f
  4844     057B  1903               	skipnz
  4845     057C  0AE0               	incf	___aldiv@quotient+2,f
  4846     057D  1903               	skipnz
  4847     057E  0AE1               	incf	___aldiv@quotient+3,f
  4848     057F                     l2267:
  4849     057F  0861               	movf	___aldiv@quotient+3,w
  4850     0580  00D6               	movwf	?___aldiv+3
  4851     0581  0860               	movf	___aldiv@quotient+2,w
  4852     0582  00D5               	movwf	?___aldiv+2
  4853     0583  085F               	movf	___aldiv@quotient+1,w
  4854     0584  00D4               	movwf	?___aldiv+1
  4855     0585  085E               	movf	___aldiv@quotient,w
  4856     0586  00D3               	movwf	?___aldiv
  4857     0587                     l426:
  4858     0587  0008               	return
  4859     0588                     __end_of___aldiv:
  4860                           
  4861                           	psect	text23
  4862     0F60                     __ptext23:	
  4863 ;; *************** function _ConcatToPacket *****************
  4864 ;; Defined at:
  4865 ;;		line 365 in file "main.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;  pkt             1    wreg     PTR unsigned char 
  4868 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  4869 ;;  str             2   17[BANK0 ] PTR unsigned char 
  4870 ;;		 -> STR_14(4), STR_13(5), STR_8(4), STR_7(5), 
  4871 ;;		 -> STR_1(5), main@num_rand_s(16), 
  4872 ;;  delim           1   19[BANK0 ] unsigned char 
  4873 ;; Auto vars:     Size  Location     Type
  4874 ;;  pkt             1   23[BANK0 ] PTR unsigned char 
  4875 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  4876 ;;  packet_lengt    2   21[BANK0 ] int 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4886 ;;      Params:         0       3       0       0       0
  4887 ;;      Locals:         0       3       0       0       0
  4888 ;;      Temps:          0       1       0       0       0
  4889 ;;      Totals:         0       7       0       0       0
  4890 ;;Total ram usage:        7 bytes
  4891 ;; Hardware stack levels used: 1
  4892 ;; Hardware stack levels required when called: 4
  4893 ;; This function calls:
  4894 ;;		_strcat
  4895 ;; This function is called by:
  4896 ;;		_main
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900     0F60                     _ConcatToPacket:	
  4901                           ;psect for function _ConcatToPacket
  4902                           
  4903                           
  4904                           ;incstack = 0
  4905                           ; Regs used in _ConcatToPacket: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4906                           ;ConcatToPacket@pkt stored from wreg
  4907     0F60  1283               	bcf	3,5	;RP0=0, select bank0
  4908     0F61  1303               	bcf	3,6	;RP1=0, select bank0
  4909     0F62  00DD               	movwf	ConcatToPacket@pkt
  4910     0F63                     l2573:
  4911                           
  4912                           ;main.c: 365: void ConcatToPacket(char* pkt, char* str, char delim);main.c: 366: {;main.
      +                          c: 368:     int packet_length = strcat(pkt, str);
  4913     0F63  0857               	movf	ConcatToPacket@str,w
  4914     0F64  00CB               	movwf	strcat@source
  4915     0F65  0858               	movf	ConcatToPacket@str+1,w
  4916     0F66  00CC               	movwf	strcat@source+1
  4917     0F67  085D               	movf	ConcatToPacket@pkt,w
  4918     0F68  120A  118A  2712  120A  158A  	fcall	_strcat
  4919     0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  4920     0F6E  1303               	bcf	3,6	;RP1=0, select bank0
  4921     0F6F  084C               	movf	?_strcat+1,w
  4922     0F70  00DC               	movwf	ConcatToPacket@packet_length+1
  4923     0F71  084B               	movf	?_strcat,w
  4924     0F72  00DB               	movwf	ConcatToPacket@packet_length
  4925     0F73                     l2575:
  4926                           
  4927                           ;main.c: 370:     if(delim != ' ')
  4928     0F73  3020               	movlw	32
  4929     0F74  0659               	xorwf	ConcatToPacket@delim,w
  4930     0F75  1903               	btfsc	3,2
  4931     0F76  2F78               	goto	u2431
  4932     0F77  2F79               	goto	u2430
  4933     0F78                     u2431:
  4934     0F78  2F88               	goto	l2581
  4935     0F79                     u2430:
  4936     0F79                     l2577:
  4937                           
  4938                           ;main.c: 371:     {;main.c: 373:         pkt[packet_length] = delim;
  4939     0F79  085B               	movf	ConcatToPacket@packet_length,w
  4940     0F7A  075D               	addwf	ConcatToPacket@pkt,w
  4941     0F7B  00DA               	movwf	??_ConcatToPacket
  4942     0F7C  085A               	movf	??_ConcatToPacket,w
  4943     0F7D  0084               	movwf	4
  4944     0F7E  0859               	movf	ConcatToPacket@delim,w
  4945     0F7F  1783               	bsf	3,7	;select IRP bank2
  4946     0F80  0080               	movwf	0
  4947     0F81                     l2579:
  4948                           
  4949                           ;main.c: 374:         packet_length++;
  4950     0F81  3001               	movlw	1
  4951     0F82  07DB               	addwf	ConcatToPacket@packet_length,f
  4952     0F83  1803               	skipnc
  4953     0F84  0ADC               	incf	ConcatToPacket@packet_length+1,f
  4954     0F85  3000               	movlw	0
  4955     0F86  07DC               	addwf	ConcatToPacket@packet_length+1,f
  4956                           
  4957                           ;main.c: 375:     }
  4958     0F87  2FA3               	goto	l2587
  4959     0F88                     l2581:
  4960                           
  4961                           ;main.c: 378:     {;main.c: 380:         pkt[packet_length] = '\r';
  4962     0F88  085B               	movf	ConcatToPacket@packet_length,w
  4963     0F89  075D               	addwf	ConcatToPacket@pkt,w
  4964     0F8A  00DA               	movwf	??_ConcatToPacket
  4965     0F8B  085A               	movf	??_ConcatToPacket,w
  4966     0F8C  0084               	movwf	4
  4967     0F8D  300D               	movlw	13
  4968     0F8E  1783               	bsf	3,7	;select IRP bank2
  4969     0F8F  0080               	movwf	0
  4970     0F90                     l2583:
  4971                           
  4972                           ;main.c: 381:         packet_length++;
  4973     0F90  3001               	movlw	1
  4974     0F91  07DB               	addwf	ConcatToPacket@packet_length,f
  4975     0F92  1803               	skipnc
  4976     0F93  0ADC               	incf	ConcatToPacket@packet_length+1,f
  4977     0F94  3000               	movlw	0
  4978     0F95  07DC               	addwf	ConcatToPacket@packet_length+1,f
  4979     0F96                     l2585:
  4980                           
  4981                           ;main.c: 382:         pkt[packet_length] = '\n';
  4982     0F96  085B               	movf	ConcatToPacket@packet_length,w
  4983     0F97  075D               	addwf	ConcatToPacket@pkt,w
  4984     0F98  00DA               	movwf	??_ConcatToPacket
  4985     0F99  085A               	movf	??_ConcatToPacket,w
  4986     0F9A  0084               	movwf	4
  4987     0F9B  300A               	movlw	10
  4988     0F9C  0080               	movwf	0
  4989                           
  4990                           ;main.c: 383:         packet_length++;
  4991     0F9D  3001               	movlw	1
  4992     0F9E  07DB               	addwf	ConcatToPacket@packet_length,f
  4993     0F9F  1803               	skipnc
  4994     0FA0  0ADC               	incf	ConcatToPacket@packet_length+1,f
  4995     0FA1  3000               	movlw	0
  4996     0FA2  07DC               	addwf	ConcatToPacket@packet_length+1,f
  4997     0FA3                     l2587:
  4998                           
  4999                           ;main.c: 386:     pkt[packet_length] = '\0';
  5000     0FA3  085B               	movf	ConcatToPacket@packet_length,w
  5001     0FA4  075D               	addwf	ConcatToPacket@pkt,w
  5002     0FA5  00DA               	movwf	??_ConcatToPacket
  5003     0FA6  085A               	movf	??_ConcatToPacket,w
  5004     0FA7  0084               	movwf	4
  5005     0FA8  0180               	clrf	0
  5006     0FA9                     l178:
  5007     0FA9  0008               	return
  5008     0FAA                     __end_of_ConcatToPacket:
  5009                           
  5010                           	psect	text24
  5011     0712                     __ptext24:	
  5012 ;; *************** function _strcat *****************
  5013 ;; Defined at:
  5014 ;;		line 398 in file "main.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  dest            1    wreg     PTR unsigned char 
  5017 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  5018 ;;  source          2    5[BANK0 ] PTR unsigned char 
  5019 ;;		 -> STR_14(4), STR_13(5), STR_8(4), STR_7(5), 
  5020 ;;		 -> STR_1(5), main@num_rand_s(16), 
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;  dest            1   12[BANK0 ] PTR unsigned char 
  5023 ;;		 -> main@packet_206(14), main@packet_199(14), main@packet(14), 
  5024 ;;  length_dest     2   15[BANK0 ] int 
  5025 ;;  n               2   13[BANK0 ] int 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    5[BANK0 ] int 
  5028 ;; Registers used:
  5029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5035 ;;      Params:         0       2       0       0       0
  5036 ;;      Locals:         0       5       0       0       0
  5037 ;;      Temps:          0       5       0       0       0
  5038 ;;      Totals:         0      12       0       0       0
  5039 ;;Total ram usage:       12 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; Hardware stack levels required when called: 3
  5042 ;; This function calls:
  5043 ;;		_Length
  5044 ;; This function is called by:
  5045 ;;		_ConcatToPacket
  5046 ;; This function uses a non-reentrant model
  5047 ;;
  5048                           
  5049     0712                     _strcat:	
  5050                           ;psect for function _strcat
  5051                           
  5052                           
  5053                           ;incstack = 0
  5054                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5055                           ;strcat@dest stored from wreg
  5056     0712  1283               	bcf	3,5	;RP0=0, select bank0
  5057     0713  1303               	bcf	3,6	;RP1=0, select bank0
  5058     0714  00D2               	movwf	strcat@dest
  5059     0715                     l2357:
  5060                           
  5061                           ;main.c: 398: int strcat(char* dest, char* source);main.c: 399: {;main.c: 401:     int n
      +                           = 0, length_dest = Length(dest);
  5062     0715  01D3               	clrf	strcat@n
  5063     0716  01D4               	clrf	strcat@n+1
  5064     0717                     l2359:
  5065     0717  0852               	movf	strcat@dest,w
  5066     0718  00F4               	movwf	Length@str
  5067     0719  3001               	movlw	1
  5068     071A  00F5               	movwf	Length@str+1
  5069     071B  120A  158A  259E  120A  118A  	fcall	_Length
  5070     0720  0875               	movf	?_Length+1,w
  5071     0721  1283               	bcf	3,5	;RP0=0, select bank0
  5072     0722  1303               	bcf	3,6	;RP1=0, select bank0
  5073     0723  00D6               	movwf	strcat@length_dest+1
  5074     0724  0874               	movf	?_Length,w
  5075     0725  00D5               	movwf	strcat@length_dest
  5076                           
  5077                           ;main.c: 404:     while(source[n] != '\0')
  5078     0726  2F53               	goto	l187
  5079     0727                     l2361:
  5080                           
  5081                           ;main.c: 405:     {;main.c: 406:         dest[length_dest] = source[n];
  5082     0727  0853               	movf	strcat@n,w
  5083     0728  074B               	addwf	strcat@source,w
  5084     0729  00CE               	movwf	??_strcat+1
  5085     072A  084C               	movf	strcat@source+1,w
  5086     072B  00CD               	movwf	??_strcat
  5087     072C  1803               	skipnc
  5088     072D  0ACD               	incf	??_strcat,f
  5089     072E  1FD3               	btfss	strcat@n,7
  5090     072F  2F31               	goto	u2010
  5091     0730  03CD               	decf	??_strcat,f
  5092     0731                     u2010:
  5093     0731  1283               	bcf	3,5	;RP0=0, select bank0
  5094     0732  1303               	bcf	3,6	;RP1=0, select bank0
  5095     0733  084D               	movf	??_strcat,w
  5096     0734  00CF               	movwf	??_strcat+2
  5097     0735  084F               	movf	??_strcat+2,w
  5098     0736  00FF               	movwf	btemp+1
  5099     0737  084E               	movf	??_strcat+1,w
  5100     0738  0084               	movwf	4
  5101     0739  120A  118A  2600  120A  118A  	fcall	stringtab
  5102     073E  00D0               	movwf	??_strcat+3
  5103     073F  0855               	movf	strcat@length_dest,w
  5104     0740  0752               	addwf	strcat@dest,w
  5105     0741  00D1               	movwf	??_strcat+4
  5106     0742  0851               	movf	??_strcat+4,w
  5107     0743  0084               	movwf	4
  5108     0744  0850               	movf	??_strcat+3,w
  5109     0745  1783               	bsf	3,7	;select IRP bank2
  5110     0746  0080               	movwf	0
  5111     0747                     l2363:
  5112                           
  5113                           ;main.c: 407:         n++;
  5114     0747  3001               	movlw	1
  5115     0748  07D3               	addwf	strcat@n,f
  5116     0749  1803               	skipnc
  5117     074A  0AD4               	incf	strcat@n+1,f
  5118     074B  3000               	movlw	0
  5119     074C  07D4               	addwf	strcat@n+1,f
  5120     074D                     l2365:
  5121                           
  5122                           ;main.c: 408:         length_dest++;
  5123     074D  3001               	movlw	1
  5124     074E  07D5               	addwf	strcat@length_dest,f
  5125     074F  1803               	skipnc
  5126     0750  0AD6               	incf	strcat@length_dest+1,f
  5127     0751  3000               	movlw	0
  5128     0752  07D6               	addwf	strcat@length_dest+1,f
  5129     0753                     l187:	
  5130                           ;main.c: 409:     }
  5131                           
  5132                           
  5133                           ;main.c: 404:     while(source[n] != '\0')
  5134     0753  0853               	movf	strcat@n,w
  5135     0754  074B               	addwf	strcat@source,w
  5136     0755  00CE               	movwf	??_strcat+1
  5137     0756  084C               	movf	strcat@source+1,w
  5138     0757  00CD               	movwf	??_strcat
  5139     0758  1803               	skipnc
  5140     0759  0ACD               	incf	??_strcat,f
  5141     075A  1FD3               	btfss	strcat@n,7
  5142     075B  2F5D               	goto	u2020
  5143     075C  03CD               	decf	??_strcat,f
  5144     075D                     u2020:
  5145     075D  1283               	bcf	3,5	;RP0=0, select bank0
  5146     075E  1303               	bcf	3,6	;RP1=0, select bank0
  5147     075F  084D               	movf	??_strcat,w
  5148     0760  00CF               	movwf	??_strcat+2
  5149     0761  084F               	movf	??_strcat+2,w
  5150     0762  00FF               	movwf	btemp+1
  5151     0763  084E               	movf	??_strcat+1,w
  5152     0764  0084               	movwf	4
  5153     0765  120A  118A  2600  120A  118A  	fcall	stringtab
  5154     076A  3A00               	xorlw	0
  5155     076B  1D03               	skipz
  5156     076C  2F6E               	goto	u2031
  5157     076D  2F6F               	goto	u2030
  5158     076E                     u2031:
  5159     076E  2F27               	goto	l2361
  5160     076F                     u2030:
  5161     076F                     l2367:
  5162                           
  5163                           ;main.c: 412:     return length_dest;
  5164     076F  0856               	movf	strcat@length_dest+1,w
  5165     0770  00CC               	movwf	?_strcat+1
  5166     0771  0855               	movf	strcat@length_dest,w
  5167     0772  00CB               	movwf	?_strcat
  5168     0773                     l190:
  5169     0773  0008               	return
  5170     0774                     __end_of_strcat:
  5171                           
  5172                           	psect	text25
  5173     0D9E                     __ptext25:	
  5174 ;; *************** function _Length *****************
  5175 ;; Defined at:
  5176 ;;		line 389 in file "main.c"
  5177 ;; Parameters:    Size  Location     Type
  5178 ;;  str             2    4[COMMON] PTR unsigned char 
  5179 ;;		 -> datoSeriale(17), datoTastierino(17), main@packet_206(14), main@packet_199(14), 
  5180 ;;		 -> STR_3(5), id_dest(4), dato(50), main@packet(14), 
  5181 ;; Auto vars:     Size  Location     Type
  5182 ;;  len             2    3[BANK0 ] int 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  2    4[COMMON] int 
  5185 ;; Registers used:
  5186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5192 ;;      Params:         2       0       0       0       0
  5193 ;;      Locals:         0       2       0       0       0
  5194 ;;      Temps:          0       3       0       0       0
  5195 ;;      Totals:         2       5       0       0       0
  5196 ;;Total ram usage:        7 bytes
  5197 ;; Hardware stack levels used: 2
  5198 ;; Hardware stack levels required when called: 1
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_strcat
  5203 ;;		_SplitPacket
  5204 ;;		_CompareStrings
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208     0D9E                     _Length:	
  5209                           ;psect for function _Length
  5210                           
  5211     0D9E                     l2193:	
  5212                           ;incstack = 0
  5213                           ; Regs used in _Length: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5214                           
  5215                           
  5216                           ;main.c: 389: int Length(char *str);main.c: 390: {;main.c: 391:     int len = 0;
  5217     0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  5218     0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  5219     0DA0  01C9               	clrf	Length@len
  5220     0DA1  01CA               	clrf	Length@len+1
  5221                           
  5222                           ;main.c: 393:     while(str[len] != '\0') { len++; }
  5223     0DA2  2DA9               	goto	l2197
  5224     0DA3                     l2195:
  5225     0DA3  3001               	movlw	1
  5226     0DA4  07C9               	addwf	Length@len,f
  5227     0DA5  1803               	skipnc
  5228     0DA6  0ACA               	incf	Length@len+1,f
  5229     0DA7  3000               	movlw	0
  5230     0DA8  07CA               	addwf	Length@len+1,f
  5231     0DA9                     l2197:
  5232     0DA9  0849               	movf	Length@len,w
  5233     0DAA  0774               	addwf	Length@str,w
  5234     0DAB  00C7               	movwf	??_Length+1
  5235     0DAC  0875               	movf	Length@str+1,w
  5236     0DAD  00C6               	movwf	??_Length
  5237     0DAE  1803               	skipnc
  5238     0DAF  0AC6               	incf	??_Length,f
  5239     0DB0  1FC9               	btfss	Length@len,7
  5240     0DB1  2DB3               	goto	u1750
  5241     0DB2  03C6               	decf	??_Length,f
  5242     0DB3                     u1750:
  5243     0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  5244     0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  5245     0DB5  0846               	movf	??_Length,w
  5246     0DB6  00C8               	movwf	??_Length+2
  5247     0DB7  0848               	movf	??_Length+2,w
  5248     0DB8  00FF               	movwf	btemp+1
  5249     0DB9  0847               	movf	??_Length+1,w
  5250     0DBA  0084               	movwf	4
  5251     0DBB  120A  118A  2600  120A  158A  	fcall	stringtab
  5252     0DC0  3A00               	xorlw	0
  5253     0DC1  1D03               	skipz
  5254     0DC2  2DC4               	goto	u1761
  5255     0DC3  2DC5               	goto	u1760
  5256     0DC4                     u1761:
  5257     0DC4  2DA3               	goto	l2195
  5258     0DC5                     u1760:
  5259     0DC5                     l2199:
  5260                           
  5261                           ;main.c: 395:     return len;
  5262     0DC5  084A               	movf	Length@len+1,w
  5263     0DC6  00F5               	movwf	?_Length+1
  5264     0DC7  0849               	movf	Length@len,w
  5265     0DC8  00F4               	movwf	?_Length
  5266     0DC9                     l184:
  5267     0DC9  0008               	return
  5268     0DCA                     __end_of_Length:
  5269                           
  5270                           	psect	text26
  5271     0E06                     __ptext26:	
  5272 ;; *************** function _IRS *****************
  5273 ;; Defined at:
  5274 ;;		line 625 in file "main.c"
  5275 ;; Parameters:    Size  Location     Type
  5276 ;;		None
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;		None
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  1    wreg      void 
  5281 ;; Registers used:
  5282 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5288 ;;      Params:         0       0       0       0       0
  5289 ;;      Locals:         0       0       0       0       0
  5290 ;;      Temps:          4       0       0       0       0
  5291 ;;      Totals:         4       0       0       0       0
  5292 ;;Total ram usage:        4 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		Interrupt level 1
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301     0E06                     _IRS:	
  5302                           ;psect for function _IRS
  5303                           
  5304     0E06                     i1l2125:
  5305                           
  5306                           ;main.c: 628:     if(RCIF)
  5307     0E06  1283               	bcf	3,5	;RP0=0, select bank0
  5308     0E07  1303               	bcf	3,6	;RP1=0, select bank0
  5309     0E08  1E8C               	btfss	12,5	;volatile
  5310     0E09  2E0B               	goto	u173_21
  5311     0E0A  2E0C               	goto	u173_20
  5312     0E0B                     u173_21:
  5313     0E0B  2E25               	goto	i1l2137
  5314     0E0C                     u173_20:
  5315     0E0C                     i1l2127:
  5316                           
  5317                           ;main.c: 629:     {;main.c: 630:         dato[iS++] = RCREG;
  5318     0E0C  1683               	bsf	3,5	;RP0=1, select bank1
  5319     0E0D  1303               	bcf	3,6	;RP1=0, select bank1
  5320     0E0E  082A               	movf	_iS^(0+128),w
  5321     0E0F  3E90               	addlw	(low (_dato| (0+256)))& (0+255)
  5322     0E10  0084               	movwf	4
  5323     0E11  1283               	bcf	3,5	;RP0=0, select bank0
  5324     0E12  1303               	bcf	3,6	;RP1=0, select bank0
  5325     0E13  081A               	movf	26,w	;volatile
  5326     0E14  1783               	bsf	3,7	;select IRP bank3
  5327     0E15  0080               	movwf	0
  5328     0E16                     i1l2129:
  5329     0E16  3001               	movlw	1
  5330     0E17  00F0               	movwf	??_IRS
  5331     0E18  0870               	movf	??_IRS,w
  5332     0E19  1683               	bsf	3,5	;RP0=1, select bank1
  5333     0E1A  1303               	bcf	3,6	;RP1=0, select bank1
  5334     0E1B  07AA               	addwf	_iS^(0+128),f
  5335     0E1C                     i1l2131:
  5336                           
  5337                           ;main.c: 631:         dato[iS] = '\0';
  5338     0E1C  082A               	movf	_iS^(0+128),w
  5339     0E1D  3E90               	addlw	(low (_dato| (0+256)))& (0+255)
  5340     0E1E  0084               	movwf	4
  5341     0E1F  0180               	clrf	0
  5342     0E20                     i1l2133:
  5343                           
  5344                           ;main.c: 632:         recieved = 1;
  5345     0E20  01A7               	clrf	_recieved^(0+128)
  5346     0E21  0AA7               	incf	_recieved^(0+128),f
  5347     0E22                     i1l2135:
  5348                           
  5349                           ;main.c: 633:         RCIF = 0;
  5350     0E22  1283               	bcf	3,5	;RP0=0, select bank0
  5351     0E23  1303               	bcf	3,6	;RP1=0, select bank0
  5352     0E24  128C               	bcf	12,5	;volatile
  5353     0E25                     i1l2137:
  5354                           
  5355                           ;main.c: 636:     if(T0IF)
  5356     0E25  1D0B               	btfss	11,2	;volatile
  5357     0E26  2E28               	goto	u174_21
  5358     0E27  2E29               	goto	u174_20
  5359     0E28                     u174_21:
  5360     0E28  2E3A               	goto	i1l265
  5361     0E29                     u174_20:
  5362     0E29                     i1l2139:
  5363                           
  5364                           ;main.c: 637:     {;main.c: 638:         TMR0 = 131;
  5365     0E29  3083               	movlw	131
  5366     0E2A  0081               	movwf	1	;volatile
  5367                           
  5368                           ;main.c: 639:         milliseconds++;
  5369     0E2B  3001               	movlw	1
  5370     0E2C  07A0               	addwf	_milliseconds,f
  5371     0E2D  3000               	movlw	0
  5372     0E2E  1803               	skipnc
  5373     0E2F  3001               	movlw	1
  5374     0E30  07A1               	addwf	_milliseconds+1,f
  5375     0E31  3000               	movlw	0
  5376     0E32  1803               	skipnc
  5377     0E33  3001               	movlw	1
  5378     0E34  07A2               	addwf	_milliseconds+2,f
  5379     0E35  3000               	movlw	0
  5380     0E36  1803               	skipnc
  5381     0E37  3001               	movlw	1
  5382     0E38  07A3               	addwf	_milliseconds+3,f
  5383     0E39                     i1l2141:
  5384                           
  5385                           ;main.c: 640:         T0IF = 0;
  5386     0E39  110B               	bcf	11,2	;volatile
  5387     0E3A                     i1l265:
  5388     0E3A  0873               	movf	??_IRS+3,w
  5389     0E3B  008A               	movwf	10
  5390     0E3C  0872               	movf	??_IRS+2,w
  5391     0E3D  0084               	movwf	4
  5392     0E3E  0E71               	swapf	??_IRS+1,w
  5393     0E3F  0083               	movwf	3
  5394     0E40  0EFE               	swapf	btemp,f
  5395     0E41  0E7E               	swapf	btemp,w
  5396     0E42  0009               	retfie
  5397     0E43                     __end_of_IRS:
  5398     007E                     btemp	set	126	;btemp
  5399     007E                     wtemp0	set	126
  5400                           
  5401                           	psect	intentry
  5402     0004                     __pintentry:	
  5403                           ;incstack = 0
  5404                           ; Regs used in _IRS: [wreg-fsr0h+status,2+status,0]
  5405                           
  5406     0004                     interrupt_function:
  5407     007E                     saved_w	set	btemp
  5408     0004  00FE               	movwf	btemp
  5409     0005  0E03               	swapf	3,w
  5410     0006  00F1               	movwf	??_IRS+1
  5411     0007  0804               	movf	4,w
  5412     0008  00F2               	movwf	??_IRS+2
  5413     0009  080A               	movf	10,w
  5414     000A  00F3               	movwf	??_IRS+3
  5415     000B  120A  158A  2E06   	ljmp	_IRS
  5416                           
  5417                           	psect	idloc
  5418                           
  5419                           ;Config register IDLOC0 @ 0x2000
  5420                           ;	unspecified, using default values
  5421     2000                     	org	8192
  5422     2000  3FFF               	dw	16383
  5423                           
  5424                           ;Config register IDLOC1 @ 0x2001
  5425                           ;	unspecified, using default values
  5426     2001                     	org	8193
  5427     2001  3FFF               	dw	16383
  5428                           
  5429                           ;Config register IDLOC2 @ 0x2002
  5430                           ;	unspecified, using default values
  5431     2002                     	org	8194
  5432     2002  3FFF               	dw	16383
  5433                           
  5434                           ;Config register IDLOC3 @ 0x2003
  5435                           ;	unspecified, using default values
  5436     2003                     	org	8195
  5437     2003  3FFF               	dw	16383
  5438                           
  5439                           	psect	config
  5440                           
  5441                           ;Config register CONFIG @ 0x2007
  5442                           ;	Oscillator Selection bits
  5443                           ;	FOSC = HS, HS oscillator
  5444                           ;	Watchdog Timer Enable bit
  5445                           ;	WDTE = OFF, WDT disabled
  5446                           ;	Power-up Timer Enable bit
  5447                           ;	PWRTE = ON, PWRT enabled
  5448                           ;	Brown-out Reset Enable bit
  5449                           ;	BOREN = ON, BOR enabled
  5450                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  5451                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  5452                           ;	Data EEPROM Memory Code Protection bit
  5453                           ;	CPD = OFF, Data EEPROM code protection off
  5454                           ;	Flash Program Memory Write Enable bits
  5455                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  5456                           ;	In-Circuit Debugger Mode bit
  5457                           ;	DEBUG = 0x1, unprogrammed default
  5458                           ;	Flash Program Memory Code Protection bit
  5459                           ;	CP = OFF, Code protection off
  5460     2007                     	org	8199
  5461     2007  3FF2               	dw	16370

Data Sizes:
    Strings     104
    Constant    19
    Data        6
    BSS         108
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     36      78
    BANK1            80      7      25
    BANK3            96      0      50
    BANK2            96     58      58

Pointer List with Targets:

    UART_TxString@str	PTR const unsigned char  size(1) Largest target is 14
		 -> main@packet_206(BANK2[14]), main@packet_199(BANK2[14]), main@packet(BANK2[14]), 

    CompareStrings@str2	PTR unsigned char  size(2) Largest target is 17
		 -> datoTastierino(BANK0[17]), STR_3(CODE[5]), 

    CompareStrings@str1	PTR unsigned char  size(1) Largest target is 17
		 -> datoSeriale(BANK0[17]), id_dest(BANK1[4]), 

    strcopy@source	PTR unsigned char  size(1) Largest target is 5
		 -> SplitPacket@part(BANK0[5]), 

    strcopy@dest	PTR unsigned char  size(1) Largest target is 17
		 -> datoSeriale(BANK0[17]), id_dest(BANK1[4]), 

    SplitPacket@pkt	PTR unsigned char  size(1) Largest target is 50
		 -> dato(BANK3[50]), 

    strcat@source	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[4]), STR_13(CODE[5]), STR_8(CODE[4]), STR_7(CODE[5]), 
		 -> STR_1(CODE[5]), main@num_rand_s(BANK2[16]), 

    strcat@dest	PTR unsigned char  size(1) Largest target is 14
		 -> main@packet_206(BANK2[14]), main@packet_199(BANK2[14]), main@packet(BANK2[14]), 

    Length@str	PTR unsigned char  size(2) Largest target is 50
		 -> datoSeriale(BANK0[17]), datoTastierino(BANK0[17]), main@packet_206(BANK2[14]), main@packet_199(BANK2[14]), 
		 -> STR_3(CODE[5]), id_dest(BANK1[4]), dato(BANK3[50]), main@packet(BANK2[14]), 

    ConcatToPacket@str	PTR unsigned char  size(2) Largest target is 16
		 -> STR_14(CODE[4]), STR_13(CODE[5]), STR_8(CODE[4]), STR_7(CODE[5]), 
		 -> STR_1(CODE[5]), main@num_rand_s(BANK2[16]), 

    ConcatToPacket@pkt	PTR unsigned char  size(1) Largest target is 14
		 -> main@packet_206(BANK2[14]), main@packet_199(BANK2[14]), main@packet(BANK2[14]), 

    ConvertToString@str	PTR unsigned char  size(1) Largest target is 16
		 -> main@num_rand_s(BANK2[16]), 

    lcdPrint@str	PTR unsigned char  size(2) Largest target is 18
		 -> datoTastierino(BANK0[17]), STR_12(CODE[17]), STR_11(CODE[16]), STR_10(CODE[13]), 
		 -> STR_9(CODE[15]), STR_6(CODE[12]), STR_5(CODE[13]), STR_4(CODE[18]), 
		 -> main@num_rand_s(BANK2[16]), 


Critical Paths under _main in COMMON

    _main->_lcdSend
    _read_NumPad->___awmod
    _read_NumPad->_srand
    _rand->___lmul
    _CompareStrings->_Length
    _lcdPrint->_lcdSend
    _init_LCD->_lcdSend
    _UART_TxString->_UART_TxChar
    _SplitPacket->_Length
    _pow->___wmul
    _strcat->_Length

Critical Paths under _IRS in COMMON

    None.

Critical Paths under _main in BANK0

    _read_NumPad->___awmod
    _rand->___lmul
    ___awmod->_rand
    _CompareStrings->_Length
    _lcdPrint->_lcdSend
    _init_PIC->_UART_init
    _init_LCD->_lcdSend
    _UART_init->___aldiv
    _SplitPacket->_strcopy
    _ConvertToString->___aldiv
    _pow->___wmul
    ___aldiv->_pow
    _ConcatToPacket->_strcat
    _strcat->_Length

Critical Paths under _IRS in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ConvertToString

Critical Paths under _IRS in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _IRS in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _IRS in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                58    58      0   19272
                                              0 BANK2     58    58      0
                     _CompareStrings
                     _ConcatToPacket
                    _ConvertToString
                        _SplitPacket
                      _UART_TxString
                           _init_PIC
                           _lcdPrint
                            _lcdSend
                        _read_NumPad
 ---------------------------------------------------------------------------------
 (1) _read_NumPad                                          2     2      0    2195
                                             25 BANK0      2     2      0
                     _CompareStrings
                            ___awmod
                               _rand
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     121
                                              4 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 7     5      2     496
                                             12 BANK0      7     5      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              5 COMMON     1     1      0
                                             19 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) _CompareStrings                                       6     4      2     965
                                              5 BANK0      6     4      2
                             _Length
 ---------------------------------------------------------------------------------
 (1) _lcdPrint                                             7     5      2    2712
                                              2 BANK0      7     5      2
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _init_PIC                                             0     0      0    2878
                          _UART_init
                           _init_LCD
                        _init_NumPad
                        _init_Timer0
 ---------------------------------------------------------------------------------
 (2) _init_Timer0                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_NumPad                                          1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_LCD                                             2     2      0    1772
                                              2 BANK0      2     2      0
                            _lcdSend
 ---------------------------------------------------------------------------------
 (1) _lcdSend                                              4     3      1    1772
                                              4 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART_init                                            8     4      4    1106
                                             28 BANK0      8     4      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (1) _UART_TxString                                        4     4      0     269
                                              0 BANK0      4     4      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _SplitPacket                                         17    17      0    1601
                                              6 BANK0     17    17      0
                             _Length
                            _strcopy
 ---------------------------------------------------------------------------------
 (2) _strcopy                                              7     6      1     506
                                              4 COMMON     1     0      1
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _ConvertToString                                     13     8      5    3494
                                             28 BANK0      6     1      5
                                              0 BANK1      7     7      0
                            ___aldiv
                            ___almod
                             ___lmul
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                  9     7      2     663
                                              4 BANK0      9     7      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     316
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     496
                                              4 COMMON     1     1      0
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___almod                                             11     3      8     613
                                              4 COMMON     1     1      0
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     985
                                             13 BANK0     15     7      8
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (1) _ConcatToPacket                                       7     4      3    2525
                                             17 BANK0      7     4      3
                             _strcat
 ---------------------------------------------------------------------------------
 (2) _strcat                                              12    10      2     845
                                              5 BANK0     12    10      2
                             _Length
 ---------------------------------------------------------------------------------
 (4) _Length                                               7     5      2     459
                                              4 COMMON     2     0      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _IRS                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CompareStrings
     _Length
   _ConcatToPacket
     _strcat
       _Length
   _ConvertToString
     ___aldiv
       _pow (ARG)
         ___wmul
     ___almod
     ___lmul
     _pow
   _SplitPacket
     _Length
     _strcopy
   _UART_TxString
     _UART_TxChar
   _init_PIC
     _UART_init
       ___aldiv
     _init_LCD
       _lcdSend
     _init_NumPad
     _init_Timer0
   _lcdPrint
     _lcdSend
   _lcdSend
   _read_NumPad
     _CompareStrings
     ___awmod
       _rand (ARG)
         ___lmul
     _rand
     _srand

 _IRS (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      32       9       52.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60     3A      3A      11       60.4%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      7      19       7       31.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      DD      12        0.0%
ABS                  0      0      DD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 14 16:32:53 2023

                          pc 0002             ??_CompareStrings 004D                           _iS 00AA  
                         _iT 00A9                           fsr 0004          ___wmul@multiplicand 0048  
                        l211 07FA                          l205 04EA                          l142 05FF  
                        l230 0399                          l151 0D9D                          l223 0D03  
                        l215 0FFF                          l145 0D26                          l163 0E05  
                        l243 044B                          l252 0D11                          l148 05E0  
                        l173 034A                          l157 0F5F                          l190 0773  
                        l246 0E88                          l351 0D5A                          l184 0DC9  
                        l416 04FF                          l353 0D72                          l249 0D05  
                        l178 0FA9                          l426 0587                          l258 0D4B  
                        l187 0753                          l429 069F                          l365 0F17  
                        l517 07CE                          l439 0711                          l804 0CF8  
                        l807 0ECF                          _IRS 0E06                          _pow 0DCA  
                        fsr0 0004                          indf 0000                 ___awmod@sign 005E  
                       ?_IRS 0070                         l2211 0D68                         l2203 0D4C  
                       l2221 0EDE                         l2213 0D6E                         l2205 0D4E  
                       l2301 0E57                         l2231 04EB                         l2223 0EF5  
                       l2207 0D54                         l2303 0E58                         l2311 0588  
                       l2241 0512                         l2233 04EE                         l2401 0692  
                       l2225 0EFE                         l2217 0ED0                         l2209 0D61  
                       l2305 0E85                         l2321 05B2                         l2313 058C  
                       l2251 0536                         l2243 051A                         l2235 04F2  
                       l2411 06C6                         l2403 06A3                         l2227 0F0F  
                       l2219 0EDA                         l2307 0E86                         l2331 05D9  
                       l2323 05BD                         l2315 0596                         l2261 0569  
                       l2253 053F                         l2245 0522                         l2237 0503  
                       l2413 06CA                         l2421 06F9                         l2405 06AE  
                       l2309 0E87                         l2181 0D7C                         l2173 0D74  
                       l2325 05C4                         l2317 0599                         l2333 0CF9  
                       l2341 0D1E                         l2501 03A8                         l2255 0551  
                       l2247 0525                         l2263 056F                         l2239 050E  
                       l2423 06FE                         l2415 06DC                         l2407 06B6  
                       l2351 0DF2                         l2343 0DCD                         l2191 0D9A  
                       l2183 0D7E                         l2175 0D77                         l2327 05CB  
                       l2319 05A0                         l2335 0D12                         l2271 0FAD  
                       l2431 0777                         l2511 03FC                         l2503 03A9  
                       l2193 0D9E                         l2361 0727                         l2265 0574  
                       l2257 055F                         l2249 0532                         l2425 0709  
                       l2417 06EA                         l2409 06B9                         l2353 0DFF  
                       l2345 0DD1                         l2601 0462                         l2185 0D83  
                       l2177 0D78                         l2329 05D2                         l2337 0D16  
                       l2281 0FD5                         l2273 0FD1                         l2441 078B  
                       l2433 077B                         l2521 0414                         l2513 0401  
                       l2505 03AF                         l2195 0DA3                         l2363 0747  
                       l2267 057F                         l2259 0560                         l2419 06F3  
                       l2347 0DD4                         l2371 07D2                         l2611 0490  
                       l2603 0465                         l2187 0D8D                         l2179 0D79  
                       l2339 0D1A                         l2291 0FFE                         l2451 07A3  
                       l2443 0791                         l2435 0780                         l2523 0429  
                       l2515 0405                         l2507 03B6                         l2531 0441  
                       l2197 0DA9                         l2365 074D                         l2357 0715  
                       l2349 0DEC                         l2541 0253                         l2373 07D5  
                       l2613 0495                         l2605 0473                         l2189 0D90  
                       l2461 07C5                         l2453 07AD                         l2445 0794  
                       l2437 0782                         l2429 0774                         l2381 0CF0  
                       l2533 0445                         l2525 042F                         l2509 03EB  
                       l2517 0408                         l2701 0138                         l2199 0DC5  
                       l2367 076F                         l2359 0717                         l2551 02B1  
                       l2543 025A                         l2535 0241                         l2375 07E3  
                       l2615 049A                         l2607 047D                         l2623 04B1  
                       l2631 04D4                         l2391 0D05                         l2295 0E43  
                       l2287 0FEF                         l2279 0FD3                         l2463 07CA  
                       l2455 07B3                         l2447 079B                         l2439 0786  
                       l2383 0E89                         l2519 040D                         l2527 0433  
                       l2471 0353                         l2711 0150                         l2703 013F  
                       l2553 02CB                         l2561 032C                         l2545 0279  
                       l2537 0247                         l2377 07E9                         l2617 04A3  
                       l2625 04C4                         l2609 048A                         l2393 0D0B  
                       l2297 0E4B                         l2289 0FF3                         l2457 07BA  
                       l2449 079F                         l2385 0EAA                         l2529 0438  
                       l2481 0364                         l2721 0167                         l2713 0152  
                       l2705 014A                         l2641 005F                         l2563 033F  
                       l2555 02F6                         l2547 027E                         l2539 024D  
                       l2379 07F4                         l2627 04CC                         l2619 04A8  
                       l2395 0D0F                         l2299 0E54                         l2467 05E1  
                       l2571 0F43                         l2459 07C0                         l2387 0EB8  
                       l2491 037D                         l2731 018C                         l2723 0175  
                       l2715 0156                         l2707 014E                         l2651 009A  
                       l2643 0064                         l2581 0F88                         l2573 0F63  
                       l2397 068B                         l2557 031E                         l2549 0284  
                       l2629 04CE                         l2565 0F18                         l2493 038C  
                       l2477 0354                         l2469 034B                         l2741 01BF  
                       l2733 0193                         l2717 0158                         l2709 014F  
                       l2725 017C                         l2661 00B3                         l2653 009E  
                       l2645 0070                         l2583 0F90                         l2575 0F73  
                       l2399 068E                         l2559 0326                         l2591 0D2D  
                       l2567 0F1D                         l2495 0397                         l2487 0365  
                       l2479 0359                         l2751 01EA                         l2735 019E  
                       l2727 0181                         l2743 01C1                         l2719 0159  
                       l2671 00D0                         l2663 00B5                         l2655 00A0  
                       l2647 0077                         l2639 005A                         l2585 0F96  
                       l2577 0F79                         l2809 04B6                         l2593 0D38  
                       l2569 0F3B                         l2497 039D                         l2489 0372  
                       l2761 01F7                         l2753 01EE                         l2745 01C6  
                       l2737 01B0                         l2729 0187                         l2681 00FC  
                       l2673 00D5                         l2665 00B6                         l2657 00A1  
                       l2649 008F                         l2587 0FA3                         l2579 0F81  
                       l2595 0D40                         l2499 03A3                         l2771 0222  
                       l2763 01F8                         l2755 01F0                         l2747 01CD  
                       l2739 01BB                         l2691 0119                         l2683 00FE  
                       l2675 00DB                         l2667 00C4                         l2659 00AF  
                       l2597 044F                         l2589 0D2A                         l2773 0227  
                       l2765 0206                         l2757 01F1                         l2749 01D8  
                       l2693 0124                         l2685 0100                         l2677 00E3  
                       l2669 00CA                         l2599 0453                         l2775 022E  
                       l2767 0214                         l2759 01F5                         l2687 0107  
                       l2679 00F4                         l2695 012F                         l2777 0239  
                       l2769 021A                         l2697 0132                         l2689 0112  
                       l2699 0133                         ?_pow 004A                         STR_1 067E  
                       STR_3 067E                         STR_4 0623                         STR_5 0665  
                       STR_6 0672                         STR_7 067E                         STR_8 0687  
                       STR_9 0656                         _T0IF 005A                         u2000 0DFF  
                       u2001 0DFE                         u2010 0731                         u2020 075D  
                       u2005 0DFB                         u2030 076F                         u2110 06CA  
                       u2031 076E                         u2111 06C9                         u2120 06DC  
                       u2040 07F4                         u2200 07A3                         u2121 06DB  
                       u2105 06BB                         u2041 07F3                         u2201 07A2  
                       u2210 07AD                         u2050 0EC7                         u2211 07AC  
                       u2140 06F9                         u2060 0D0B                         u2300 03AF  
                       u2141 06F8                         u2125 06D8                         u2061 0D0A  
                       u2301 03AE                         u2150 06FE                         u2070 0692  
                       u2230 07C0                         u2310 03B6                         u2151 06FD  
                       u2135 06EB                         u2071 0691                         u2231 07BF  
                       u2215 07A9                         u2055 0EC2                         u2311 03B5  
                       u2080 06A3                         u2400 0F29                         u2240 07C5  
                       u2160 077B                         u2320 03FC                         u2081 06A2  
                       u2241 07C4                         u2225 07B4                         u2161 077A  
                       u2321 03FB                         u2090 06B6                         u2410 0F4D  
                       u2170 0786                         u2330 040D                         u2250 0372  
                       u2091 06B5                         u2171 0785                         u2331 040C  
                       u2251 0371                         u2420 0F5F                         u2180 0791  
                       u2340 0414                         u2260 038C                         u2500 00E3  
                       u2421 0F5E                         u2181 0790                         u2341 0413  
                       u2261 038B                         u2501 00E2                         u2430 0F79  
                       u2350 0441                         u2510 00F4                         u2431 0F78  
                       u2351 0440                         u2511 00F3                         u1800 0D6E  
                       u2440 0D4B                         u2360 044B                         u2280 03A3  
                       u2520 00FC                         u1801 0D6D                         u2441 0D4A  
                       u2361 044A                         u2281 03A2                         u2521 00FB  
                       u1810 0EDE                         u2370 024D                         u2450 0473  
                       u2290 03A8                         u2530 0138                         u1811 0EDD  
                       u2371 024C                         u2451 0472                         u2195 0795  
                       u2291 03A7                         u2275 038F                         u2531 0137  
                       u1900 0536                         u2380 02B0                         u2460 047D  
                       u2540 0181                         u1901 0535                         u1821 0EE7  
                       u2381 02AF                         u2461 047C                         u2541 0180  
                       u1750 0DB3                         u1822 0EEE                         u2390 033F  
                       u2470 04EA                         u2550 0187                         u1823 0EF5  
                       u2391 033E                         u2471 04E9                         u2607 0378  
                       u2551 0186                         _PIE1 008C                         u1760 0DC5  
                       u1920 0551                         u2560 018C                         u2480 0070  
                       u1761 0DC4                         u1921 0550                         u2617 0592  
                       u2561 018B                         u2481 006F                         u1850 0F0F  
                       u1770 0D54                         u2570 01C6                         u2490 00D5  
                       u1915 0538                         u1851 0F0E                         u1835 0EF7  
                       u1771 0D53                         u2395 033B                         u2475 04E6  
                       u2627 05A6                         u2571 01C5                         u2491 00D4  
                       u1940 056F                         u1860 04F2                         u2580 0222  
                       u1941 056E                         u1925 054D                         u1861 04F1  
                       u1845 0EFF                         u2637 05B8                         u2581 0221  
                       u2485 006C                         u1950 0574                         u1870 0503  
                       u2590 0227                         u1951 0573                         u1935 0561  
                       u1871 0502                         u2647 0D89                         u2591 0226  
                       u1880 0522                         u1960 0FD1                         u1881 0521  
                       u1785 0D5B                         u2657 0D96                         u1961 0FD0  
                       u1970 0FEE                         u1795 0D62                         u1971 0FED  
                       u1980 0FFE                         u1981 0FFD                         u1965 0FCD  
                       u1990 0E66                         u1895 0527                         u1995 0E61  
                       _RCIF 0065                         _PIR1 000C                         _TMR0 0001  
                       _fail 00A4                         _dato 0190                         _main 005A  
          ConcatToPacket@pkt 005D                         _keyf 0076                         _keys 0610  
                       _rand 0E89            ConcatToPacket@str 0057                         btemp 007E  
                       _type 00AB                         pow@b 004E                         pow@i 004F  
                       pow@n 0051                         start 000E                        ??_IRS 0070  
                      ??_pow 004C                 ?_init_NumPad 0070                 ?_init_Timer0 0070  
            __end_of___aldiv 0588              __end_of___almod 0712                        ?_main 0070  
                      ?_rand 0052                        STR_10 0665                        STR_11 0646  
                      STR_12 0635                        STR_13 067E                        STR_14 0683  
            __end_of___awmod 07CF                 ?_read_NumPad 0070                        i1l265 0E3A  
                      _RCREG 001A                        _RCSTA 0018                        _SPBRG 0099  
                      _PORTB 0006                        _PORTD 0008                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                        _TXREG 0019  
                      _TXSTA 0098              __end_of_colMask 0623          ___lmul@multiplicand 004A  
            __end_of_lcdSend 0D9E                        _randx 006A                        _srand 0CF0  
                      pclath 000A              __end_of_rowMask 0620                        status 0003  
                      wtemp0 007E              __end_of_strcopy 07FB              __initialization 0011  
               __end_of_main 0241                 __end_of_keys 061C                 __end_of_rand 0ED0  
                     ??_main 0076                       ??_rand 0054            strcat@length_dest 0055  
                     ?_srand 0074                       i1l2131 0E1C                       i1l2141 0E39  
                     i1l2133 0E20                       i1l2125 0E06                       i1l2135 0E22  
                     i1l2127 0E0C                       i1l2129 0E16                       i1l2137 0E25  
                     i1l2139 0E29                       _INTCON 000B                       u173_20 0E0C  
                     u173_21 0E0B                       u174_20 0E29                       u174_21 0E28  
               ?_UART_TxChar 0070                       _Length 0D9E             __end_of_lcdPrint 0F60  
                     ___lmul 0ED0                    ??___aldiv 005B                    ??___almod 0074  
                     ___wmul 0D4C            __end_of_UART_init 0E89                    ??___awmod 0075  
        ConcatToPacket@delim 0059             __end_of_init_LCD 05E1             __end_of_init_PIC 0600  
                     _old_iT 00A8              ___awmod@divisor 0059              ___awmod@counter 005D  
                  ??_lcdSend 0046                       _source 00AC                       _strcat 0712  
               __pdataCOMMON 0079                       saved_w 007E                       pow@exp 004A  
                     srand@x 0074                    ??_strcopy 0046               _datoTastierino 0024  
    __end_of__initialization 0056        __end_of_UART_TxString 0D4C                ??_SplitPacket 004C  
             __pcstackCOMMON 0070                 __pidataBANK0 07FB                 __pidataBANK1 0003  
              __end_of_srand 0CF9                      ??_srand 0076                   __pbssBANK0 0020  
                 __pbssBANK1 00A0                   __pbssBANK3 0190                 strcat@source 004B  
                    ?_Length 0074                   __pmaintext 005A                      ?___lmul 0046  
                    ?___wmul 0046                   __pintentry 0004               ___lmul@product 004E  
        __end_of_SplitPacket 04EB                      ?_strcat 004B               main@packet_206 012E  
             main@packet_199 0120                    ?_lcdPrint 0048       ConvertToString@n_cifre 00B7  
                 __stringtab 0600                    ?_init_LCD 0070                    ?_init_PIC 0070  
          ??_ConvertToString 0067                      ___aldiv 04EB                      ___almod 068B  
                    ___awmod 0774                      _colMask 0620                      _colScan 0078  
                    _id_dest 00AD                      _lcdSend 0D73                      __ptext1 034B  
                    __ptext2 0CF0                      __ptext3 0E89                      __ptext4 0774  
                    __ptext5 0FAA                      __ptext6 0F18                      __ptext7 05E1  
                    __ptext8 0D12                      __ptext9 0CF9               _ConcatToPacket 0F60  
                    _compare 00A6                      _maxFail 00B8             ___awmod@dividend 005B  
           ___aldiv@dividend 0057                   _keypressed 0079                      _rowMask 061C  
                    _rowScan 0077                      _success 00A5                   ??_lcdPrint 004A  
                    clrloop0 0CE9                      _strcopy 07CF         end_of_initialization 0056  
             main@num_rand_s 0110                   ??_init_LCD 0048                   ??_init_PIC 0076  
             UART_TxString@n 0047                  _SplitPacket 044C             ___aldiv@quotient 005E  
                    strcat@n 0053       __end_of_ConcatToPacket 0FAA                    _UART_init 0E43  
                  _PORTEbits 0009                    _TRISEbits 0089                   main@packet 013C  
                  Length@len 0049                    Length@str 0074               __end_of_Length 0DCA  
             __end_of___lmul 0F18               __end_of___wmul 0D73              ?_ConcatToPacket 0057  
              __pidataCOMMON 07FF                   ?_UART_init 0062               __end_of_strcat 0774  
        start_initialization 0011                  __end_of_IRS 0E43                  __end_of_pow 0E06  
                   ??_Length 0046              CompareStrings@i 0050                     ??___lmul 0074  
                   ??___wmul 0074                ??_init_NumPad 0074                  __pdataBANK0 006A  
                __pdataBANK1 00B8                ??_init_Timer0 0074                ??_read_NumPad 005F  
                   ??_strcat 004D                  __pbssCOMMON 0076               _CompareStrings 0FAA  
                  ___latbits 0002                __pcstackBANK0 0046                __pcstackBANK1 00B1  
              __pcstackBANK2 0110              _ConvertToString 0241                  _datoSeriale 0035  
                   ?___aldiv 0053                     ?___almod 0046                     ?___awmod 0059  
           ___almod@dividend 004A                    __pstrings 0600                  ??_UART_init 0066  
                   ?_lcdSend 0074       __end_of_CompareStrings 1000          __end_of_init_NumPad 0D04  
        __end_of_init_Timer0 0D27                UART_TxChar@ch 0075                  strcopy@dest 0049  
        __end_of_read_NumPad 044C                     ?_strcopy 0074              ___aldiv@divisor 0053  
          interrupt_function 0004              ___aldiv@counter 005C               ___wmul@product 0074  
               _milliseconds 0020                    clear_ram0 0CE8                ??_UART_TxChar 0074  
              _UART_TxString 0D27                 ?_SplitPacket 0070                 _old_num_rand 00A0  
           ConvertToString@i 00B5             ConvertToString@j 00B3             ConvertToString@n 0062  
                  lcdPrint@n 004D                  __stringbase 060F            ___wmul@multiplier 0046  
            ?_CompareStrings 004B      __end_of_ConvertToString 034B            ___lmul@multiplier 0046  
         CompareStrings@str1 004F           CompareStrings@str2 004B               ?_UART_TxString 0070  
           ??_ConcatToPacket 005A          __end_of_UART_TxChar 0D12                  _init_NumPad 0CF9  
                _init_Timer0 0D12           __end_of__stringtab 0610                strcopy@source 0074  
                _read_NumPad 034B                   strcat@dest 0052                     __ptext10 0588  
                   __ptext11 0D73                     __ptext20 0ED0                     __ptext12 0E43  
                   __ptext21 068B                     __ptext13 0D27                     __ptext22 04EB  
                   __ptext14 0D04                     __ptext23 0F60                     __ptext15 044C  
                   __ptext24 0712                     __ptext16 07CF                     __ptext25 0D9E  
                   __ptext17 0241                     __ptext26 0E06                     __ptext18 0DCA  
                   __ptext19 0D4C                     _lcdPrint 0F18             UART_TxString@str 0049  
            ___almod@divisor 0046  ConcatToPacket@packet_length 005B              ___almod@counter 004E  
                   _init_LCD 0588                     _init_PIC 05E1                     _recieved 00A7  
                   _num_rand 00A2             ?_ConvertToString 0062                     intlevel1 0000  
          UART_init@baudrate 0062              ??_UART_TxString 0046          ConvertToString@temp 00B1  
         SplitPacket@section 0056                    stringcode 060A                  _UART_TxChar 0D04  
                 _OPTION_REG 0081            SplitPacket@i_part 0058                  lcdSend@dato 0075  
                lcdSend@tipo 0074           ConvertToString@str 0066                     strcopy@n 004A  
                   stringdir 060A                     stringtab 0600                 ___aldiv@sign 005D  
                lcdPrint@str 0048                 ___almod@sign 004F              SplitPacket@part 0051  
             SplitPacket@len 004F               SplitPacket@pkt 005A                 SplitPacket@i 005B  
